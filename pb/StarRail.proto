syntax = "proto3";

package pb;
option go_package = "./pb";

enum PlayerActionType {
	PLAYER_ACTION_NONE = 0;
	PLAYER_ACTION_REGISTER = 1;
	PLAYER_ACTION_LOGIN = 2;
	PLAYER_ACTION_LOGOUT = 3;
	PLAYER_ACTION_ADD_EXP = 4;
	PLAYER_ACTION_LEVEL_UP = 5;
	PLAYER_ACTION_ADD_MATERIAL = 6;
	PLAYER_ACTION_SAVE_STAT = 7;
	PLAYER_ACTION_TRAVEL_BROCHURE_INTERACT = 8;
	PLAYER_ACTION_RECHARGE = 101;
	PLAYER_ACTION_BUY_GOODS = 102;
	PLAYER_ACTION_ADD_COIN = 103;
	PLAYER_ACTION_MONTH_CARD_DAILY_HCOIN = 104;
	PLAYER_ACTION_MONTH_CARD_BUY_MCOIN = 105;
	PLAYER_ACTION_RECHARGE_FREE_COIN = 106;
	PLAYER_ACTION_ADD_MONTH_CARD = 107;
	PLAYER_ACTION_RECHARGE_GIFT_PAY = 108;
	PLAYER_ACTION_RECHARGE_GIFT_FREE = 109;
	PLAYER_ACTION_RECHARGE_BENEFIT = 110;
	PLAYER_ACTION_RECHARGE_GIFT_TAKE_REWARD = 111;
	PLAYER_ACTION_RECHARGE_GIFT_REACH = 112;
	PLAYER_ACTION_RECHARGE_BENEFIT_REACH = 113;
	PLAYER_ACTION_MISSION_ACCEPT = 201;
	PLAYER_ACTION_MISSION_FINISH = 202;
	PLAYER_ACTION_MISSION_FAIL = 203;
	PLAYER_ACTION_MAIN_MISSION_ACCEPT = 204;
	PLAYER_ACTION_SUB_MISSION_ACCEPT = 205;
	PLAYER_ACTION_MAIN_MISSION_FINISH = 206;
	PLAYER_ACTION_SUB_MISSION_FINISH = 207;
	PLAYER_ACTION_DAILY_TASK_FINISH = 208;
	PLAYER_ACTION_DAILY_TASK_TAKE_REWARD = 209;
	PLAYER_ACTION_NPC_TALK_REWARD = 210;
	PLAYER_ACTION_MAIN_MISSION_RECOVER = 211;
	PLAYER_ACTION_MAIN_MISSION_DISABLE = 212;
	PLAYER_ACTION_CONSUME_ITEM_SUB_MISSION_FINISH = 213;
	PLAYER_ACTION_ITEM_MONITOR_ALL_SOURCES = 999;
	PLAYER_ACTION_GM = 1001;
	PLAYER_ACTION_CUSTOM_OP = 1002;
	PLAYER_ACTION_CHECK_SUM = 1003;
	PLAYER_ACTION_PLAYER_LOCATION = 1004;
	PLAYER_ACTION_CHANGE_LANGUAGE = 1005;
	PLAYER_ACTION_CLIENT_REPORT = 1006;
	PLAYER_ACTION_ACE_REPORT = 1007;
	PLAYER_ACTION_PLAYER_POWER_INFO = 1008;
	PLAYER_ACTION_DAILY_REFRESH = 1009;
	PLAYER_ACTION_AVATAR_VALUE_INFO = 1010;
	PLAYER_ACTION_MOVE_CHECK_FAILED_REPORT = 1011;
	PLAYER_ACTION_BATTLE_FAILED_REPORT = 1012;
	PLAYER_ACTION_SECURITY_REPORT = 1013;
	PLAYER_ACTION_AVATAR_PROMOTION = 1101;
	PLAYER_ACTION_AVATAR_ADD = 1103;
	PLAYER_ACTION_AVATAR_USE_EXP_ITEM = 1104;
	PLAYER_ACTION_AVATAR_LEVEL_UP = 1105;
	PLAYER_ACTION_SKILL_TREE_UP = 1106;
	PLAYER_ACTION_AVATAR_HP_CHANGE = 1107;
	PLAYER_ACTION_AVATAR_MP_CHANGE = 1108;
	PLAYER_ACTION_AVATAR_ADD_EXP = 1109;
	PLAYER_ACTION_AVATAR_RANK_UP = 1110;
	PLAYER_ACTION_AVATAR_REPEATED = 1111;
	PLAYER_ACTION_MP_MAX_CHANGE = 1112;
	PLAYER_ACTION_AVATAR_TAKE_PROMOTION_REWARD = 1113;
	PLAYER_ACTION_AVATAR_RELIC_AFFIX_INFO = 1114;
	PLAYER_ACTION_AVATAR_MARK = 1115;
	PLAYER_ACTION_AVATAR_SYSTEM_POWER_RESET = 1116;
	PLAYER_ACTION_AVATAR_CHANGE_PATH = 1119;
	PLAYER_ACTION_SET_GROWTH_TARGET_AVATAR = 1120;
	PLAYER_ACTION_DEL_AVATAR = 1121;
	PLAYER_ACTION_AVATAR_SKIN_CHANGE = 1122;
	PLAYER_ACTION_SET_GROWTH_TARGET_FUNCTION_CONFIG = 1123;
	PLAYER_ACTION_AVATAR_SKIN_ACTIVITY_REISSUE = 1124;
	PLAYER_ACTION_SET_AVATAR_ENHANCED_ID = 1125;
	PLAYER_ACTION_STAGE_BEGIN = 1202;
	PLAYER_ACTION_STAGE_END = 1203;
	PLAYER_ACTION_COCOON_STAGE_BEGIN = 1205;
	PLAYER_ACTION_COCOON_STAGE_END = 1206;
	PLAYER_ACTION_FARM_ELEMENT_END = 1207;
	PLAYER_ACTION_ELEMENT_STAGE_END = 1208;
	PLAYER_ACTION_COCOON_SWEEP = 1209;
	PLAYER_ACTION_FARM_ELEMENT_SWEEP = 1210;
	PLAYER_ACTION_RECOVER_STAMINA = 1301;
	PLAYER_ACTION_EXCHANGE_STAMINA = 1302;
	PLAYER_ACTION_LOGIN_REWARD = 1303;
	PLAYER_ACTION_MODIFY_NICKNAME = 1304;
	PLAYER_ACTION_GET_LEVEL_REWARD = 1305;
	PLAYER_ACTION_WORLD_LEVEL_UP = 1306;
	PLAYER_ACTION_ADD_STAMINA = 1307;
	PLAYER_ACTION_GAMEPLAY_BIRTHDAY_REWARD_MAIL = 1308;
	PLAYER_ACTION_RECHARGE_REBATE_REWARD = 1309;
	PLAYER_ACTION_GAMEPLAY_BIRTHDAY_SET = 1310;
	PLAYER_ACTION_RESERVE_STAMINA_EXCHANGE = 1311;
	PLAYER_ACTION_RESERVE_STAMINA_ADD = 1312;
	PLAYER_ACTION_RESERVE_STAMINA_CHANGE = 1313;
	PLAYER_ACTION_NOW_STAMINA = 1314;
	PLAYER_ACTION_FTC_RESET_NICKNAME = 1315;
	PLAYER_ACTION_MAIL = 1401;
	PLAYER_ACTION_MAIL_OP_BY_USER = 1402;
	PLAYER_ACTION_MAIL_OP_BY_MUIP = 1403;
	PLAYER_ACTION_MAIL_OP_BY_GM = 1404;
	PLAYER_ACTION_MAIL_OP_BY_FULL = 1405;
	PLAYER_ACTION_MAIL_OP_BY_EXPIRE = 1406;
	PLAYER_ACTION_MAIL_OP_BY_INTERNAL = 1407;
	PLAYER_ACTION_ADD_MAIL = 1408;
	PLAYER_ACTION_DEL_MAIL = 1409;
	PLAYER_ACTION_TAKE_ATTACHMENT = 1410;
	PLAYER_ACTION_READ_MAIL = 1411;
	PLAYER_ACTION_BATTLE_AVATAR = 1501;
	PLAYER_ACTION_BATTLE_MONSTER = 1502;
	PLAYER_ACTION_BATTLE_END = 1504;
	PLAYER_ACTION_BATTLE_REPLAY = 1505;
	PLAYER_ACTION_BATTLE_AVATAR_DEATH = 1506;
	PLAYER_ACTION_BATTLE_SWITCH_PHASE = 1507;
	PLAYER_ACTION_BATTLE_MONSTER_SKILL = 1508;
	PLAYER_ACTION_BATTLE_REBATTLE = 1509;
	PLAYER_ACTION_BATTLE_AVATAR_SERVANT = 1510;
	PLAYER_ACTION_MISSION_REWARD = 1602;
	PLAYER_ACTION_QUEST_ACCEPT = 1603;
	PLAYER_ACTION_QUEST_FINISH = 1604;
	PLAYER_ACTION_QUEST_REMOVE = 1605;
	PLAYER_ACTION_QUEST_REWARD = 1606;
	PLAYER_ACTION_QUEST_AUTO_CLOSE = 1607;
	PLAYER_ACTION_QUEST_EXPIRED = 1608;
	PLAYER_ACTION_MISSION_REQUIRED = 1609;
	PLAYER_ACTION_SUBMISSION_REWARD = 1610;
	PLAYER_ACTION_ACHIEVEMENT_LEVEL_REWARD = 1611;
	PLAYER_ACTION_QUEST_DELETE = 1612;
	PLAYER_ACTION_SUB_MISSION_REWARD = 1613;
	PLAYER_ACTION_MISSION_COMPENSATE = 1614;
	PLAYER_ACTION_MISSION_RECYCLE = 1615;
	PLAYER_ACTION_QUEST_RESET = 1616;
	PLAYER_ACTION_QUEST_OPTIONAL_REWARD = 1617;
	PLAYER_ACTION_MCV_CHANGE = 1618;
	PLAYER_ACTION_QUEST_REISSUE = 1619;
	PLAYER_ACTION_PROP_INTERACT = 1704;
	PLAYER_ACTION_AVATAR_MAZE_SKILL = 1705;
	PLAYER_ACTION_ENTER_MAZE = 1706;
	PLAYER_ACTION_ORDINARY_INTERACT = 1707;
	PLAYER_ACTION_CHEST_INTERACT = 1708;
	PLAYER_ACTION_CHECK_POINT_UNLOCK = 1709;
	PLAYER_ACTION_CHECK_POINT_INTERACT = 1710;
	PLAYER_ACTION_CHECK_POINT_REVIVE = 1711;
	PLAYER_ACTION_CHECK_POINT_TRANSFER = 1712;
	PLAYER_ACTION_MONSTER_INTERACT = 1714;
	PLAYER_ACTION_NPC_INTERACT = 1716;
	PLAYER_ACTION_PROP_HIT = 1717;
	PLAYER_ACTION_PRELOGUE_REVIVE = 1718;
	PLAYER_ACTION_PROP_STATE = 1719;
	PLAYER_ACTION_CHECK_POINT_RECOVER = 1720;
	PLAYER_ACTION_MECHANISM_BAR = 1722;
	PLAYER_ACTION_SUBMIT_ORIGAMI_ITEM = 1723;
	PLAYER_ACTION_MAZE_BUFF_DROP_ITEM = 1724;
	PLAYER_ACTION_FSV_CHANGE = 1725;
	PLAYER_ACTION_TIMELINE_PROP_STATE = 1726;
	PLAYER_ACTION_GROUP_PROPERTY_CHANGE = 1727;
	PLAYER_ACTION_EQUIPMENT_PROMOTION = 1901;
	PLAYER_ACTION_ADD_ITEM = 1902;
	PLAYER_ACTION_USE_ITEM = 1904;
	PLAYER_ACTION_EQUIPMENT_RANK_UP = 1905;
	PLAYER_ACTION_EQUIPMENT_LEVEL_UP = 1906;
	PLAYER_ACTION_EXP_UP_EQUIPMENT_RETURN = 1907;
	PLAYER_ACTION_BAG_FULL_REWARD_MAIL = 1908;
	PLAYER_ACTION_EQUIPMENT_ADD = 1909;
	PLAYER_ACTION_EQUIPMENT_WEAR = 1910;
	PLAYER_ACTION_ITEM_COMPOSE = 1911;
	PLAYER_ACTION_RELIC_LEVEL_UP = 1912;
	PLAYER_ACTION_EXP_UP_RELIC_RETURN = 1913;
	PLAYER_ACTION_RELIC_NUM_CHANGED = 1914;
	PLAYER_ACTION_RELIC_WEAR = 1915;
	PLAYER_ACTION_RELIC_COMPOSE = 1916;
	PLAYER_ACTION_SELL_ITEM = 1917;
	PLAYER_ACTION_UNLOCK_MUSIC = 1918;
	PLAYER_ACTION_EXCHANGE_HCOIN_WITH_PAY_MCOIN = 1919;
	PLAYER_ACTION_GET_REWARD = 1920;
	PLAYER_ACTION_EXCHANGE_HCOIN_WITH_FREE_MCOIN = 1921;
	PLAYER_ACTION_ITEM_COMPOSE_FORMULA_UNLOCK = 1922;
	PLAYER_ACTION_EXCHANGE_HCOIN = 1923;
	PLAYER_ACTION_CITY_SHOP_LEVEL_REWARD = 1924;
	PLAYER_ACTION_ITEM_RECYCLE = 1925;
	PLAYER_ACTION_MUSEUM_FUNDS_CONSUME = 1926;
	PLAYER_ACTION_MUSEUM_EVENT_BUY_STUFF = 1927;
	PLAYER_ACTION_MUSEUM_MARKET_BUY_STUFF = 1928;
	PLAYER_ACTION_MUSEUM_RANDOM_EVENT = 1929;
	PLAYER_ACTION_MUSEUM_INITIAL_ITEM = 1930;
	PLAYER_ACTION_OPTIONAL_BOX_REWARD = 1931;
	PLAYER_ACTION_DESTROY_ITEM = 1932;
	PLAYER_ACTION_TRANSFER_EXP = 1933;
	PLAYER_ACTION_ONDUTY_USE = 1934;
	PLAYER_ACTION_ITEM_MARK = 1935;
	PLAYER_ACTION_RELIC_DISCARD = 1936;
	PLAYER_ACTION_GENERAL_VIRTUAL_ITEM_CHANGE = 1937;
	PLAYER_ACTION_RELIC_LOCK = 1938;
	PLAYER_ACTION_RELIC_FILTER_PLAN_SAVE = 1939;
	PLAYER_ACTION_RELIC_FILTER_PLAN_DELETE = 1940;
	PLAYER_ACTION_RELIC_FILTER_PLAN_MARK = 1941;
	PLAYER_ACTION_RELIC_SELL = 1942;
	PLAYER_ACTION_RELIC_REFORGE = 1943;
	PLAYER_ACTION_RELIC_SMART_WEAR_CUSTOM_PLAN = 1944;
	PLAYER_ACTION_RECOVER_RELIC = 1945;
	PLAYER_ACTION_RECOVER_EQUIPMENT = 1946;
	PLAYER_ACTION_EQUIPMENT_SELL = 1947;
	PLAYER_ACTION_RELIC_SMART_WEAR_PIN_RELIC = 1948;
	PLAYER_ACTION_RELIC_COCOON_SETTING = 1949;
	PLAYER_ACTION_PERSONAL_CARD_CHANGE = 1950;
	PLAYER_ACTION_PHONE_CASE_CHANGE = 1951;
	PLAYER_ACTION_DELIVERY_ITEM_REWARD = 1952;
	PLAYER_ACTION_ITEM_AUTO_TRANSFER = 1953;
	PLAYER_ACTION_ITEM_AUTO_TRANSFER_IN_BAG = 1954;
	PLAYER_ACTION_ITEM_AUTO_TRANSFER_ON_ADD = 1955;
	PLAYER_ACTION_TUTORIAL_GUIDE_FINISH = 2001;
	PLAYER_ACTION_TUTORIAL = 2002;
	PLAYER_ACTION_TUTORIAL_GUIDE = 2003;
	PLAYER_ACTION_MONSTER_DROP = 2101;
	PLAYER_ACTION_FINISH_CHALLENGE = 2201;
	PLAYER_ACTION_CHALLENGE_STARS = 2202;
	PLAYER_ACTION_CHALLENGE_START = 2203;
	PLAYER_ACTION_CHALLENGE_END = 2204;
	PLAYER_ACTION_CHALLENGE_WIN = 2205;
	PLAYER_ACTION_CHALLENGE_FAIL = 2206;
	PLAYER_ACTION_CHALLENGE_LEAVE = 2207;
	PLAYER_ACTION_CHALLENGE_SWITCH = 2208;
	PLAYER_ACTION_CHALLENGE_BONUS_REWARD = 2210;
	PLAYER_ACTION_CHALLENGE_STARS_REWARD = 2211;
	PLAYER_ACTION_CHALLENGE_RESTART = 2212;
	PLAYER_ACTION_CHALLENGE_STORY_START = 2213;
	PLAYER_ACTION_CHALLENGE_STORY_END = 2214;
	PLAYER_ACTION_CHALLENGE_FAST_PASS = 2215;
	PLAYER_ACTION_CHALLENGE_STORY_FAST_PASS = 2216;
	PLAYER_ACTION_CHALLENGE_MEMORY_FAST_PASS = 2217;
	PLAYER_ACTION_CHALLENGE_BATTLE_TARGET = 2218;
	PLAYER_ACTION_CHALLENGE_BOSS_END = 2219;
	PLAYER_ACTION_CHALLENGE_BOSS_FAST_PASS = 2220;
	PLAYER_ACTION_CHALLENGE_START_PARTIAL = 2221;
	PLAYER_ACTION_CHALLENGE_BOSS_PHASE_START = 2222;
	PLAYER_ACTION_CHALLENGE_BOSS_PHASE_END = 2223;
	PLAYER_ACTION_CHALLENGE_BOSS_PHASE_END_BEFORE_BATTLE = 2224;
	PLAYER_ACTION_CHALLENGE_RECOMMEND_LINEUP = 2225;
	PLAYER_ACTION_CHALLENGE_STORY_FEVER_BATTLE_END = 2226;
	PLAYER_ACTION_TEAM_INFO_CHANGE = 2301;
	PLAYER_ACTION_CHANGE_CURRENT_AVATAR = 2302;
	PLAYER_ACTION_CREATE_VIRTUAL_TEAM = 2303;
	PLAYER_ACTION_TEAM_NAME_EDIT = 2304;
	PLAYER_ACTION_AVATAR_BUFF_CHANGE = 2401;
	PLAYER_ACTION_ENV_BUFF_CHANGE = 2402;
	PLAYER_ACTION_GAME_CORE = 2403;
	PLAYER_ACTION_AVATAR_GLOBAL_BUFF = 2404;
	PLAYER_ACTION_ROGUE_EXPLORE_START = 2501;
	PLAYER_ACTION_ROGUE_ENTER_ROOM = 2502;
	PLAYER_ACTION_ROGUE_LEAVE_ROOM = 2503;
	PLAYER_ACTION_ROGUE_EXPLORE_FINISH = 2504;
	PLAYER_ACTION_ROGUE_SELECT_BUFF = 2505;
	PLAYER_ACTION_ROGUE_ROLL_BUFF = 2506;
	PLAYER_ACTION_ROGUE_REVIVE = 2507;
	PLAYER_ACTION_ROGUE_CHALLENGE_START = 2512;
	PLAYER_ACTION_ROGUE_MIRACLE = 2514;
	PLAYER_ACTION_ROGUE_ADD_BUFF = 2515;
	PLAYER_ACTION_ROGUE_PICK_AVATAR = 2516;
	PLAYER_ACTION_ROGUE_SEASON_CHANGED = 2522;
	PLAYER_ACTION_ROGUE_AEON_LEVEL_UP = 2524;
	PLAYER_ACTION_ROGUE_OPEN_DOOR = 2525;
	PLAYER_ACTION_ROGUE_SCORE_REWARD = 2526;
	PLAYER_ACTION_ROGUE_ENHANCE_BUFF = 2527;
	PLAYER_ACTION_ROGUE_SELECT_BONUS = 2528;
	PLAYER_ACTION_ROGUE_AREA_FIRST_REWARD = 2529;
	PLAYER_ACTION_ROGUE_ENABLE_TALENT = 2530;
	PLAYER_ACTION_ROGUE_AEON_UNLOCK = 2531;
	PLAYER_ACTION_ROGUE_AEON_ADD_EXP = 2532;
	PLAYER_ACTION_ROGUE_IMMERSE_LEVEL_UP = 2533;
	PLAYER_ACTION_ROGUE_SELECT_MIRACLE = 2534;
	PLAYER_ACTION_ROGUE_UNLOCK_AREA = 2535;
	PLAYER_ACTION_ROGUE_EXPLORE_SCORE_CHANGE = 2536;
	PLAYER_ACTION_ROGUE_UPDATE_REWARD_POOL = 2537;
	PLAYER_ACTION_ROGUE_SWAP_BUFF = 2539;
	PLAYER_ACTION_ROGUE_WEEKLY_REFRESH = 2540;
	PLAYER_ACTION_ROGUE_EXCHANGE_KEY = 2541;
	PLAYER_ACTION_ROGUE_GET_OBJECT_REWARD = 2542;
	PLAYER_ACTION_ROGUE_AREA_MONSTER_DROP = 2543;
	PLAYER_ACTION_ROGUE_ADD_MIRACLE = 2544;
	PLAYER_ACTION_ROGUE_SWAP_MIRACLE = 2545;
	PLAYER_ACTION_ROGUE_OPEN_OBJECT_REWARD = 2546;
	PLAYER_ACTION_ROGUE_AEON_EFFECT = 2547;
	PLAYER_ACTION_ROGUE_REFORGE_BUFF = 2548;
	PLAYER_ACTION_ROGUE_TRADE_MIRACLE = 2549;
	PLAYER_ACTION_ROGUE_REMOVE_AVATAR = 2550;
	PLAYER_ACTION_ROGUE_DIALOGUE_SELECT = 2551;
	PLAYER_ACTION_ROGUE_SELECT_AEON = 2552;
	PLAYER_ACTION_ROGUE_DIALOGUE_FINISH = 2553;
	PLAYER_ACTION_ROGUE_HANDBOOK_REWARD = 2554;
	PLAYER_ACTION_ROGUE_ADVENTURE_ROOM_REWARD = 2555;
	PLAYER_ACTION_ROGUE_SHOP_BUY = 2556;
	PLAYER_ACTION_ROGUE_REPAIR_MIRACLE = 2557;
	PLAYER_ACTION_ROGUE_REPLACE_ALL_MIRACLE = 2558;
	PLAYER_ACTION_ROGUE_MIRACLE_BROKEN = 2559;
	PLAYER_ACTION_ROGUE_SHOP_REFRESH = 2560;
	PLAYER_ACTION_ROGUE_LEVEL_MECHANISM = 2561;
	PLAYER_ACTION_ROGUE_REMOVE_MIRACLE = 2562;
	PLAYER_ACTION_ROGUE_DROP_BUFF = 2563;
	PLAYER_ACTION_ROGUE_DESTROY_MIRACLE = 2564;
	PLAYER_ACTION_ROGUE_ACTIVATE_FORMULA = 2565;
	PLAYER_ACTION_ROGUE_DEACTIVATE_FORMULA = 2566;
	PLAYER_ACTION_ROGUE_REMOVE_BUFF = 2567;
	PLAYER_ACTION_ROGUE_SELECT_FORMULA = 2568;
	PLAYER_ACTION_ROGUE_DROP_FORMULA = 2569;
	PLAYER_ACTION_ROGUE_ROLL_FORMULA = 2570;
	PLAYER_ACTION_ROGUE_REFORGE_FORMULA = 2571;
	PLAYER_ACTION_ROGUE_COMPOSE_MIRACLE = 2572;
	PLAYER_ACTION_ROGUE_REFORGE_MIRACLE = 2573;
	PLAYER_ACTION_ROGUE_DO_GAMBLE = 2574;
	PLAYER_ACTION_ROGUE_KEYWORD_ACTIVATE = 2575;
	PLAYER_ACTION_ROGUE_KEYWORD_DEACTIVATE = 2576;
	PLAYER_ACTION_ROGUE_SOURCE_DEFAULT = 2577;
	PLAYER_ACTION_ROGUE_PLAYER_SELECT = 2578;
	PLAYER_ACTION_ROGUE_LAYER_SETTLEMENT = 2579;
	PLAYER_ACTION_ROGUE_FORMULA = 2580;
	PLAYER_ACTION_ROGUE_WORKBENCH = 2581;
	PLAYER_ACTION_ROGUE_MODIFIER = 2582;
	PLAYER_ACTION_ROGUE_REFORGE = 2583;
	PLAYER_ACTION_ROGUE_TALENT = 2584;
	PLAYER_ACTION_ROGUE_REROLL = 2585;
	PLAYER_ACTION_ROGUE_COIN_CHANGE = 2586;
	PLAYER_ACTION_ROGUE_MAGIC_SCEPTER_SHOP = 2587;
	PLAYER_ACTION_ROGUE_MAGIC_UNIT_SHOP = 2588;
	PLAYER_ACTION_ROGUE_MAGIC_SCEPTER_LEVEL_UP = 2589;
	PLAYER_ACTION_GACHA = 2601;
	PLAYER_ACTION_ADD_GACHA_TICKET = 2602;
	PLAYER_ACTION_GACHA_EXCHANGE = 2603;
	PLAYER_ACTION_SET_GACHA_DECIDE_ITEM = 2604;
	PLAYER_ACTION_EVENT_MISSION_ACCEPT = 2801;
	PLAYER_ACTION_EVENT_MISSION_FINISH = 2802;
	PLAYER_ACTION_EVENT_MISSION_REWARD = 2803;
	PLAYER_ACTION_RAID_FINISH = 2901;
	PLAYER_ACTION_RAID_BEGIN = 2902;
	PLAYER_ACTION_CHALLENGE_RAID_REWARD = 2903;
	PLAYER_ACTION_START_RAID = 2904;
	PLAYER_ACTION_END_RAID = 2905;
	PLAYER_ACTION_RAID_TARGET_FINISH = 2906;
	PLAYER_ACTION_ARCHIVE_RAID = 2907;
	PLAYER_ACTION_HERO_BASE_TYPE_CHANGE = 3051;
	PLAYER_ACTION_HERO_BASE_TYPE_ADD_BY_MISSION = 3052;
	PLAYER_ACTION_HERO_BASE_TYPE_ADD_BY_REQ = 3053;
	PLAYER_ACTION_HERO_BASE_TYPE_ADD = 3054;
	PLAYER_ACTION_DIALOGUE_SELECT = 3101;
	PLAYER_ACTION_EXPEDITION_START = 3151;
	PLAYER_ACTION_EXPEDITION_FINISH = 3152;
	PLAYER_ACTION_EXPEDITION_REWARD = 3153;
	PLAYER_ACTION_ACTIVITY_EXPEDITION_START = 3154;
	PLAYER_ACTION_ACTIVITY_EXPEDITION_FINISH = 3155;
	PLAYER_ACTION_ACTIVITY_EXPEDITION_REWARD = 3156;
	PLAYER_ACTION_ACTIVITY_EXPEDITION_BEGIN = 3157;
	PLAYER_ACTION_ACTIVITY_EXPEDITION_END = 3158;
	PLAYER_ACTION_ACTIVITY_LOGIN_REWARD = 3201;
	PLAYER_ACTION_FRIEND_REPORT = 3301;
	PLAYER_ACTION_ASSIST_REWARD = 3302;
	PLAYER_ACTION_ASSIST_AVATAR_REFRESH = 3303;
	PLAYER_ACTION_ASSIST_AVATAR_BATTLE_START = 3304;
	PLAYER_ACTION_ASSIST_AVATAR_BATTLE_END = 3305;
	PLAYER_ACTION_FRIEND_APPLY = 3306;
	PLAYER_ACTION_FRIEND_MANAGE = 3307;
	PLAYER_ACTION_FRIEND_BLACKLIST = 3308;
	PLAYER_ACTION_FRIEND_MODIFY_REMARK_NAME = 3309;
	PLAYER_ACTION_FRIEND_MARK = 3310;
	PLAYER_ACTION_FRIEND_ASSIST_LIST = 3311;
	PLAYER_ACTION_BATTLE_PASS_LEVEL_REWARD = 3202;
	PLAYER_ACTION_BATTLE_PASS_128TIER_REWARD = 3203;
	PLAYER_ACTION_BATTLE_PASS_LEVEL_REWARD_AUTO_MAIL = 3204;
	PLAYER_ACTION_BUY_BATTLE_PASS = 3205;
	PLAYER_ACTION_ADD_BATTLE_PASS_EXP = 3206;
	PLAYER_ACTION_BATTLE_PASS_LEVEL_UP = 3207;
	PLAYER_ACTION_BUY_BATTLE_PASS_LEVEL = 3208;
	PLAYER_ACTION_BATTLE_PASS_END_MAIL = 3209;
	PLAYER_ACTION_BATTLE_PASS_68TIER_REWARD = 3210;
	PLAYER_ACTION_MODIFY_SIGN = 3401;
	PLAYER_ACTION_DISPLAY_AVATAR_SET = 3402;
	PLAYER_ACTION_ASSIST_AVATAR_SET = 3403;
	PLAYER_ACTION_ACHIEVEMENT_FINISH = 3501;
	PLAYER_ACTION_ACHIEVEMENT_REWARD = 3502;
	PLAYER_ACTION_ACHIEVEMENT_ADD_EXP = 3503;
	PLAYER_ACTION_ACHIEVEMENT_LEVEL_UP = 3504;
	PLAYER_ACTION_PUNK_LORD_REWARD = 3601;
	PLAYER_ACTION_PUNK_LORD_BOSS_SEARCH = 3604;
	PLAYER_ACTION_PUNK_LORD_BOSS_SHARE = 3605;
	PLAYER_ACTION_START_PUNK_LORD_RAID = 3606;
	PLAYER_ACTION_PUNK_LORD_SUPPORT_TIMES = 3608;
	PLAYER_ACTION_PUNK_LORD_SCORE_REWARD = 3609;
	PLAYER_ACTION_PUNK_LORD_LIST_REFRESH = 3610;
	PLAYER_ACTION_PUNK_LORD_POWER_ATTACK = 3611;
	PLAYER_ACTION_PUNK_LORD_BATTLE_END = 3612;
	PLAYER_ACTION_PUNK_LORD_BOSS_DEATH = 3613;
	PLAYER_ACTION_PUNK_LORD_BOSS_SCORE = 3614;
	PLAYER_ACTION_DAILY_ACTIVE_LEVEL_REWARD = 3701;
	PLAYER_ACTION_DAILY_ACTIVE_ADD_POINT = 3702;
	PLAYER_ACTION_DAILY_ACTIVE_DELETE_OLD_QUEST = 3703;
	PLAYER_ACTION_FIGHT_ACTIVITY_BEGIN = 3791;
	PLAYER_ACTION_FIGHT_ACTIVITY_END = 3792;
	PLAYER_ACTION_FIGHT_ACTIVITY_REWARD = 3801;
	PLAYER_ACTION_ACTIVITY_END_MAIL = 3802;
	PLAYER_ACTION_APPOINTMENT_MAIL = 3803;
	PLAYER_ACTION_SHARE_REWARD = 3804;
	PLAYER_ACTION_ACTIVITY_TRIAL_REWARD = 3805;
	PLAYER_ACTION_ACTIVITY_TRIAL_START = 3806;
	PLAYER_ACTION_PS_PRE_ORDER_MAIL1 = 3811;
	PLAYER_ACTION_PS_PRE_ORDER_MAIL2 = 3812;
	PLAYER_ACTION_PS_LOGIN_MAIL = 3813;
	PLAYER_ACTION_LOGIN_MAIL = 3814;
	PLAYER_ACTION_GOOGLE_POINTS_100_MAIL = 3821;
	PLAYER_ACTION_GOOGLE_POINTS_150_MAIL = 3822;
	PLAYER_ACTION_TRAIN_VISITOR_BEHAVIOR_FINISH = 3901;
	PLAYER_ACTION_ENTER_VIEW_TRAIN = 3902;
	PLAYER_ACTION_TRAIN_VISITOR_BEHAVIOR_REWARD_FORCE_SEND = 3903;
	PLAYER_ACTION_TRAIN_VISITOR_REGISTER_OPEN = 3904;
	PLAYER_ACTION_TRAIN_VISITOR_BEHAVIOR_REWARD_FORCE_SEND_BY_REGISTER = 3905;
	PLAYER_ACTION_TRAIN_VISITOR_CLEAR_LAST_TRAIN_VISITOR = 3906;
	PLAYER_ACTION_TRAIN_VISITOR_REFRESH_TRAIN_VISITOR = 3907;
	PLAYER_ACTION_TRAIN_VISITOR_REFRESH_NPC = 3908;
	PLAYER_ACTION_MESSAGE_GROUP_ACCEPT = 3951;
	PLAYER_ACTION_MESSAGE_SECTION_ACCEPT = 3952;
	PLAYER_ACTION_MESSAGE_SECTION_FINISH = 3953;
	PLAYER_ACTION_MESSAGE_ITEM_FINISH = 3954;
	PLAYER_ACTION_FINISH_MESSAGE_GROUP_REWARD = 3955;
	PLAYER_ACTION_SUBSTITUTE_MESSAGE_GROUP_REWARD = 3956;
	PLAYER_ACTION_DELETE_MESSAGE_GROUP = 3957;
	PLAYER_ACTION_DELETE_MESSAGE_SECTION = 3958;
	PLAYER_ACTION_DELETE_MESSAGE_GROUP_BY_CONFIG = 3959;
	PLAYER_ACTION_DELETE_MESSAGE_GROUP_BY_ACTIVITY = 3960;
	PLAYER_ACTION_DELETE_MESSAGE_GROUP_BY_MISSION = 3961;
	PLAYER_ACTION_TEXT_JOIN_SAVE = 4001;
	PLAYER_ACTION_BOXING_CLUB_START = 4051;
	PLAYER_ACTION_BOXING_CLUB_FINISH = 4052;
	PLAYER_ACTION_BOXING_CLUB_PAUSE = 4053;
	PLAYER_ACTION_BOXING_CLUB_STAGE_START = 4054;
	PLAYER_ACTION_TALK_SEND = 4101;
	PLAYER_ACTION_SELECT_INCLINATION_TEXT = 4102;
	PLAYER_ACTION_MUSEUM_SETTLE_TURN_OPEN = 4201;
	PLAYER_ACTION_MUSEUM_UPGRADE_AREA = 4202;
	PLAYER_ACTION_MUSEUM_UPGRADE_AREA_STAT = 4203;
	PLAYER_ACTION_MUSEUM_DISPATCH_REWARD_REGULAR = 4204;
	PLAYER_ACTION_MUSEUM_DISPATCH_REWARD_DIRECTIONAL = 4205;
	PLAYER_ACTION_MUSEUM_PHASE_TARGET_FINISHED = 4206;
	PLAYER_ACTION_MUSEUM_GET_STUFF = 4207;
	PLAYER_ACTION_MUSEUM_GET_EXHIBIT = 4208;
	PLAYER_ACTION_MUSEUM_TAKE_COLLECT_MISSION = 4209;
	PLAYER_ACTION_MUSEUM_AREA_UNLOCK = 4210;
	PLAYER_ACTION_MUSEUM_AREA_UPGRADE = 4211;
	PLAYER_ACTION_MUSEUM_AREA_STAT_UPGRADE = 4212;
	PLAYER_ACTION_MUSEUM_ENTER_NEXT_ROUND = 4213;
	PLAYER_ACTION_MUSEUM_START_DISPATCH = 4214;
	PLAYER_ACTION_MUSEUM_SETTLE_DISPATCH = 4215;
	PLAYER_ACTION_MUSEUM_RENEW_POINT_CHANGED = 4216;
	PLAYER_ACTION_MUSEUM_TARGET_REWARD = 4217;
	PLAYER_ACTION_MUSEUM_PHASE_UPGRADE = 4218;
	PLAYER_ACTION_MUSEUM_COLLECT_REWARD = 4219;
	PLAYER_ACTION_MUSEUM_TARGET_START = 4220;
	PLAYER_ACTION_MUSEUM_TARGET_FINISH = 4221;
	PLAYER_ACTION_ACTIVITY_MONSTER_RESEARCH_CONSUME_MATERIAL = 4301;
	PLAYER_ACTION_ACTIVITY_MONSTER_RESEARCH_TAKE_REWARD = 4302;
	PLAYER_ACTION_PLAYER_RETURN_START = 4401;
	PLAYER_ACTION_PLAYER_RETURN_SIGN = 4402;
	PLAYER_ACTION_PLAYER_RETURN_POINT = 4403;
	PLAYER_ACTION_PLAYER_RETURN_COUNTDOWN = 4404;
	PLAYER_ACTION_PLAYER_RETURN_FINISH = 4405;
	PLAYER_ACTION_PLAYER_RETURN_COMPENSATE = 4406;
	PLAYER_ACTION_PLAYER_RETURN_GET_RELIC = 4407;
	PLAYER_ACTION_ROGUE_CHALLENGE_ACTIVITY_START = 4411;
	PLAYER_ACTION_ROGUE_CHALLENGE_ACTIVITY_FINISH = 4412;
	PLAYER_ACTION_ROGUE_CHALLENGE_ACTIVITY_SAVE = 4413;
	PLAYER_ACTION_AETHER_DIVIDE_USE_PASSIVE_SKILL_ITEM = 4450;
	PLAYER_ACTION_AETHER_DIVIDE_CLEAR_PASSIVE_SKILL = 4451;
	PLAYER_ACTION_AETHER_DIVIDE_FINISH_CHALLENGE = 4452;
	PLAYER_ACTION_AETHER_DIVIDE_OVERFLOW_CHUNK_REWARD = 4453;
	PLAYER_ACTION_AETHER_DIVIDE_LEVEL_UP = 4454;
	PLAYER_ACTION_AETHER_DIVIDE_NEW_REWARD = 4455;
	PLAYER_ACTION_AETHER_DIVIDE_MONSTER_ADD = 4456;
	PLAYER_ACTION_AETHER_DIVIDE_MONSTER_LEVEL = 4457;
	PLAYER_ACTION_AETHER_DIVIDE_MONSTER_SKILL_WEAR = 4458;
	PLAYER_ACTION_AETHER_DIVIDE_TEAM_CHANGE = 4459;
	PLAYER_ACTION_AETHER_DIVIDE_STAGE_BEGIN = 4460;
	PLAYER_ACTION_AETHER_DIVIDE_STAGE_END = 4461;
	PLAYER_ACTION_AETHER_DIVIDE_STAGE_ROLL = 4462;
	PLAYER_ACTION_ALLEY_EVENT_FINISH = 4501;
	PLAYER_ACTION_ALLEY_TAKE_REWARD = 4502;
	PLAYER_ACTION_ALLEY_PRESTIGE_LEVEL_UP = 4503;
	PLAYER_ACTION_ALLEY_LOGISTICS_FINISH = 4504;
	PLAYER_ACTION_ALLEY_PLACING_GAME_FINISH = 4505;
	PLAYER_ACTION_ALLEY_GUARANTEED_FUNDS = 4506;
	PLAYER_ACTION_ALLEY_TAKE_EVENT_REWARD = 4507;
	PLAYER_ACTION_ALLEY_SPECIAL_ORDER_FINISH = 4508;
	PLAYER_ACTION_SENSITIVE_WORD_SHIELD = 4601;
	PLAYER_ACTION_SENSITIVE_WORD_SERVER_INTERNAL_ERROR = 4602;
	PLAYER_ACTION_SENSITIVE_WORD_PLATFORM_ERROR = 4603;
	PLAYER_ACTION_TREASURE_DUNGEON_START = 4701;
	PLAYER_ACTION_TREASURE_DUNGEON_FINISH = 4702;
	PLAYER_ACTION_TREASURE_DUNGEON_ENTER_FLOOR = 4703;
	PLAYER_ACTION_TREASURE_DUNGEON_LEAVE_FLOOR = 4704;
	PLAYER_ACTION_TREASURE_DUNGEON_USE_ITEM = 4705;
	PLAYER_ACTION_TREASURE_DUNGEON_AVATAR_CHANGE = 4706;
	PLAYER_ACTION_TREASURE_DUNGEON_BATTLE_START = 4707;
	PLAYER_ACTION_TREASURE_DUNGEON_BATTLE_END = 4708;
	PLAYER_ACTION_TREASURE_DUNGEON_PICKUP_BUFF = 4709;
	PLAYER_ACTION_CHESS_ROGUE_FIRST_FINISH = 4801;
	PLAYER_ACTION_CHESS_ROGUE_GIVEUP_DICE = 4802;
	PLAYER_ACTION_CHESS_ROGUE_SUB_STORY_SELECT = 4803;
	PLAYER_ACTION_CHESS_ROGUE_ACTION_POINT = 4804;
	PLAYER_ACTION_CHESS_ROGUE_REVIVE_BY_PROP = 4805;
	PLAYER_ACTION_CHESS_ROGUE_START_LEVEL = 4806;
	PLAYER_ACTION_CHESS_ROGUE_DICE_EFFECT = 4807;
	PLAYER_ACTION_CHESS_ROGUE_MAIN_STORY_FINISH = 4808;
	PLAYER_ACTION_CHESS_ROGUE_AEON_TALENT_EFFECT = 4809;
	PLAYER_ACTION_CHESS_ROGUE_MODIFIER_OTHERS_EFFECT = 4810;
	PLAYER_ACTION_CHESS_ROGUE_ADD_BUFF = 4811;
	PLAYER_ACTION_CHESS_ROGUE_REFORGE_BUFF = 4812;
	PLAYER_ACTION_CHESS_ROGUE_BUFF_LEVEL_UP = 4813;
	PLAYER_ACTION_CHESS_ROGUE_ENHANCE_BUFF = 4814;
	PLAYER_ACTION_CHESS_ROGUE_ADD_MIRACLE = 4815;
	PLAYER_ACTION_CHESS_ROGUE_SWAP_MIRACLE = 4816;
	PLAYER_ACTION_CHESS_ROGUE_SELECT_BONUS = 4817;
	PLAYER_ACTION_CHESS_ROGUE_DIALOGUE_FINISH = 4818;
	PLAYER_ACTION_CHESS_ROGUE_SUB_STORY_FINISH = 4819;
	PLAYER_ACTION_CHESS_ROGUE_ADVENTURE_ROOM_FINISH = 4820;
	PLAYER_ACTION_CHESS_ROGUE_FINISH_LEVEL = 4821;
	PLAYER_ACTION_CHESS_ROGUE_START_LAYER = 4822;
	PLAYER_ACTION_CHESS_ROGUE_FINISH_LAYER = 4823;
	PLAYER_ACTION_CHESS_ROGUE_ENTER_ROOM = 4824;
	PLAYER_ACTION_CHESS_ROGUE_LEAVE_ROOM = 4825;
	PLAYER_ACTION_CHESS_ROGUE_ROLL_DICE = 4826;
	PLAYER_ACTION_CHESS_ROGUE_SELECT_DICE = 4827;
	PLAYER_ACTION_CHESS_ROGUE_UNLOCK_DICE = 4828;
	PLAYER_ACTION_CHESS_ROGUE_BOARD_EVENT = 4829;
	PLAYER_ACTION_CHESS_ROGUE_DIMENSION_POINT = 4830;
	PLAYER_ACTION_CHESS_ROGUE_PICK_AVATAR = 4831;
	PLAYER_ACTION_CHESS_ROGUE_REVIVE_AVATAR = 4832;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_SUB_STORY_SELECT = 4833;
	PLAYER_ACTION_CHESS_ROGUE_LEVEL_MECHANISM = 4844;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_START_LEVEL = 4845;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_FINISH_LEVEL = 4846;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_START_LAYER = 4847;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_FINISH_LAYER = 4848;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_ENTER_ROOM = 4849;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_LEAVE_ROOM = 4850;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_SELECT_DICE = 4851;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_UNLOCK_DICE_BRANCH = 4852;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_UNLOCK_DICE_SURFACE = 4853;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_EDIT_DICE = 4854;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_VALUE_CHANGE = 4855;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_MAIN_STORY_TRIGGER = 4856;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_MAIN_STORY_FINISH = 4857;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_SUB_STORY_TRIGGER = 4858;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_SUB_STORY_FINISH = 4859;
	PLAYER_ACTION_CHESS_ROGUE_NOUS_ENABLE_TALENT = 4860;
	PLAYER_ACTION_CHESS_ROGUE_SELECT_BUFF = 4861;
	PLAYER_ACTION_CHESS_ROGUE_SELECT_MIRACLE = 4862;
	PLAYER_ACTION_CHESS_ROGUE_REMOVE_MIRACLE = 4863;
	PLAYER_ACTION_CHESS_ROGUE_BOARD_CELL = 4864;
	PLAYER_ACTION_FANTASTIC_STORY_BATTLE_BEGIN = 4901;
	PLAYER_ACTION_FANTASTIC_STORY_BATTLE_END = 4902;
	PLAYER_ACTION_ROGUE_ENDLESS_REWARD = 4950;
	PLAYER_ACTION_ROGUE_ENDLESS_LEVEL_START = 4951;
	PLAYER_ACTION_ROGUE_ENDLESS_STAGE_BEGIN = 4952;
	PLAYER_ACTION_ROGUE_ENDLESS_STAGE_END = 4953;
	PLAYER_ACTION_BATTLE_COLLEGE_REWARD = 5001;
	PLAYER_ACTION_COMMON_ROGUE_MIRACLE_FOR_BUFF_SHOP = 5051;
	PLAYER_ACTION_COMMON_ROGUE_ADVENTURE_ROOM_FINISH = 5052;
	PLAYER_ACTION_COMMON_ROGUE_BUY_BUFF_SHOP = 5053;
	PLAYER_ACTION_COMMON_ROGUE_BUY_BUFF_SHOP_REFRESH = 5054;
	PLAYER_ACTION_COMMON_ROGUE_COLLECTION_UNLOCK = 5055;
	PLAYER_ACTION_COMMON_ROGUE_COLLECTION_SET = 5056;
	PLAYER_ACTION_COMMON_ROGUE_EXHIBITION_UNLOCK = 5057;
	PLAYER_ACTION_COMMON_ROGUE_EXHIBITION_SET = 5058;
	PLAYER_ACTION_COMMON_ROGUE_CHEST_INTERACT = 5059;
	PLAYER_ACTION_COMMON_ROGUE_ADVENTURE_ROOM_WOLFGUN_FINISH = 5060;
	PLAYER_ACTION_HELIOBUS_POST_INCOME_REWARD = 5101;
	PLAYER_ACTION_HELIOBUS_POST_FANS_REWARD = 5102;
	PLAYER_ACTION_HELIOBUS_LEVEL_UPGRADE = 5103;
	PLAYER_ACTION_HELIOBUS_POST_REPLY_REWARD = 5104;
	PLAYER_ACTION_HELIOBUS_COMMENT_REPLY_REWARD = 5105;
	PLAYER_ACTION_HELIOBUS_CHALLENGE_FIRST_REWARD = 5106;
	PLAYER_ACTION_HELIOBUS_FANS_ADD = 5107;
	PLAYER_ACTION_HELIOBUS_ACTION_DAY_SETTLE = 5108;
	PLAYER_ACTION_HELIOBUS_SKILL_UNLOCK = 5109;
	PLAYER_ACTION_HELIOBUS_STAGE_BEGIN = 5110;
	PLAYER_ACTION_HELIOBUS_STAGE_END = 5111;
	PLAYER_ACTION_HELIOBUS_SNS_READ = 5112;
	PLAYER_ACTION_HELIOBUS_SNS_POST_UNLOCK = 5113;
	PLAYER_ACTION_HELIOBUS_SNS_COMMENT_UNLOCK = 5114;
	PLAYER_ACTION_HELIOBUS_SNS_COMMENT = 5115;
	PLAYER_ACTION_HELIOBUS_SNS_POST = 5116;
	PLAYER_ACTION_HELIOBUS_SNS_LIKE = 5117;
	PLAYER_ACTION_HELIOBUS_PHASE_UPGRADE = 5118;
	PLAYER_ACTION_PS_POINT_CARD_30_REWARD = 5201;
	PLAYER_ACTION_PS_POINT_CARD_50_REWARD = 5202;
	PLAYER_ACTION_PS_POINT_CARD_100_REWARD = 5203;
	PLAYER_ACTION_PSN_PLUS_GIFT_REWARD = 5204;
	PLAYER_ACTION_APPLE_GIFT_CARD_REWARD = 5205;
	PLAYER_ACTION_HEART_DIAL_SUBMIT_ITEM = 5301;
	PLAYER_ACTION_HEART_DIAL_DIALOGUE_PERFORM = 5302;
	PLAYER_ACTION_HEART_DIAL_TRACE_CONSUME = 5303;
	PLAYER_ACTION_HEART_DIAL_CHANGE_EMOTION = 5304;
	PLAYER_ACTION_TRAVEL_BROCHURE_ADD_DEFAULT_PASTER = 5401;
	PLAYER_ACTION_SPACE_ZOO_BORN = 5501;
	PLAYER_ACTION_SPACE_ZOO_MUTATE = 5502;
	PLAYER_ACTION_SPACE_ZOO_DELETE = 5503;
	PLAYER_ACTION_SPACE_ZOO_EXCHANGE_ITEM = 5504;
	PLAYER_ACTION_SPACE_ZOO_EXP_POINT = 5505;
	PLAYER_ACTION_SPACE_ZOO_TAKE_REWARD = 5506;
	PLAYER_ACTION_SPACE_ZOO_COLLECTION = 5507;
	PLAYER_ACTION_SPACE_ZOO_SHOW = 5508;
	PLAYER_ACTION_SPACE_ZOO_SPECIAL_DATA = 5509;
	PLAYER_ACTION_STRONG_CHALLENGE_BATTLE_BEGIN = 5701;
	PLAYER_ACTION_STRONG_CHALLENGE_BATTLE_END = 5702;
	PLAYER_ACTION_ROLL_SHOP_DO_GACHA = 5751;
	PLAYER_ACTION_ROLL_SHOP_TAKE_REWARD = 5752;
	PLAYER_ACTION_OFFERING_SUBMIT_ITEM = 5801;
	PLAYER_ACTION_OFFERING_TAKE_REWARD = 5802;
	PLAYER_ACTION_TRAVEL_BROCHURE_PAGE_UNLOCK = 5851;
	PLAYER_ACTION_TRAVEL_BROCHURE_PAGE_INTERACT_AWARD = 5852;
	PLAYER_ACTION_TRAVEL_BROCHURE_STICKER_UNLOCK = 5853;
	PLAYER_ACTION_TRAVEL_BROCHURE_STICKER_APPLY = 5854;
	PLAYER_ACTION_TRAVEL_BROCHURE_STICKER_REMOVE = 5855;
	PLAYER_ACTION_TRAVEL_BROCHURE_PAGE_RESET = 5856;
	PLAYER_ACTION_TRACK_MAIN_MISSION_ID = 5901;
	PLAYER_ACTION_WOLF_BRO_BEGIN = 5911;
	PLAYER_ACTION_WOLF_BRO_GROUP_STATE_CHANGE = 5912;
	PLAYER_ACTION_WOLF_BRO_END = 5913;
	PLAYER_ACTION_WOLF_BRO_BULLET_ZERO = 5914;
	PLAYER_ACTION_WOLF_BRO_ACTIVATE_BULLET = 5915;
	PLAYER_ACTION_WOLF_BRO_BULLET_NUM_CHANGE = 5916;
	PLAYER_ACTION_WOLF_BRO_USE_BULLET_NULL = 5917;
	PLAYER_ACTION_WOLF_BRO_USE_BULLET_HIT_MONSTER = 5918;
	PLAYER_ACTION_WOLF_BRO_PICK_UP_BULLET = 5919;
	PLAYER_ACTION_WOLF_BRO_RESTORE_ARCHIVE = 5920;
	PLAYER_ACTION_TELEVISION_ACTIVITY_BATTLE_BEGIN = 5921;
	PLAYER_ACTION_TELEVISION_ACTIVITY_BATTLE_END = 5922;
	PLAYER_ACTION_FEVER_TIME_ACTIVITY_BATTLE_BEGIN = 5923;
	PLAYER_ACTION_FEVER_TIME_ACTIVITY_BATTLE_END = 5924;
	PLAYER_ACTION_GUN_PLAY_END = 5925;
	PLAYER_ACTION_ACTIVITY_STAR_FIGHT_BEGIN = 5926;
	PLAYER_ACTION_ACTIVITY_STAR_FIGHT_END = 5927;
	PLAYER_ACTION_MAP_ROTATION_ENTER_REGION = 5931;
	PLAYER_ACTION_MAP_ROTATION_LEAVE_REGION = 5932;
	PLAYER_ACTION_MAP_ROTATION_INTERACT_CHARGER = 5933;
	PLAYER_ACTION_MAP_ROTATION_DEPLOY_ROTATER = 5934;
	PLAYER_ACTION_MAP_ROTATION_ROTATE_MAP = 5935;
	PLAYER_ACTION_MAP_ROTATION_ADD_ENERGY = 5936;
	PLAYER_ACTION_MAP_ROTATION_SET_MAX_ENERGY = 5937;
	PLAYER_ACTION_MAP_ROTATION_REMOVE_ROTATER = 5938;
	PLAYER_ACTION_MAP_ROTATION_AUTO_DEPLOY_ROTATER = 5939;
	PLAYER_ACTION_MAP_ROTATION_AUTO_REMOVE_ROTATER = 5940;
	PLAYER_ACTION_DRINK_MAKER_ADD_TIPS = 5951;
	PLAYER_ACTION_DRINK_MAKER_FINISH_CHALLENGE = 5952;
	PLAYER_ACTION_DRINK_MAKER_GUEST_MAX_FAITH_REWARD = 5953;
	PLAYER_ACTION_DRINK_MAKER_MAKE_DRINK = 5954;
	PLAYER_ACTION_DRINK_MAKER_SAVE_CUSTOM_DRINK = 5955;
	PLAYER_ACTION_DRINK_MAKER_END_SEQUENCE = 5956;
	PLAYER_ACTION_DRINK_MAKER_CHEERS_MAKE_DRINK = 5957;
	PLAYER_ACTION_DRINK_MAKER_CHEERS_NPC_DRINK = 5958;
	PLAYER_ACTION_CHANGE_STORY_LINE = 6001;
	PLAYER_ACTION_CONTENT_PACKAGE_STATUS_CHANGE = 6011;
	PLAYER_ACTION_CONTENT_PACKAGE_TRACK_CHANGE = 6012;
	PLAYER_ACTION_CONTENT_PACKAGE_ACCEPT_MAIN_MISSION = 6013;
	PLAYER_ACTION_WORLD_DIRECT_UNLOCK = 6041;
	PLAYER_ACTION_MONOPOLY_TURN_FINISH = 6051;
	PLAYER_ACTION_MONOPOLY_ASSET_TURNTAX = 6052;
	PLAYER_ACTION_MONOPOLY_ASSET_BONUS = 6053;
	PLAYER_ACTION_MONOPOLY_EVENT_EFFECT = 6054;
	PLAYER_ACTION_MONOPOLY_MINI_GAME_SETTLE = 6055;
	PLAYER_ACTION_MONOPOLY_GAME_RAISE_RATIO = 6056;
	PLAYER_ACTION_MONOPOLY_MOVE_ROLL_DICE = 6057;
	PLAYER_ACTION_MONOPOLY_MOVE = 6059;
	PLAYER_ACTION_MONOPOLY_BUY_GOODS = 6060;
	PLAYER_ACTION_MONOPOLY_UPGRADE_ASSET = 6061;
	PLAYER_ACTION_MONOPOLY_EVENT_REROLL_RANDOM = 6062;
	PLAYER_ACTION_MONOPOLY_DAILY_REFRESH = 6063;
	PLAYER_ACTION_MONOPOLY_GAME_GUESS_BUY_INFORMATION = 6064;
	PLAYER_ACTION_MONOPOLY_DAILY_FIRST_ENTER_ACTIVITY = 6065;
	PLAYER_ACTION_MONOPOLY_SOCIAL_EVENT = 6066;
	PLAYER_ACTION_MONOPOLY_RAFFLE_TICKET_REWARD = 6067;
	PLAYER_ACTION_MONOPOLY_LIKE = 6068;
	PLAYER_ACTION_MONOPOLY_PHASE_REWARD = 6069;
	PLAYER_ACTION_MONOPOLY_MBTI_REPORT_REWARD = 6070;
	PLAYER_ACTION_MONOPOLY_DAILY_SETTLE = 6071;
	PLAYER_ACTION_MONOPOLY_START = 6072;
	PLAYER_ACTION_MONOPOLY_GET_BUFF = 6073;
	PLAYER_ACTION_MONOPOLY_ASSET_FUNDS_CHANGE = 6074;
	PLAYER_ACTION_MONOPOLY_ASSET_UPGRADE = 6075;
	PLAYER_ACTION_MONOPOLY_DIRECT_COIN_GAME_SETTLE = 6076;
	PLAYER_ACTION_MONOPOLY_EXTRACT_RAFFLE_TICKET = 6077;
	PLAYER_ACTION_MONOPOLY_MBTI_PROGRESS_CHANGE = 6078;
	PLAYER_ACTION_MONOPOLY_QUIZ_GAME_SETTLE = 6079;
	PLAYER_ACTION_MONOPOLY_EVENT_SETTLE = 6080;
	PLAYER_ACTION_MONOPOLY_ITEM_CHANGE = 6081;
	PLAYER_ACTION_MONOPOLY_CELL_TRIGGER = 6082;
	PLAYER_ACTION_MONOPOLY_EVENT_TRIGGER = 6083;
	PLAYER_ACTION_MONOPOLY_CLICK_EFFECT = 6084;
	PLAYER_ACTION_EVOLVE_BUILD_LEVEL_FINISH = 6101;
	PLAYER_ACTION_EVOLVE_BUILD_SHOP_ABILITY_UP = 6102;
	PLAYER_ACTION_EVOLVE_BUILD_SHOP_ABILITY_DOWN = 6103;
	PLAYER_ACTION_EVOLVE_BUILD_TAKE_EXP_REWARD = 6104;
	PLAYER_ACTION_EVOLVE_BUILD_BATTLE_END_ADD_COIN = 6105;
	PLAYER_ACTION_EVOLVE_BUILD_SHOP_ABILITY_RESET = 6106;
	PLAYER_ACTION_EVOLVE_BUILD_LEVEL_START = 6107;
	PLAYER_ACTION_EVOLVE_BUILD_LEVEL_END = 6108;
	PLAYER_ACTION_EVOLVE_BUILD_STAGE_START = 6109;
	PLAYER_ACTION_EVOLVE_BUILD_STAGE_END = 6110;
	PLAYER_ACTION_EVOLVE_BUILD_LEVEL_LEAVE = 6111;
	PLAYER_ACTION_CLOCK_PARK_UNLOCK_SCRIPT = 6151;
	PLAYER_ACTION_CLOCK_PARK_UNLOCK_TALENT = 6152;
	PLAYER_ACTION_CLOCK_PARK_FINISH_SCRIPT = 6153;
	PLAYER_ACTION_CLOCK_PARK_ROUND_UPDATE = 6154;
	PLAYER_ACTION_CLOCK_PARK_SCRIPT_BEGIN = 6155;
	PLAYER_ACTION_ROGUE_TOURN_START_LEVEL = 6200;
	PLAYER_ACTION_ROGUE_TOURN_FINISH_LEVEL = 6201;
	PLAYER_ACTION_ROGUE_TOURN_EXP_REWARD = 6202;
	PLAYER_ACTION_ROGUE_TOURN_FINISH_WEEK_CHALLENGE = 6203;
	PLAYER_ACTION_ROGUE_TOURN_PERMANENT_TALENT_EFFECT = 6204;
	PLAYER_ACTION_ROGUE_TOURN_FINISH_FORMULA_STORY = 6205;
	PLAYER_ACTION_ROGUE_TOURN_REVIVE = 6206;
	PLAYER_ACTION_ROGUE_TOURN_STAGE_BEGIN = 6207;
	PLAYER_ACTION_ROGUE_TOURN_STAGE_END = 6208;
	PLAYER_ACTION_ROGUE_TOURN_PERMANENT_ENABLE_TALENT = 6209;
	PLAYER_ACTION_ROGUE_TOURN_PERMANENT_RESET_TALENT = 6210;
	PLAYER_ACTION_ROGUE_TOURN_COCOON_STAGE_BEGIN = 6211;
	PLAYER_ACTION_ROGUE_TOURN_COCOON_STAGE_END = 6212;
	PLAYER_ACTION_ROGUE_TOURN_EXP_UPDATE = 6213;
	PLAYER_ACTION_ROGUE_TOURN_ENTER_ROOM = 6214;
	PLAYER_ACTION_ROGUE_TOURN_LEAVE_ROOM = 6215;
	PLAYER_ACTION_ROGUE_TOURN_ARCHIVE_SAVE = 6216;
	PLAYER_ACTION_ROGUE_TOURN_SELECT_BONUS = 6217;
	PLAYER_ACTION_ROGUE_TOURN_DIALOGUE_FINISH = 6218;
	PLAYER_ACTION_ROGUE_TOURN_DO_GAMBLE = 6219;
	PLAYER_ACTION_ROGUE_TOURN_ROOM_CONTENT_GENERATE = 6220;
	PLAYER_ACTION_ROGUE_TOURN_ADD_MIRACLE = 6221;
	PLAYER_ACTION_ROGUE_TOURN_REMOVE_MIRACLE = 6222;
	PLAYER_ACTION_ROGUE_TOURN_SELECT_MIRACLE = 6223;
	PLAYER_ACTION_ROGUE_TOURN_DROP_MIRACLE = 6224;
	PLAYER_ACTION_ROGUE_TOURN_ADD_BUFF = 6225;
	PLAYER_ACTION_ROGUE_TOURN_SELECT_BUFF = 6226;
	PLAYER_ACTION_ROGUE_TOURN_BUFF_LEVEL_UP = 6227;
	PLAYER_ACTION_ROGUE_TOURN_REMOVE_BUFF = 6228;
	PLAYER_ACTION_ROGUE_TOURN_ADD_FORMULA = 6229;
	PLAYER_ACTION_ROGUE_TOURN_REMOVE_FORMULA = 6230;
	PLAYER_ACTION_ROGUE_TOURN_SELECT_FORMULA = 6231;
	PLAYER_ACTION_ROGUE_TOURN_ACTIVATE_FORMULA = 6232;
	PLAYER_ACTION_ROGUE_TOURN_ADVENTURE_ROOM_FINISH = 6233;
	PLAYER_ACTION_ROGUE_TOURN_ALTER_LINEUP = 6234;
	PLAYER_ACTION_ROGUE_TOURN_SEASON_ENABLE_TALENT = 6235;
	PLAYER_ACTION_ROGUE_TOURN_TITAN_START_LEVEL = 6236;
	PLAYER_ACTION_ROGUE_TOURN_TITAN_FINISH_LEVEL = 6237;
	PLAYER_ACTION_ROGUE_TOURN_TITAN_ENTER_ROOM = 6238;
	PLAYER_ACTION_ROGUE_TOURN_TITAN_LEAVE_ROOM = 6239;
	PLAYER_ACTION_ROGUE_TOURN_TITAN_STAGE_BEGIN = 6240;
	PLAYER_ACTION_ROGUE_TOURN_TITAN_STAGE_END = 6241;
	PLAYER_ACTION_ROGUE_TOURN_TITAN_ARCHIVE_SAVE = 6243;
	PLAYER_ACTION_ROGUE_TOURN_TITAN_ADD_TITAN_BLESS = 6244;
	PLAYER_ACTION_ROGUE_TOURN_TITAN_SELECT_TITAN_BLESS = 6245;
	PLAYER_ACTION_ROGUE_TOURN_DIVISION_CHANGE = 6246;
	PLAYER_ACTION_ROGUE_TOURN_SELECT_RE_ROLL_MIRACLE = 6247;
	PLAYER_ACTION_ROGUE_TOURN_TRIGGER_BATTLE_BY_SHOP = 6248;
	PLAYER_ACTION_ROGUE_WORKBENCH_REFORGE_FORMULA = 6281;
	PLAYER_ACTION_ROGUE_WORKBENCH_REFORGE_MIRACLE = 6282;
	PLAYER_ACTION_ROGUE_WORKBENCH_COMPOSE_MIRACLE = 6283;
	PLAYER_ACTION_ROGUE_WORKBENCH_REFORGE_BUFF = 6284;
	PLAYER_ACTION_ROGUE_WORKBENCH_ENHANCE_BUFF = 6285;
	PLAYER_ACTION_MATCH_THREE_PVE_SETTLE = 6301;
	PLAYER_ACTION_MATCH_THREE_SETTLE = 6302;
	PLAYER_ACTION_FIGHT_MATCH3_GAME_START = 6303;
	PLAYER_ACTION_FIGHT_MATCH3_GAME_END = 6304;
	PLAYER_ACTION_FIGHT_MATCH3_TURN_END = 6305;
	PLAYER_ACTION_MATCH_THREE_BIRD_POS = 6306;
	PLAYER_ACTION_MULTIPLE_PLAY_INVITE = 6307;
	PLAYER_ACTION_MULTIPLE_PLAY_INVITE_RESPOND = 6308;
	PLAYER_ACTION_MULTIPLE_PLAY_LOBBY_ENTER = 6309;
	PLAYER_ACTION_MULTIPLE_PLAY_LOBBY_QUIT = 6310;
	PLAYER_ACTION_MULTIPLE_PLAY_LOBBY_KICK = 6311;
	PLAYER_ACTION_MULTIPLE_PLAY_LOBBY_MATCH = 6312;
	PLAYER_ACTION_MARBLE_SETTLE = 6313;
	PLAYER_ACTION_MATCH_THREE_SOLO_SETTLE = 6314;
	PLAYER_ACTION_MATCH_THREE_V2_BATTLEITEM_LEVELUP = 6315;
	PLAYER_ACTION_MATCH_THREE_V2_PVE_SETTLE = 6316;
	PLAYER_ACTION_MATCH_THREE_V2_PVP_SETTLE = 6317;
	PLAYER_ACTION_MATCH3_SOLO_GAME_START = 6318;
	PLAYER_ACTION_MATCH3_SOLO_GAME_END = 6319;
	PLAYER_ACTION_MATCH3_SOLO_ROUND_END = 6320;
	PLAYER_ACTION_SWORD_TRAINING_LEARN_SKILL = 6351;
	PLAYER_ACTION_SWORD_TRAINING_NORMAL_ACTION = 6352;
	PLAYER_ACTION_SWORD_TRAINING_STORY_EFFECT = 6353;
	PLAYER_ACTION_SWORD_TRAINING_ENDING_HINT = 6354;
	PLAYER_ACTION_SWORD_TRAINING_ACTION_HINT = 6355;
	PLAYER_ACTION_SWORD_TRAINING_RESTORE_GAME_BY_EXAM = 6356;
	PLAYER_ACTION_SWORD_TRAINING_STORY_LINE_FIRST_CLEAR = 6357;
	PLAYER_ACTION_SWORD_TRAINING_TAKE_ENDING_REWARD = 6358;
	PLAYER_ACTION_SWORD_TRAINING_STORY_LINE_BEGIN = 6359;
	PLAYER_ACTION_SWORD_TRAINING_ENTER_TURN = 6360;
	PLAYER_ACTION_SWORD_TRAINING_PLAN_ACTION = 6361;
	PLAYER_ACTION_SWORD_TRAINING_ACTION_PHASE_END = 6362;
	PLAYER_ACTION_SWORD_TRAINING_STORY = 6363;
	PLAYER_ACTION_SWORD_TRAINING_STATUS_CHANGE = 6364;
	PLAYER_ACTION_SWORD_TRAINING_MOOD_CHANGE = 6365;
	PLAYER_ACTION_SWORD_TRAINING_BATTLE_BEGIN = 6366;
	PLAYER_ACTION_SWORD_TRAINING_BATTLE_END = 6367;
	PLAYER_ACTION_SWORD_TRAINING_COMBAT_RANK_CHANGE = 6368;
	PLAYER_ACTION_SWORD_TRAINING_STORY_LINE_END = 6369;
	PLAYER_ACTION_SWORD_TRAINING_RESUME_STORY_LINE = 6370;
	PLAYER_ACTION_SWORD_TRAINING_GAME_SUCCESS = 6371;
	PLAYER_ACTION_SWORD_TRAINING_GAME_GIVE_UP = 6372;
	PLAYER_ACTION_SWORD_TRAINING_EXAM = 6374;
	PLAYER_ACTION_SWORD_TRAINING_DIALOGUE = 6375;
	PLAYER_ACTION_SWORD_TRAINING_SET_SKILL_TRACE = 6376;
	PLAYER_ACTION_FIGHT_FEST_FINISH_SCORE_RACE_MISSION = 6401;
	PLAYER_ACTION_FIGHT_FEST_FINISH_SCORE_RACE_PHASE = 6402;
	PLAYER_ACTION_FIGHT_FEST_RACE_START = 6403;
	PLAYER_ACTION_FIGHT_FEST_RACE_END = 6404;
	PLAYER_ACTION_FIGHT_FEST_CHALLENGE_START = 6405;
	PLAYER_ACTION_FIGHT_FEST_CHALLENGE_END = 6406;
	PLAYER_ACTION_FIGHT_FEST_GET_COACH_ITEM = 6407;
	PLAYER_ACTION_FIGHT_FEST_ACCEPT_SCORE_RACE_MISSION = 6408;
	PLAYER_ACTION_PET_USE = 6451;
	PLAYER_ACTION_MUSIC_RHYTHM_PASS_LEVEL_STAR = 6501;
	PLAYER_ACTION_MUSIC_RHYTHM_LEVEL_BEGIN = 6502;
	PLAYER_ACTION_MUSIC_RHYTHM_LEVEL_END = 6503;
	PLAYER_ACTION_TRACK_PHOTO_STAGE_BEGIN = 6551;
	PLAYER_ACTION_TRACK_PHOTO_STAGE_END = 6552;
	PLAYER_ACTION_SUMMON_ACTIVITY_BATTLE_BEGIN = 6561;
	PLAYER_ACTION_SUMMON_ACTIVITY_BATTLE_END = 6562;
	PLAYER_ACTION_RAID_COLLECTION_ENTER_NEXT_RAID = 6571;
	PLAYER_ACTION_DIFFICULTY_ADJUSTMENT_SET = 6572;
	PLAYER_ACTION_DIFFICULTY_ADJUSTMENT_UNSET = 6573;
	PLAYER_ACTION_ROGUE_ARCADE_ADVENTURE_ROOM_START = 6580;
	PLAYER_ACTION_ROGUE_ARCADE_ADVENTURE_ROOM_FINISH = 6581;
	PLAYER_ACTION_ROGUE_MAGIC_START_LEVEL = 6601;
	PLAYER_ACTION_ROGUE_MAGIC_FINISH_LEVEL = 6602;
	PLAYER_ACTION_ROGUE_MAGIC_REVIVE = 6603;
	PLAYER_ACTION_ROGUE_MAGIC_ENTER_ROOM = 6604;
	PLAYER_ACTION_ROGUE_MAGIC_LEAVE_ROOM = 6605;
	PLAYER_ACTION_ROGUE_MAGIC_ADD_MIRACLE = 6606;
	PLAYER_ACTION_ROGUE_MAGIC_REMOVE_MIRACLE = 6607;
	PLAYER_ACTION_ROGUE_MAGIC_STAGE_BEGIN = 6608;
	PLAYER_ACTION_ROGUE_MAGIC_STAGE_END = 6609;
	PLAYER_ACTION_ROGUE_MAGIC_ENABLE_TALENT = 6610;
	PLAYER_ACTION_ROGUE_MAGIC_FINISH_STORY = 6611;
	PLAYER_ACTION_ROGUE_MAGIC_ADD_SCEPTER = 6612;
	PLAYER_ACTION_ROGUE_MAGIC_SELECT_SCEPTER = 6613;
	PLAYER_ACTION_ROGUE_MAGIC_MOUNT_UNIT = 6614;
	PLAYER_ACTION_ROGUE_MAGIC_AUTO_MOUNT_UNIT = 6615;
	PLAYER_ACTION_ROGUE_MAGIC_ADD_MAGIC_UNIT = 6616;
	PLAYER_ACTION_ROGUE_MAGIC_REMOVE_MAGIC_UNIT = 6617;
	PLAYER_ACTION_ROGUE_MAGIC_WORKBENCH_COMPOSE_MAGIC_UNIT = 6618;
	PLAYER_ACTION_ROGUE_MAGIC_WORKBENCH_REFORGE_MAGIC_UNIT = 6619;
	PLAYER_ACTION_ROGUE_MAGIC_WORKBENCH_LEVEL_UP_SCEPTER = 6620;
	PLAYER_ACTION_TRAIN_PARTY_GAME_PLAY_START = 6701;
	PLAYER_ACTION_TRAIN_PARTY_PHASE_BEGIN = 6702;
	PLAYER_ACTION_TRAIN_PARTY_PHASE_END = 6703;
	PLAYER_ACTION_TRAIN_PARTY_ROUND = 6704;
	PLAYER_ACTION_TRAIN_PARTY_MEETING_BEGIN = 6705;
	PLAYER_ACTION_TRAIN_PARTY_MEETING_END = 6706;
	PLAYER_ACTION_TRAIN_PARTY_MEETING_PLAY_CARD = 6707;
	PLAYER_ACTION_TRAIN_PARTY_MEETING_RE_ROLL = 6708;
	PLAYER_ACTION_TRAIN_PARTY_BUILD_AREA_UNLOCK = 6709;
	PLAYER_ACTION_TRAIN_PARTY_BUILD_STEP = 6710;
	PLAYER_ACTION_TRAIN_PARTY_BUILD_LEVEL_AWARD = 6711;
	PLAYER_ACTION_TRAIN_PARTY_BUILDING_DYNAMIC_BUFF = 6712;
	PLAYER_ACTION_TRAIN_PARTY_BUILD_DIY = 6713;
	PLAYER_ACTION_SWITCH_HAND_OP_PROP_STATE = 6801;
	PLAYER_ACTION_ERA_FLIPPER_CHANGE_REGION_STATE = 6811;
	PLAYER_ACTION_ERA_FLIPPER_CHANGE_PROP_STATE = 6812;
	PLAYER_ACTION_ACTIVITY_BENEFIT_REWARD = 6820;
	PLAYER_ACTION_ACTIVITY_BENEFIT_JOIN = 6821;
	PLAYER_ACTION_ACTIVITY_BENEFIT_INITIAL_REWARD = 6822;
	PLAYER_ACTION_PAM_SKIN_CHANGE_SKIN = 6851;
	PLAYER_ACTION_CHEST_FIND = 6861;
	PLAYER_ACTION_REISSUE_MARK_CHEST_ITEM_MAIL = 6862;
	PLAYER_ACTION_MARBLE_PASS_MATCH = 6871;
	PLAYER_ACTION_MARBLE_BUY_SEAL = 6872;
	PLAYER_ACTION_MARBLE_FIGHT_GAME_BEGIN = 6873;
	PLAYER_ACTION_MARBLE_FIGHT_GAME_END = 6874;
	PLAYER_ACTION_MARBLE_FIGHT_GAME_ROUND = 6875;
	PLAYER_ACTION_MARBLE_FIGHT_GAME_TURN = 6876;
	PLAYER_ACTION_PLANET_FES_LEVEL_UP = 6901;
	PLAYER_ACTION_PLANET_FES_ACTIVITY_INIT = 6902;
	PLAYER_ACTION_PLANET_FES_AVATAR_LEVEL_UP = 6903;
	PLAYER_ACTION_PLANET_FES_TAKE_REGION_PHASE_REWARD = 6904;
	PLAYER_ACTION_PLANET_FES_ADD_ITEM = 6905;
	PLAYER_ACTION_PLANET_FES_QUEST = 6906;
	PLAYER_ACTION_PLANET_FES_BUSINESS_DAY_FINISH = 6907;
	PLAYER_ACTION_PLANET_FES_AVATAR_STAR_UP = 6908;
	PLAYER_ACTION_PLANET_FES_UNLOCK_LAND = 6909;
	PLAYER_ACTION_PLANET_FES_BUSINESS_EVENT_FINISH = 6910;
	PLAYER_ACTION_PLANET_FES_ACTIVATE_CARD = 6911;
	PLAYER_ACTION_PLANET_FES_SKILL_LEVEL_UP = 6912;
	PLAYER_ACTION_PLANET_FES_GACHA = 6913;
	PLAYER_ACTION_PLANET_FES_BUSINESS_EVENT_HANDLE = 6914;
	PLAYER_ACTION_PLANET_FES_CARD_APPLY_PERMISSION = 6915;
	PLAYER_ACTION_PLANET_FES_CARD_INTERACT = 6916;
	PLAYER_ACTION_PLANET_FES_TO_SNS = 6917;
	PLAYER_ACTION_PLANET_FES_SET_WORK_AVATAR = 6918;
	PLAYER_ACTION_PLANET_FES_SUMMARY = 6919;
	PLAYER_ACTION_TAROT_BOOK_CHARACTER_LEVEL_UP = 6951;
	PLAYER_ACTION_TAROT_BOOK_OPEN_PACK = 6952;
	PLAYER_ACTION_TAROT_BOOK_UNLOCK_STORY = 6953;
	PLAYER_ACTION_TAROT_BOOK_UNLOCK_STORY_SINGLE = 6954;
	PLAYER_ACTION_TAROT_BOOK_FINISH_STORY = 6955;
	PLAYER_ACTION_TAROT_BOOK_FINISH_INTERACTION = 6956;
	PLAYER_ACTION_TAROT_BOOK_CHANGE_ENERGY = 6957;
	PLAYER_ACTION_TAROT_BOOK_UNLOCK_INTERACTION = 6958;
	PLAYER_ACTION_CHIMERA_ROUND_START = 6971;
	PLAYER_ACTION_CHIMERA_ROUND_WORK_START = 6972;
	PLAYER_ACTION_CHIMERA_ROUND_WORK_END = 6973;
	PLAYER_ACTION_CHIMERA_ENDLESS_START = 6974;
	PLAYER_ACTION_CHIMERA_ENDLESS_END = 6975;
	PLAYER_ACTION_CHIMERA_ENDLESS_WORK_START = 6976;
	PLAYER_ACTION_CHIMERA_ENDLESS_WORK_END = 6977;
	PLAYER_ACTION_CHIMERA_RANK_CHANGE = 6978;
	PLAYER_ACTION_CHIMERA_GET = 6979;
	PLAYER_ACTION_STORY_TOKEN_TAKE_ACTIVITY_REWARD = 6991;
	PLAYER_ACTION_REISSUE_AVATAR_TOKEN_ITEM = 6992;
	PLAYER_ACTION_AVATAR_DELIVER_REWARD_ACTIVITY_TAKE_REWARD = 7001;
	PLAYER_ACTION_ELF_RESTAURANT_BUY_FIELD = 7011;
	PLAYER_ACTION_ELF_RESTAURANT_PLANT_SEED = 7012;
	PLAYER_ACTION_ELF_RESTAURANT_RECYCLE_SEED = 7013;
	PLAYER_ACTION_ELF_RESTAURANT_HARVEST_CROP = 7014;
	PLAYER_ACTION_ELF_RESTAURANT_UPGRADE_EMPLOYEE_LEVEL = 7015;
	PLAYER_ACTION_ELF_RESTAURANT_UPGRADE_FACILITY_LEVEL = 7016;
	PLAYER_ACTION_ELF_RESTAURANT_UPGRADE_RECIPE_LEVEL = 7017;
	PLAYER_ACTION_ELF_RESTAURANT_BUY_SHOP_ITEM = 7018;
	PLAYER_ACTION_ELF_RESTAURANT_FINISH_TRADE_ORDER = 7019;
	PLAYER_ACTION_ELF_RESTAURANT_TAKE_VILLAGER_REWARD = 7020;
	PLAYER_ACTION_ELF_RESTAURANT_SETTLE_RESTAURANT_PLAY = 7021;
	PLAYER_ACTION_ELF_RESTAURANT_INIT = 7022;
	PLAYER_ACTION_ELF_RESTAURANT_SETTLE_PROGRESS = 7023;
	PLAYER_ACTION_ELF_RESTAURANT_SETTLE_DAY = 7024;
	PLAYER_ACTION_ELF_RESTAURANT_ADD_ITEM = 7025;
	PLAYER_ACTION_LOCAL_LEGEND_REWARD = 7031;
	PLAYER_ACTION_FATE_LEVEL_START = 7041;
	PLAYER_ACTION_FATE_LEVEL_SETTLE = 7042;
	PLAYER_ACTION_FATE_BATTLE_START = 7043;
	PLAYER_ACTION_FATE_BATTLE_END = 7044;
	PLAYER_ACTION_FATE_ADD_HOUGU = 7045;
	PLAYER_ACTION_FATE_SELECT_HOUGU = 7046;
	PLAYER_ACTION_FATE_SELECT_REIJU = 7047;
	PLAYER_ACTION_FATE_REFRESH_REIJU = 7048;
	PLAYER_ACTION_FATE_ADD_COIN = 7049;
	PLAYER_ACTION_FATE_BUY_BUFF = 7050;
	PLAYER_ACTION_FATE_SELL_BUFF = 7051;
	PLAYER_ACTION_FATE_REFRESH_SHOP = 7052;
	PLAYER_ACTION_FATE_LOCK_GOODS = 7053;
	PLAYER_ACTION_FATE_UNLOCK_GOODS = 7054;
	PLAYER_ACTION_FATE_TAKE_EXP_REWARD = 7055;
	PLAYER_ACTION_FATE_ADD_EXP = 7056;
	PLAYER_ACTION_FATE_MASTER_HP_CHANGE = 7057;
	PLAYER_ACTION_PARKOUR_START_LEVEL = 7061;
	PLAYER_ACTION_PARKOUR_END_LEVEL = 7062;
	PLAYER_ACTION_BASIN_CHEST_INTERACT_RESULT = 7091;
	PLAYER_ACTION_ROGUE_MIRACLE_SWAP = 7092;
}

message MMMNFDNLJMD {
	uint32 queue_position = 1;
	uint32 GPJGGKNOAFD = 2;
	oneof OEEHIFHNFDH {
		LJNPGKDOJHO marble_game_begin = 101;
		BPNMJCHEDNL marble_game_end = 102;
		FOOPINGAFEG marble_game_round = 103;
		OFILKJCLEGI marble_game_turn = 104;
	}
}

message HCJJOOFKCJH {
	uint32 LPDBPKKADGG = 1;
	int32 HOMGCFJPBLK = 2;
	int32 CJJBLMKJAPA = 3;
}

message LNGMDMIPCKL {
	uint32 LPDBPKKADGG = 1;
	uint32 JOJAHIAFNLK = 2;
}

message CCCNHOECCMD {
	uint32 item_id = 1;
	uint32 BANELELNLKB = 2;
	uint32 skill_id = 3;
	int32 display_value = 4;
}

message NOOBBIHJKMA {
	int32 MFLEKHHPIEO = 1;
	int32 MAJLGJCFGJA = 2;
	int32 IOLCFLOFAGF = 3;
	int32 AMEIIMFKBFA = 4;
}

message LJNPGKDOJHO {
	uint32 monster_battle_type = 1;
	uint64 DBADLNFOPAO = 2;
	uint32 level_id = 3;
	uint32 NLIBKABFGCC = 4;
	repeated HCJJOOFKCJH BIECGFIMCFB = 5;
	uint32 rank = 6;
	uint64 EKLDPALNLDC = 7;
	repeated HCJJOOFKCJH FFFGFCPHBPN = 8;
	uint32 JBLMGNPMADM = 9;
}

message BPNMJCHEDNL {
	uint32 monster_battle_type = 1;
	uint64 DBADLNFOPAO = 2;
	uint32 level_id = 3;
	uint32 NLIBKABFGCC = 4;
	repeated HCJJOOFKCJH BIECGFIMCFB = 5;
	uint32 rank = 6;
	uint64 EKLDPALNLDC = 7;
	repeated HCJJOOFKCJH FFFGFCPHBPN = 8;
	uint32 JBLMGNPMADM = 9;
	uint32 IMBCLFCBODJ = 10;
	int32 score_id = 11;
	int32 NPJEECEDPOK = 12;
	repeated LNGMDMIPCKL PCEAECMKDEH = 13;
	uint32 IFNMBNGIFPH = 14;
	uint32 IEHJGOMBPBI = 15;
	uint32 IPHAFKFGNAO = 16;
	uint32 LBPFECLGEFC = 17;
}

message FOOPINGAFEG {
	uint32 monster_battle_type = 1;
	uint64 DBADLNFOPAO = 2;
	uint32 level_id = 3;
	uint32 NLIBKABFGCC = 4;
	uint32 IGHLABGGIJE = 5;
	uint32 LPDBPKKADGG = 6;
	bool HGBBKGNEPFB = 7;
	repeated HCJJOOFKCJH FEOPFHOLKBM = 8;
	uint32 rank = 9;
	repeated HCJJOOFKCJH CNDCKAKKMCG = 10;
	uint32 JBLMGNPMADM = 11;
	repeated CCCNHOECCMD skill_info = 12;
	repeated NOOBBIHJKMA KBGAJGEOMGL = 13;
	repeated HCJJOOFKCJH LELHCFOEOCO = 14;
	repeated HCJJOOFKCJH IMJEKFDHING = 15;
	uint32 DJNMHMPKKKB = 16;
}

message OFILKJCLEGI {
	uint32 monster_battle_type = 1;
	uint64 DBADLNFOPAO = 2;
	uint32 level_id = 3;
	uint32 NLIBKABFGCC = 4;
	bool NLEAIJHAPAP = 5;
	uint32 IGHLABGGIJE = 6;
	uint32 rank = 7;
	uint64 EKLDPALNLDC = 8;
	uint32 JBLMGNPMADM = 9;
	uint32 CBOIIACBAKF = 10;
	repeated uint32 buff_list = 11;
	uint32 DJNMHMPKKKB = 12;
}

enum AvatarSlotType {
	AVATAR_SLOT_1 = 0;
	AVATAR_SLOT_2 = 1;
	AVATAR_SLOT_3 = 2;
}

enum ItemType {
	ITEM_TYPE_NONE = 0;
	ITEM_AVATAR_CARD = 1;
	ITEM_EQUIPMENT = 2;
	ITEM_MATERIAL = 3;
	ITEM_AVATAR_EXP = 4;
	ITEM_RELIC = 5;
}

enum VirtualItemType {
	VIRTUAL_ITEM_NONE = 0;
	VIRTUAL_ITEM_HCOIN = 1;
	VIRTUAL_ITEM_SCOIN = 2;
	VIRTUAL_ITEM_MCOIN = 3;
	VIRTUAL_ITEM_STAMINA = 11;
	VIRTUAL_ITEM_RESERVE_STAMINA = 12;
	VIRTUAL_ITEM_AVATAR_EXP = 21;
	VIRTUAL_ITEM_EXP = 22;
	VIRTUAL_ITEM_DAILY_ACTIVE_POINT = 23;
	VIRTUAL_ITEM_MP_MAX = 24;
	VIRTUAL_ITEM_PLAYER_RETURN_POINT = 25;
	VIRTUAL_ITEM_BATTLE_COLLEGE_POINT = 26;
	VIRTUAL_ITEM_ROGUE_COIN = 31;
	VIRTUAL_ITEM_ROGUE_TALENT_COIN = 32;
	VIRTUAL_ITEM_ROGUE_REWARD_KEY = 33;
	VIRTUAL_ITEM_ACHIEVEMENT_EXP = 41;
	VIRTUAL_ITEM_BP_EXP = 51;
	VIRTUAL_ITEM_BP_REAL_EXP = 52;
	VIRTUAL_ITEM_MUSEUM_FUNDS = 53;
	VIRTUAL_TRAINPARTY_BUILDING_FUNDS = 54;
	VIRTUAL_TRAINPARTY_AREA_UNLOCK_COIN = 55;
	VIRTUAL_TRAINPARTY_MOBILITY = 56;
	VIRTUAL_ITEM_WARRIOR_EXP = 190;
	VIRTUAL_ITEM_ROGUE_EXP = 191;
	VIRTUAL_ITEM_MAGE_EXP = 192;
	VIRTUAL_ITEM_SHAMAN_EXP = 193;
	VIRTUAL_ITEM_WARLOCK_EXP = 194;
	VIRTUAL_ITEM_KNIGHT_EXP = 195;
	VIRTUAL_ITEM_PRIEST_EXP = 196;
	VIRTUAL_ITEM_PUNK_LORD_POINT = 100000;
	VIRTUAL_ITEM_GAMEPLAY_COUNTER_MONSTER_SNEAK_VISION = 280001;
	VIRTUAL_ITEM_GAMEPLAY_COUNTER_WOLF_BRO_BULLET = 280002;
	VIRTUAL_ITEM_ALLEY_FUNDS = 281001;
	VIRTUAL_ITEM_ROGUE_PUMAN_COUPON = 281012;
	VIRTUAL_ITEM_MONTH_CARD = 300101;
	VIRTUAL_ITEM_BP_NORMAL = 300102;
	VIRTUAL_ITEM_BP_DELUXE = 300103;
	VIRTUAL_ITEM_BP_UPGRADE = 300104;
	VIRTUAL_ITEM_HELIOBUS_FANS = 281002;
	VIRTUAL_ITEM_SPACE_ZOO_HYBRID_ITEM = 281003;
	VIRTUAL_ITEM_SPACE_ZOO_EXP_POINT = 281004;
	VIRTUAL_ITEM_ROGUE_NOUS_TALENT_COIN = 281013;
	VIRTUAL_ITEM_EVOLVE_BUILD_COIN = 281019;
	VIRTUAL_ITEM_DRINK_MAKER_TIP = 281005;
	VIRTUAL_ITEM_MONOPOLY_DICE = 281014;
	VIRTUAL_ITEM_MONOPOLY_COIN = 281015;
	VIRTUAL_ITEM_MONOPOLY_CHEATDICE = 281016;
	VIRTUAL_ITEM_MONOPOLY_REROLL = 281017;
	VIRTUAL_ITEM_ROGUE_TOURN_PERMANENT_TALENT_COIN = 281018;
	VIRTUAL_ITEM_ROGUE_TOURN_SEASON_TALENT_COIN = 281020;
	VIRTUAL_ITEM_ROGUE_TOURN_EXP = 281022;
	VIRTUAL_ITEM_MATCHTHREE_COIN = 281024;
	VIRTUAL_ITEM_SWORD_TRAINING_SKILL_POINT = 281023;
	VIRTUAL_ITEM_FIGHT_FEST_COIN = 281025;
	VIRTUAL_ITEM_ROGUE_MAGIC_TALENT_COIN = 281026;
	VIRTUAL_ITEM_EVOLVE_BUILD_SC_COIN = 281027;
	VIRTUAL_ITEM_EVOLVE_BUILD_REWARD_EXP = 281028;
	VIRTUAL_ITEM_MATCHTHREE_V2_COIN = 281029;
}

enum GameplayCounterType {
	GAMEPLAY_COUNTER_NONE = 0;
	GAMEPLAY_COUNTER_MONSTER_SNEAK_VISION = 280001;
}

enum BlackLimitLevel {
	BLACK_LIMIT_LEVEL_ALL = 0;
}

enum AreaType {
	AREA_NONE = 0;
	AREA_CN = 1;
	AREA_JP = 2;
	AREA_ASIA = 3;
	AREA_WEST = 4;
	AREA_KR = 5;
	AREA_OVERSEAS = 6;
}

enum EntityType {
	ENTITY_NONE = 0;
	ENTITY_AVATAR = 1;
	ENTITY_MONSTER = 2;
	ENTITY_NPC = 3;
	ENTITY_PROP = 4;
	ENTITY_TRIGGER = 5;
	ENTITY_ENV = 6;
	ENTITY_SUMMON_UNIT = 7;
}

enum LanguageType {
	LANGUAGE_NONE = 0;
	LANGUAGE_SC = 1;
	LANGUAGE_TC = 2;
	LANGUAGE_EN = 3;
	LANGUAGE_KR = 4;
	LANGUAGE_JP = 5;
	LANGUAGE_FR = 6;
	LANGUAGE_DE = 7;
	LANGUAGE_ES = 8;
	LANGUAGE_PT = 9;
	LANGUAGE_RU = 10;
	LANGUAGE_TH = 11;
	LANGUAGE_VI = 12;
	LANGUAGE_ID = 13;
}

enum PlatformType {
	EDITOR = 0;
	IOS = 1;
	ANDROID = 2;
	PC = 3;
	WEB = 4;
	WAP = 5;
	PS4 = 6;
	NINTENDO = 7;
	CLOUD_ANDROID = 8;
	CLOUD_PC = 9;
	CLOUD_IOS = 10;
	PS5 = 11;
	MAC = 12;
	CLOUD_MAC = 13;
	CLOUD_WEB_ANDROID = 20;
	CLOUD_WEB_IOS = 21;
	CLOUD_WEB_PC = 22;
	CLOUD_WEB_MAC = 23;
	CLOUD_WEB_TOUCH = 24;
	CLOUD_WEB_KEYBOARD = 25;
	CLOUD_DOUYIN_IOS = 27;
	CLOUD_DOUYIN_ANDROID = 28;
}

enum ReloginType {
	NO_KICK = 0;
	FORCE_KICK = 1;
	IDLE_KICK = 2;
	SILENCE = 3;
}

enum AvatarType {
	AVATAR_TYPE_NONE = 0;
	AVATAR_TRIAL_TYPE = 1;
	AVATAR_LIMIT_TYPE = 2;
	AVATAR_FORMAL_TYPE = 3;
	AVATAR_ASSIST_TYPE = 4;
	AVATAR_AETHER_DIVIDE_TYPE = 5;
	AVATAR_UPGRADE_AVAILABLE_TYPE = 6;
}

enum MultiPathAvatarType {
	MultiPathAvatarTypeNone = 0;
	Mar_7thKnightType = 1001;
	Mar_7thRogueType = 1224;
	BoyWarriorType = 8001;
	GirlWarriorType = 8002;
	BoyKnightType = 8003;
	GirlKnightType = 8004;
	BoyShamanType = 8005;
	GirlShamanType = 8006;
	BoyMemoryType = 8007;
	GirlMemoryType = 8008;
}

enum JNICOEPPDFN {
	AVATAR_TAG_NONE = 0;
	AVATAR_TAG_PLAYER_HAS_SET_ENHANCED_ID = 1;
	AVATAR_TAG_MAX = 32;
}

enum Gender {
	GenderNone = 0;
	GenderMan = 1;
	GenderWoman = 2;
}

enum ProductType {
	PRODUCT_NONE = 0;
	PRODUCT_NORMAL = 1;
	PRODUCT_LIMIT = 2;
	PRODUCT_LIMIT_NO_PAY = 3;
	PRODUCT_NO_PROCESS_ORDER = 4;
}

enum ProductGiftType {
	PRODUCT_GIFT_NONE = 0;
	PRODUCT_GIFT_COIN = 1;
	PRODUCT_GIFT_MONTH_CARD = 2;
	PRODUCT_GIFT_BP_68 = 3;
	PRODUCT_GIFT_BP_128 = 4;
	PRODUCT_GIFT_BP68_UPGRADE_128 = 5;
	PRODUCT_GIFT_POINT_CARD = 6;
	PRODUCT_GIFT_PS_PRE_ORDER_1 = 7;
	PRODUCT_GIFT_PS_PRE_ORDER_2 = 8;
	PRODUCT_GIFT_GOOGLE_POINTS_100 = 9;
	PRODUCT_GIFT_GOOGLE_POINTS_150 = 10;
	PRODUCT_GIFT_PS_POINT_CARD_030 = 11;
	PRODUCT_GIFT_PS_POINT_CARD_050 = 12;
	PRODUCT_GIFT_PS_POINT_CARD_100 = 13;
	PRODUCT_GIFT_PSN_PLUS = 14;
	PRODUCT_GIFT_SINGLE_6 = 15;
	PRODUCT_GIFT_DAILY_LOGIN_30 = 16;
	PRODUCT_GIFT_APPLE_GIFT_CARD = 17;
	PRODUCT_GIFT_FTC_UP_GACHA_TICKET_1 = 18;
	PRODUCT_GIFT_FTC_UP_GACHA_TICKET_10 = 19;
	PRODUCT_GIFT_FTC_NORMAL_GACHA_TICKET_1 = 20;
	PRODUCT_GIFT_FTC_NORMAL_GACHA_TICKET_10 = 21;
	PRODUCT_GIFT_TICKET_10 = 22;
}

enum FeatureSwitchType {
	FEATURE_SWITCH_NONE = 0;
	FEATURE_SWITCH_SHOP = 1;
	FEATURE_SWITCH_LINEUP_NAME = 2;
	FEATURE_SWITCH_RECHARGE_SHOP = 3;
	FEATURE_SWITCH_NICKNAME = 4;
	FEATURE_SWITCH_SIGNATURE = 5;
	FEATURE_SWITCH_BATTLEPASS = 6;
	FEATURE_SWITCH_PUNK_LORD = 7;
	FEATURE_SWITCH_MONTHCARD_DAILY = 8;
	FEATURE_SWITCH_PICTURE_SHARE = 9;
	FEATURE_SWITCH_ROGUE = 10;
	FEATURE_SWITCH_CHALLENGE = 11;
	FEATURE_SWITCH_COCOON = 12;
	FEATURE_SWITCH_RAID = 13;
	FEATURE_SWITCH_MAZE_PLANE_EVENT = 14;
	FEATURE_SWITCH_ACTIVITY_PANEL = 15;
	FEATURE_SWITCH_MAILBOX = 16;
	FEATURE_SWITCH_QUEST = 17;
	FEATURE_SWITCH_GACHA = 18;
	FEATURE_SWITCH_CHAT = 19;
	FEATURE_SWITCH_MODIFY_FRIEND_ALIAS = 20;
	FEATURE_SWITCH_USE_ITEM = 21;
	FEATURE_SWITCH_ACTIVITY_SCHEDULE = 22;
	FEATURE_SWITCH_FARM_ELEMENT = 23;
	FEATURE_SWITCH_ACHIEVEMENT_LEVEL = 24;
	FEATURE_SWITCH_DAILY_ACTIVE_LEVEL = 25;
	FEATURE_SWITCH_PLAYER_RETURN = 26;
	FEATURE_SWITCH_FIRST_SET_NICKNAME = 27;
	FEATURE_SWITCH_MAIN_MISSION_REWARD = 28;
	FEATURE_SWITCH_SUB_MISSION_REWARD = 29;
	FEATURE_SWITCH_PAM_MISSION = 30;
	FEATURE_SWITCH_DESTROY_ITEM = 32;
	FEATURE_SWITCH_CONSUME_ITEM_TURN = 33;
	FEATURE_SWITCH_ROGUE_MODIFIER = 34;
	FEATURE_SWITCH_CHESS_ROGUE = 35;
	FEATURE_SWITCH_CHESS_ROGUE_BOARD = 36;
	FEATURE_SWITCH_ROLL_SHOP = 37;
	FEATURE_SWITCH_H5_RETURN = 38;
	FEATURE_SWITCH_OFFERING = 39;
	FEATURE_SWITCH_SERVER_RED_POINT = 40;
	FEATURE_SWITCH_MONOPOLY_OPTION_RATIO = 41;
	FEATURE_SWITCH_MONOPOLY_GET_RAFFLE_TICKET = 42;
	FEATURE_SWITCH_MONOPOLY_TAKE_RAFFLE_REWARD = 43;
	FEATURE_SWITCH_CHALLENGE_RECOMMEND_LINEUP = 44;
	FEATURE_SWITCH_PSN_MEMBER_SHIP_CHECK = 45;
	FEATURE_SWITCH_PLAYER_BOARD_DEVELOPMENT = 46;
	FEATURE_SWITCH_PVP = 47;
	FEATURE_SWITCH_ROGUE_MODE = 48;
	FEATURE_SWITCH_ROGUE_TOURN_UGC = 49;
	FEATURE_SWITCH_RELIC_FILTER_PLAN_NAME = 50;
	FEATURE_SWITCH_MAZE_ITEM_USE_BUFF_DROP = 51;
	FEATURE_SWITCH_RED_DOT = 52;
	FEATURE_SWITCH_GAME_STATE_SERVICE = 53;
	FEATURE_SWITCH_BENEFIT_INDEX = 54;
	FEATURE_SWITCH_ROGUE_TOURN_BUILD_REF = 55;
	FEATURE_SWITCH_PRE_AVATAR_SET_GROWTH_TARGET = 56;
	FEATURE_SWITCH_IMPORT_RELIC_FILTER_PLAN = 58;
	FEATURE_SWITCH_GACHA_DECIDE_ITEM = 59;
	FEATURE_SWITCH_ITEM_SYNC = 60;
	FEATURE_SWITCH_RECHARGE_BENEFIT = 61;
	FEATURE_SWITCH_RECHARGE_GIFT = 62;
	FEATURE_SWITCH_ROGUE_TOURN_BUILD_REF_SHARE_CODE = 63;
	FEATURE_SWITCH_GACHA_AVATAR_TOAST = 64;
	FEATURE_SWITCH_ROGUE_TOURN_BUILD_REF_SHARE_CODE_RENAME = 65;
	FEATURE_SWITCH_RELIC_SMART_DISCARD = 66;
	FEATURE_SWITCH_PLANETFES_SOCIAL = 67;
	FEATURE_SWITCH_RELIC_REFORGE = 68;
	FEATURE_SWITCH_RELIC_COMPOSE = 69;
	FEATURE_SWITCH_RELIC_DECOMPOSE = 70;
	FEATURE_SWITCH_ROGUE_TOURN_COCOON = 71;
	FEATURE_SWITCH_ITEM_COMPOSE = 72;
	FEATURE_SWITCH_GROW_MATERIAL_AUTO_COMPLETE = 73;
	FEATURE_SWITCH_SKIP_PERFORMANCE = 74;
	FEATURE_SWITCH_FATE = 75;
	FEATURE_SWITCH_FATE_AVATAR_HANDBOOK = 76;
	FEATURE_SWITCH_ELF_RESTAURANT = 77;
	FEATURE_SWITCH_BATTLE_TIMEOUT_LEGAL = 78;
}

enum SecretKeyType {
	SECRET_KEY_NONE = 0;
	SECRET_KEY_SERVER_CHECK = 1;
	SECRET_KEY_VIDEO = 2;
	SECRET_KEY_BATTLE_TIME = 3;
}

enum ReplayType {
	REPLAY_TYPE_NONE = 0;
	REPLAY_TYPE_PUNK_LORD = 1;
}

enum PunkLordShareType {
	PUNK_LORD_SHARE_TYPE_NONE = 0;
	PUNK_LORD_SHARE_TYPE_FRIEND = 1;
	PUNK_LORD_SHARE_TYPE_ALL = 2;
}

enum PunkLordAttackerStatus {
	PUNK_LORD_ATTACKER_STATUS_NONE = 0;
	PUNK_LORD_ATTACKER_STATUS_ATTACKED = 1;
	PUNK_LORD_ATTACKER_STATUS_ATTACKING = 2;
	PUNK_LORD_ATTACKER_STATUS_ATTACKED_AND_ATTACKING = 3;
}

enum PunkLordMonsterInfoNotifyReason {
	PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_NONE = 0;
	PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_ENTER_RAID = 1;
	PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_BATTLE_END = 2;
	PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_LEAVE_RAID = 3;
}

enum ChatType {
	CHAT_TYPE_NONE = 0;
	CHAT_TYPE_PRIVATE = 1;
	CHAT_TYPE_GROUP = 2;
}

enum MsgType {
	MSG_TYPE_NONE = 0;
	MSG_TYPE_CUSTOM_TEXT = 1;
	MSG_TYPE_EMOJI = 2;
	MSG_TYPE_INVITE = 3;
	MSG_TYPE_PLANET_FES = 4;
}

enum PlanetFesType {
	PLANET_FES_MSG_CONTENT_NONE = 0;
	PLANET_FES_MSG_CONTENT_APPLY_REQ = 1;
	PLANET_FES_MSG_CONTENT_PIECE_OFFERED = 2;
}

enum ShieldType {
	SHIELD_TYPE_NONE = 0;
	SHIELD_TYPE_REPLACE = 1;
	SHIELD_TYPE_SHIED = 2;
}

enum FuncUnlockIdType {
	FUNC_UNLOCK_ID_NONE = 0;
	FUNC_UNLOCK_ID_RELIC = 403;
	FUNC_UNLOCK_ID_RELIC_NUM = 404;
	FUNC_UNLOCK_ID_EQUIPMENT = 401;
	FUNC_UNLOCK_ID_SKILLTREE = 402;
	FUNC_UNLOCK_ID_GACHA = 2300;
	FUNC_UNLOCK_ID_EXPEDITION = 3100;
	FUNC_UNLOCK_ID_COMPOSE = 4100;
	FUNC_UNLOCK_ID_FIGHTACTIVITY = 3700;
}

enum AssistAvatarType {
	ASSIST_AVATAR_UNKNOW = 0;
	ASSIST_AVATAR_LEVEL = 1;
	ASSIST_AVATAR_RANK = 2;
}

enum DevelopmentType {
	DEVELOPMENT_NONE = 0;
	DEVELOPMENT_ROGUE_COSMOS = 1;
	DEVELOPMENT_ROGUE_CHESS = 2;
	DEVELOPMENT_ROGUE_CHESS_NOUS = 3;
	DEVELOPMENT_MEMORY_CHALLENGE = 4;
	DEVELOPMENT_STORY_CHALLENGE = 5;
	DEVELOPMENT_UNLOCK_AVATAR = 6;
	DEVELOPMENT_UNLOCK_EQUIPMENT = 7;
	DEVELOPMENT_ACTIVITY_START = 8;
	DEVELOPMENT_ACTIVITY_END = 9;
	DEVELOPMENT_BOSS_CHALLENGE = 10;
	DEVELOPMENT_ROGUE_TOURN = 11;
	DEVELOPMENT_ROGUE_TOURN_WEEK = 12;
	DEVELOPMENT_ROGUE_MAGIC = 13;
}

enum PlayingState {
	PLAYING_STATE_NONE = 0;
	PLAYING_ROGUE_COSMOS = 1;
	PLAYING_ROGUE_CHESS = 2;
	PLAYING_ROGUE_CHESS_NOUS = 3;
	PLAYING_CHALLENGE_MEMORY = 4;
	PLAYING_CHALLENGE_STORY = 5;
	PLAYING_CHALLENGE_BOSS = 6;
	PLAYING_ROGUE_TOURN = 7;
	PLAYING_ROGUE_MAGIC = 8;
}

enum MatchRoomCharacterType {
	MatchRoomCharacter_None = 0;
	MatchRoomCharacter_Leader = 1;
	MatchRoomCharacter_Member = 2;
	MatchRoomCharacter_Watcher = 3;
}

enum MatchRoomCharacterStatus {
	MatchRoomCharacterStatus_None = 0;
	MatchRoomCharacterStatus_Idle = 1;
	MatchRoomCharacterStatus_Operating = 2;
	MatchRoomCharacterStatus_Ready = 3;
	MatchRoomCharacterStatus_Fighting = 4;
	MatchRoomCharacterStatus_Watching = 5;
}

enum MGECFLOEOEG {
	PLANET_FES_CARD_PIECE_APPLY_PERMISSION_REVIEW = 0;
	PLANET_FES_CARD_PIECE_APPLY_PERMISSION_FREE = 1;
	PLANET_FES_CARD_PIECE_PERMISSION_BAN = 2;
}

enum GHANGCBOEMC {
	PLANET_FES_CARD_PIECE_INTERACT_APPLYING = 0;
	PLANET_FES_CARD_PIECE_INTERACT_OFFERED = 1;
	PLANET_FES_CARD_PIECE_INTERACT_OFFER_TAKEN = 2;
	PLANET_FES_CARD_PIECE_INTERACT_APPLY_CANCELD = 3;
	PLANET_FES_CARD_PIECE_INTERACT_APPLY_COMPENSATED = 4;
}

enum IJHBCBEOPFE {
	PLANET_FES_CARD_PIECE_OFFER_SOURCE_REVIEW_APPLY = 0;
	PLANET_FES_CARD_PIECE_OFFER_SOURCE_FREE_APPLY = 1;
	PLANET_FES_CARD_PIECE_OFFER_SOURCE_GIVE = 2;
}

enum DLBFAHOAGPH {
	FATE_SOURCE_TYPE_NONE = 0;
	FATE_SOURCE_TYPE_FATE_BUFF = 1;
	FATE_SOURCE_TYPE_TRAIT_BUFF = 2;
	FATE_SOURCE_TYPE_REIJU = 3;
	FATE_SOURCE_TYPE_HOUGU = 4;
	FATE_SOURCE_TYPE_AFFIX = 5;
	FATE_SOURCE_TYPE_REIJU_AFFIX = 6;
	FATE_SOURCE_TYPE_LEVEL = 7;
	FATE_SOURCE_TYPE_MASTER = 8;
	FATE_SOURCE_TYPE_TRAIT = 9;
}

enum ENHDPLIKFHM {
	MATCH_THREE_VERSION_NONE = 0;
	MATCH_THREE_V1 = 1;
	MATCH_THREE_V2 = 2;
}

enum DLLLEANDAIH {
	FRIEND_RECOMMEND_LINEUP_TYPE_NONE = 0;
	FRIEND_RECOMMEND_LINEUP_TYPE_CHALLENGE = 1;
	FRIEND_RECOMMEND_LINEUP_TYPE_LOCAL_LEGEND = 2;
}

message PlayerBasicInfo {
	string nickname = 1;
	uint32 level = 2;
	uint32 exp = 3;
	uint32 stamina = 4;
	uint32 mcoin = 5;
	uint32 hcoin = 6;
	uint32 scoin = 7;
	uint32 world_level = 8;
}

message SpBarInfo {
	uint32 cur_sp = 1;
	uint32 max_sp = 2;
}

message BlackInfo {
	int64 begin_time = 1;
	int64 end_time = 2;
	uint32 limit_level = 3;
	uint32 ban_type = 4;
}

message FeverTimeAvatar {
	AvatarType avatar_type = 1;
	uint32 id = 2;
}

message OILPIACENNH {
	AvatarType avatar_type = 1;
	uint32 id = 2;
	uint32 level = 3;
	uint32 index = 4;
	uint32 GGDIIBCDOBB = 5;
}

message VersionCount {
	uint32 version = 1;
	uint32 count = 2;
}

message ClientDownloadData {
	uint32 version = 1;
	int64 time = 2;
	bytes data = 3;
	uint32 HAEHHCPOAPP = 4;
}

message ClientObjDownloadData {
	bytes BIDJPEIMLLF = 1;
	ClientDownloadData client_obj_download_data = 2;
	repeated ClientDownloadData JEDHNEJHGNP = 3;
}

message ClientUploadData {
	string tag = 1;
	string value = 2;
}

message FeatureSwitchParam {
	repeated uint32 switch_list = 1;
}

message HPIOFDCGMEJ {
	FeatureSwitchType type = 1;
	repeated FeatureSwitchParam NJCJDNHPCJN = 2;
	bool OAFMLJMDJFO = 3;
}

message JGFKICDCFLJ {
	string FDKGFDICMFD = 1;
	string MDJCAOAGCKO = 2;
	string GIOOHOOMJHO = 3;
	string FBMLLNKCFEN = 4;
	string DGOOHIBAOEE = 5;
	string FKBAMBOODKJ = 6;
	string MAC = 7;
}

message OCCHNEFHGNE {
	string AGDAELENHMI = 1;
	int32 EJIEAGFLGED = 2;
	int32 LDBFAIKMIFI = 3;
	int32 PKFLGKPHOED = 4;
	int32 AKDCLAEPFEJ = 5;
}

message ReplayInfo {
	uint64 DKNPKJMAHCM = 1;
	ReplayType replay_type = 2;
	uint32 stage_id = 3;
	uint32 uid = 4;
	string nickname = 5;
	uint32 head_icon = 6;
	string replay_name = 7;
	uint64 create_time = 8;
	uint32 AFEHLMFIBMD = 9;
	uint32 CMPBKBBKAOA = 10;
}

message PIGODJNHJML {
	uint32 avatar_id = 1;
	uint32 avatar_level = 2;
}

message AHKANKEPADJ {
	uint32 uid = 1;
	uint32 JHHLPLJAAME = 2;
	bool OBHIDGFGAMD = 3;
	uint32 POFHPDGAMKL = 4;
	string BDNLNMCOHGB = 5;
	repeated PIGODJNHJML avatar_list = 6;
	uint32 NCACOCCJNLD = 7;
	uint32 AHJFPNGDBDO = 8;
	uint32 PGOFPNLAPOE = 9;
}

message PunkLordBattleRecordList {
	repeated AHKANKEPADJ battle_record_list = 1;
}

message PunkLordMonsterKey {
	uint32 uid = 1;
	uint32 monster_id = 2;
}

message PunkLordMonsterBasicInfo {
	uint32 uid = 1;
	uint32 monster_id = 2;
	uint32 config_id = 3;
	uint32 world_level = 4;
	int64 create_time = 5;
	uint32 left_hp = 6;
	uint32 attacker_num = 7;
	PunkLordShareType share_type = 8;
	bool PPBOCECKCAH = 9;
}

message CEMEDOEHBGE {
	string BDNLNMCOHGB = 1;
	ReplayInfo FGNFBKBOGDJ = 2;
}

message ILDHFMHBKNC {
	uint64 INFHIKBLJLA = 1;
	uint32 NBDLPGBIDLC = 2;
	uint32 AHBEMDLGGEO = 3;
}

message LKAPFHAHNEM {
	uint32 panel_id = 1;
	uint32 modifier_content_type = 2;
	uint64 CFDANMOMHPI = 3;
}

message PEDLPHDBNAF {
	oneof GJMELAKIJIF {
		ILDHFMHBKNC LFCPHAJCEKF = 101;
		LKAPFHAHNEM CELMKOLBJNN = 102;
	}
}

message RegionInfo {
	string name = 1;
	string title = 2;
	string dispatch_url = 3;
	string env_type = 4;
	string display_name = 5;
	string msg = 6;
}

message Dispatch {
	uint32 retcode = 1;
	string msg = 2;
	string top_sever_region_name = 3;
	repeated RegionInfo region_list = 4;
	string stop_desc = 5;
}

message IIPKANNMLFN {
	uint32 HPOLOCPDDAC = 1;
	repeated uint32 KJEBIDEDLLD = 2;
	repeated uint32 KKCMFGMHIMO = 3;
	repeated uint32 LGEJJAJPEDK = 4;
	repeated uint32 FBBAJBINGLB = 5;
	repeated uint32 MPMFAHLKEOB = 6;
	bool KNLJGCADLJK = 7;
	uint32 IAMCOFEIJKI = 8;
	repeated uint32 CGPDCGDHGJF = 9;
	repeated uint32 IKNCCGNELKN = 10;
	repeated uint32 AJHLFMLJOIB = 11;
}

enum BattleCheckStrategyType {
	BATTLE_CHECK_STRATEGY_IDENTICAL = 0;
	BATTLE_CHECK_STRATEGY_SERVER = 1;
	BATTLE_CHECK_STRATEGY_CLIENT = 2;
	BATTLE_CHECK_STRATEGY_TIMEOUT_LEGAL = 3;
}

enum BattleCheckResultType {
	BATTLE_CHECK_RESULT_SUCC = 0;
	BATTLE_CHECK_RESULT_FAIL = 1;
	BATTLE_CHECK_RESULT_PASS = 2;
}

enum BattleModuleType {
	BATTLE_MODULE_MAZE = 0;
	BATTLE_MODULE_CHALLENGE = 1;
	BATTLE_MODULE_COCOON = 2;
	BATTLE_MODULE_ROGUE = 3;
	BATTLE_MODULE_CHALLENGE_ACTIVITY = 4;
	BATTLE_MODULE_TRIAL_LEVEL = 5;
	BATTLE_MODULE_AETHER_DIVIDE = 6;
}

enum AetherdivideSpiritLineupType {
	AETHERDIVIDE_SPIRIT_LINEUP_NONE = 0;
	AETHERDIVIDE_SPIRIT_LINEUP_NORMAL = 1;
	AETHERDIVIDE_SPIRIT_LINEUP_TRIAL = 2;
}

enum BattleTargetType {
	BATTLE_TARGET_TYPE_NONE = 0;
	BATTLE_TARGET_TYPE_SCORE = 1;
	BATTLE_TARGET_TYPE_ACHIEVEMENT = 2;
	BATTLE_TARGET_TYPE_RAID = 3;
	BATTLE_TARGET_TYPE_CHALLENGE_SCORE = 4;
	BATTLE_TARGET_TYPE_COMMON = 5;
	BATTLE_TARGET_TYPE_CLIENT_ACHIEVEMENT = 6;
}

enum DeathSource {
	UNKNOWN = 0;
	KILLED_BY_OTHERS = 1;
	KILLED_BY_SELF = 2;
	ESCAPE = 3;
}

enum BattleTag {
	TAG_NONE = 0;
	TAG_HIDE_NPC_MONSTER = 1;
}

enum HEMBNDJAFDA {
	NORMAL_CREATE = 0;
	FORM_CHANGE = 1;
}

enum BattleEndReason {
	BATTLE_END_REASON_NONE = 0;
	BATTLE_END_REASON_ALL_DIE = 1;
	BATTLE_END_REASON_TURN_LIMIT = 2;
}

enum BattleStaticticEventType {
	BATTLE_STATICTIC_EVENT_NONE = 0;
	BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_ADD_EXPLORE = 1;
	BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_OPEN_GRID = 2;
	BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_PICKUP_ITEM = 3;
	BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_USE_BUFF = 4;
	BATTLE_STATICTIC_EVENT_TELEVISION_ACTIVITY_UPDATE_MAZE_BUFF_LAYER = 5;
	BATTLE_STATICTIC_EVENT_ROGUE_TOURN_TITAN_EXTRA_COIN = 6;
	BATTLE_STATICTIC_EVENT_ROGUE_TOURN_TITAN_EXTRA_COIN_TIMES = 7;
}

enum BOJGAKMDPDL {
	EVOLVE_BUILD_FUNC_NONE = 0;
	EVOLVE_BUILD_FUNC_GEAR_RESET = 1;
	EVOLVE_BUILD_FUNC_GEAR_REMOVE = 2;
	EVOLVE_BUILD_FUNC_GEAR_SKIP = 3;
	EVOLVE_BUILD_FUNC_CARD_RESET = 4;
}

enum JEGLEIKMNCL {
	kNone = 0;
	kkillEliteMonsterNum = 1;
	kkillMonsterNum = 2;
}

enum BattleEndStatus {
	BATTLE_END_NONE = 0;
	BATTLE_END_WIN = 1;
	BATTLE_END_LOSE = 2;
	BATTLE_END_QUIT = 3;
}

enum JEBLPLIAHNM {
	MANUAL_AVATAR_UPGRADE_NONE = 0;
	MANUAL_AVATAR_UPGRADE_FATE = 1;
}

message BattleOp {
	uint32 turn_counter = 1;
	uint32 state = 2;
	uint32 action_entity_id = 3;
	uint32 target_entity_id = 4;
	uint32 op_type = 5;
	uint32 skill_index = 6;
	uint32 operation_counter = 7;
	string NPLIEIPHCBF = 8;
}

message BattleEquipment {
	uint32 id = 1;
	uint32 level = 2;
	uint32 promotion = 3;
	uint32 rank = 4;
}

message BattleRelic {
	uint32 id = 1;
	uint32 level = 2;
	uint32 main_affix_id = 3;
	repeated RelicAffix sub_affix_list = 4;
	uint32 unique_id = 5;
	uint32 set_id = 6;
	uint32 type = 7;
	uint32 rarity = 8;
}

message AvatarSkillTree {
	uint32 point_id = 1;
	uint32 level = 2;
}

message RelicAffix {
	uint32 affix_id = 1;
	uint32 cnt = 2;
	uint32 step = 3;
}

message BJHEBCCBANA {
	bool LJPADNCGLOC = 1;
	repeated uint32 DDDHNAKLMHF = 2;
	uint32 JGJCDMJIMNN = 3;
	uint32 POFMKDABEHD = 4;
}

message BattleAvatar {
	AvatarType avatar_type = 1;
	uint32 id = 2;
	uint32 level = 3;
	uint32 rank = 4;
	uint32 index = 5;
	repeated AvatarSkillTree skilltree_list = 6;
	repeated BattleEquipment equipment_list = 7;
	uint32 hp = 8;
	uint32 promotion = 10;
	repeated BattleRelic relic_list = 11;
	uint32 world_level = 12;
	uint32 assist_uid = 13;
	BJHEBCCBANA ECIFJLAKHCL = 15;
	SpBarInfo sp_bar = 16;
	uint32 GMOBAOCEFCE = 17;
	repeated AvatarSkillTree IMJJKBJOOHJ = 18;
	uint32 enhanced_id = 19;
}

message BattleMonsterParam {
	uint32 hard_level_group = 1;
	uint32 level = 2;
	uint32 elite_group = 3;
	uint32 DNEAMPLLFME = 4;
}

message BattleMonster {
	uint32 monster_id = 1;
	uint32 cur_hp = 2;
	uint32 max_hp = 3;
}

message BattleMonsterWave {
	repeated BattleMonster monster_list = 1;
	BattleMonsterParam monster_param = 2;
	uint32 battle_stage_id = 3;
	uint32 battle_wave_id = 4;
}

message BattleBuff {
	uint32 id = 1;
	uint32 level = 2;
	uint32 owner_index = 3;
	uint32 wave_flag = 4;
	repeated uint32 target_index_list = 5;
	map<string, float> dynamic_values = 6;
}

message ILLCDMOCLDO {
	uint32 id = 1;
	uint32 HFALJIHKECN = 2;
	uint32 LAEJDGHMKDB = 3;
}

message LJGIAGLFHHC {
	uint32 FENMMMKOOCF = 1;
}

message ENFLFBDAOIJ {
	uint32 id = 1;
	uint32 HFALJIHKECN = 2;
}

message GMGJCIHDFMA {
	uint32 id = 1;
	uint32 progress = 2;
}

message BattleTarget {
	uint32 id = 1;
	uint32 progress = 2;
	uint32 total_progress = 3;
}

message BattleTargetList {
	repeated BattleTarget battle_target_list = 1;
}

message BattleLineup {
	repeated BattleAvatar avatar_list = 1;
	repeated BattleMonsterWave monster_wave_list = 2;
	repeated BattleBuff buff_list = 3;
	uint32 world_level = 7;
	map<uint32, BattleTargetList> battle_target_info = 9;
	LJGIAGLFHHC AJGPJGLPMIO = 10;
	repeated BattleAvatar EJCLJLDENDM = 11;
	EvolveBuildBattleInfo JPGIFCHJDLK = 12;
	GIEIBEACBAO MFKJOKAJJMJ = 13;
	BattleRogueMagicInfo battle_rogue_magic_info = 14;
	EACDEAPKILK GEGDPNKKAKG = 15;
}

message GIEIBEACBAO {
	map<uint32, uint32> GCCJDHKHMNK = 1;
	uint32 FPBNIPMHANH = 2;
	uint32 AAGIANCIEEG = 3;
	uint32 ELPFOMLCOBM = 4;
}

message AetherAvatarInfo {
	uint32 id = 1;
	uint32 index = 2;
	uint32 promotion = 3;
	repeated uint32 passive_skill = 4;
	AetherdivideSpiritLineupType spirit_lineup_type = 5;
	SpBarInfo sp_bar = 6;
}

message PNDFMBJFGIM {
	repeated AetherAvatarInfo avatar_list = 1;
	repeated BattleMonsterWave monster_wave_list = 2;
	repeated BattleBuff buff_list = 3;
}

message ClientTurnSnapshot {
	uint32 turn_counter = 1;
	uint32 random_counter = 2;
	uint32 anim_event_counter = 3;
	repeated CharacterSnapshot snapshot_list = 4;
	repeated AnimEventSnapshot anim_event_list = 5;
	uint32 JEINBMLFCBP = 6;
}

message GamecoreConfig {
	bool is_skip_verify = 1;
	uint32 max_turn_cnt = 2;
	bool is_auto_fight = 3;
	string csv_path = 4;
	bool LKFDPDLDMIB = 5;
	bool MNALPNFNMIO = 6;
	uint32 GGFCOJFLKBP = 7;
}

message BattleBuffMsg {
	repeated uint32 buff_id_list = 1;
	repeated uint32 buff_index_list = 2;
	repeated uint32 buff_level_list = 3;
	repeated uint32 buff_flag_list = 4;
}

message DKFLALJDIFL {
	uint32 MBBCHGENGGL = 1;
	uint32 HFCDPHCHFGK = 2;
}

message MBMCFOLIOLO {
	bool CDNOJCACELJ = 1;
	map<string, DKFLALJDIFL> HANEGINLANI = 2;
	bytes CJKMGENOJBE = 3;
}

message MIAIDAILDKM {
	repeated ClientTurnSnapshot EEFLGHCOBML = 1;
	string KGBHEHHFMPI = 2;
	string debug_extra_info = 3;
	repeated BattleReplayStringHash HLAGIMENBJG = 4;
	uint32 plane_id = 5;
	uint32 floor_id = 6;
	uint32 EBHLFAEGLCD = 7;
	uint32 BNJMMLKOFCP = 8;
	MBMCFOLIOLO EDHBGDEICNC = 9;
	uint32 BBNAEFBAPLG = 10;
}

message BattleReplay {
	uint32 version = 1;
	uint32 logic_random_seed = 2;
	uint32 stage_id = 3;
	BattleLineup lineup = 4;
	repeated BattleOp op_list = 5;
	bytes turn_snapshot_hash = 6;
	uint32 maze_plane_id = 7;
	repeated uint32 extra_ability_list = 8;
	bool is_ai_consider_ultra_skill = 9;
	BattleCheckStrategyType check_strategy = 10;
	BattleModuleType battle_module_type = 11;
	repeated BattleEventBattleInfo battle_event = 12;
	uint32 rounds_limit = 14;
	GamecoreConfig config = 15;
	bytes game_core_log_encode = 16;
	uint32 client_version = 17;
	uint32 DDOGJOKECCL = 18;
	PNDFMBJFGIM GMPCFGEDHKI = 19;
	MIAIDAILDKM BNMIIAHADJH = 100;
}

message BattleReplayStringHash {
	int32 hash = 1;
	string value = 2;
}

message AvatarProperty {
	double max_hp = 1;
	double attack = 2;
	double defence = 3;
	double speed = 4;
	double left_hp = 5;
	double left_sp = 6;
	double max_sp = 7;
}

message EquipmentProperty {
	uint32 id = 1;
	uint32 rank = 2;
	uint32 promotion = 3;
	uint32 level = 4;
}

message AttackDamageProperty {
	string attack_type = 1;
	double damage = 2;
}

message SkillUseProperty {
	uint32 skill_id = 1;
	string skill_type = 2;
	uint32 skill_level = 3;
	uint32 skill_use_count = 4;
	uint32 IFEJKALHOPI = 5;
	uint32 JHDHLCNCDNC = 6;
	uint32 HOAFNNIJOOM = 7;
	uint32 MDEADCLNJCJ = 8;
	uint32 OHNPPJEMKDE = 9;
}

message GAAGEHABINM {
	uint32 skill_id = 1;
	double HGFLPENKIII = 2;
	repeated uint32 battle_target_list = 3;
	double damage = 4;
}

message SpAddSource {
	string source = 1;
	uint32 sp_add = 2;
}

message AbilityUseStt {
	string FKHHOBBFMEH = 1;
	uint32 count = 2;
	double total_damage = 3;
}

message AvatarBattleInfo {
	AvatarType avatar_type = 1;
	uint32 id = 2;
	uint32 avatar_level = 3;
	uint32 avatar_rank = 4;
	uint32 avatar_promotion = 5;
	AvatarProperty avatar_status = 6;
	repeated AvatarSkillTree avatar_skill = 7;
	repeated EquipmentProperty avatar_equipment = 8;
	uint32 total_turns = 9;
	double total_damage = 10;
	double total_heal = 11;
	double total_damage_taken = 12;
	double total_hp_recover = 13;
	double total_sp_cost = 14;
	uint32 stage_id = 15;
	uint32 stage_type = 16;
	double total_break_damage = 17;
	repeated AttackDamageProperty attack_type_damage = 18;
	repeated AttackDamageProperty attack_type_break_damage = 19;
	repeated AttackDamageProperty attack_type_max_damage = 20;
	repeated SkillUseProperty skill_times = 21;
	double delay_cumulate = 22;
	uint32 total_sp_add = 23;
	repeated SpAddSource sp_add_source = 24;
	uint32 total_bp_cost = 25;
	uint32 die_times = 26;
	uint32 revive_times = 27;
	uint32 break_times = 28;
	uint32 extra_turns = 29;
	double total_shield = 30;
	double total_shield_taken = 31;
	double total_shield_damage = 32;
	AvatarProperty initial_status = 33;
	repeated BattleRelic relics = 34;
	uint32 assist_uid = 35;
	repeated AttackDamageProperty AADGFLPBPDF = 36;
	double FPFBMIMBBHJ = 37;
	double GGPJOHNOCPC = 38;
	double LACKCJHHIMK = 39;
	double FMODLGOBNPE = 40;
	repeated AbilityUseStt LHKABNICKJN = 41;
	uint32 NCJHDJJDJNL = 42;
	uint32 LKMGDIADOPB = 43;
	double IBLGMCIPCKM = 44;
	double HACJDJIGMGP = 45;
	double IMDJAHAJGCF = 46;
	double JDOLKDBICLJ = 47;
	double CACCODDCJHI = 48;
	uint32 LLDMLOHBFLO = 49;
	uint32 CHNIKKCIBEG = 50;
	uint32 LBNJHHHLPMO = 51;
	double PDLILFICHIL = 52;
	uint32 PMKLPHJIOHC = 53;
	uint32 MPFAENEKFDC = 54;
	uint32 enhanced_id = 55;
}

message MonsterProperty {
	double max_hp = 1;
	double attack = 2;
	double defence = 3;
	double shield = 4;
	double speed = 5;
	double left_hp = 6;
	double enter_battle_hp = 7;
}

message MonsterPhaseStt {
	uint32 NDBOJANDNJN = 1;
	double MMCPHLPECDJ = 2;
	uint32 DOIADGDBOHF = 3;
	uint32 break_times = 4;
}

message MonsterBattleInfo {
	uint32 entity_id = 1;
	uint32 monster_id = 2;
	uint32 OAKILFGDACJ = 3;
	uint32 BFPAOANBJON = 4;
	MonsterProperty NKCMCMHAFAF = 5;
	uint32 total_turns = 6;
	double total_damage = 7;
	double total_heal = 8;
	double total_damage_taken = 9;
	double AKGFCPFAOLP = 10;
	double total_hp_recover = 11;
	uint32 stage_id = 12;
	uint32 battle_id = 13;
	uint32 JBCDLFJJJDG = 14;
	repeated AttackDamageProperty attack_type_damage = 15;
	repeated SkillUseProperty skill_times = 16;
	uint32 stage_type = 17;
	double ACOFIPPJKBI = 18;
	double delay_cumulate = 19;
	DeathSource FIEDKNKIEBH = 20;
	uint32 wave = 21;
	int32 JHAOGJJDBHL = 22;
	uint32 phase = 23;
	uint32 DCMOHECBOLK = 24;
	BattleTag JEDAHLGBIEM = 25;
	repeated GAAGEHABINM skill_info = 26;
	uint32 LANFCLOLBOF = 27;
	repeated MonsterPhaseStt KFGJBILJGDP = 28;
	uint32 FPKONIKLICA = 29;
	uint32 JEEMGAEIFAE = 30;
	HEMBNDJAFDA HBOFDAJJJME = 31;
}

message BattleEventProperty {
	SpBarInfo sp_bar = 2;
}

message BattleEventBattleInfo {
	uint32 battle_event_id = 1;
	BattleEventProperty status = 2;
	repeated GAAGEHABINM skill_info = 3;
}

message ScoreInfo {
	uint32 FJJDFPKGOPC = 1;
	uint32 score_id = 2;
}

message IBFFAJOHKMO {
	uint32 avatar_id = 1;
	repeated uint32 LEICKPDIFOG = 2;
	uint32 source = 3;
	double damage = 4;
	repeated uint32 DIKKHPFKAPF = 5;
	int32 EOOFIMEGMFB = 6;
	double BKJEAMPNANK = 7;
	uint32 BLFHKGPMNDK = 8;
	uint32 wave = 9;
	uint32 enhanced_id = 10;
}

message KKMPKJPGGCL {
	uint32 avatar_id = 1;
	int32 ABAPDFGJNME = 2;
	uint32 enhanced_id = 3;
}

message CNPNNIJGLFI {
	uint32 DPDNNMBCPOI = 1;
	uint32 DBELJGBKBPA = 2;
	uint32 entity_id = 3;
}

message IIIPHJIMNID {
	uint32 NDBOJANDNJN = 1;
	uint32 monster_id = 2;
	repeated KKMPKJPGGCL NGLPBHMLEHN = 3;
	uint32 HGFLPENKIII = 4;
	repeated CNPNNIJGLFI AKKGGPADAOO = 5;
}

message MMNDJAMEBML {
	BattleStaticticEventType type = 1;
	uint32 OCPPPKDDIML = 2;
	uint32 display_value = 3;
}

message KPKKKJPJCPC {
	uint32 LIDGJNDGBKM = 1;
	uint32 OAABADFKCOA = 2;
}

message MEOIFIOAECF {
	uint32 JJCCJJINLFL = 1;
	bool HEMJHDOEEBL = 2;
	KPKKKJPJCPC KACALGIOEDB = 3;
}

message EvolveBuildCardInfo {
	uint32 card_id = 1;
	double param = 2;
	bool is_enable = 3;
	repeated double param_list = 4;
}

message EvolveBuildGearDamageInfo {
	uint32 gear_id = 1;
	double damage = 2;
	double hp_damage = 3;
}

message LGIFEDNKHON {
	repeated uint32 DAKIJNBFKOB = 1;
	repeated uint32 FJJOBAEMEHP = 2;
}

message MJKIBJLOBKD {
	uint32 wave = 1;
	uint32 score_id = 2;
	uint32 DCHIOLBFKJN = 3;
	repeated KPKKKJPJCPC BHJKMHMOEAK = 4;
	float HGFLPENKIII = 5;
}

message DKOOKEJCHGO {
	uint32 CHBJKKMIOFD = 1;
	double HGFLPENKIII = 2;
}

message PMNHMAMHGAI {
	uint32 ICPHOOMNDKA = 1;
	repeated MJKIBJLOBKD ENBJCPKGCOL = 2;
	repeated DKOOKEJCHGO OOOGLIEOOKI = 3;
}

message EGDAJHJPLGI {
	BOJGAKMDPDL type = 1;
	uint32 count = 2;
}

message EvolveBuildBattleInfo {
	uint32 cur_level_id = 1;
	uint32 cur_period = 2;
	uint32 cur_coin = 3;
	repeated MEOIFIOAECF weapon_slot_list = 4;
	repeated MEOIFIOAECF accessory_slot_list = 5;
	repeated uint32 ban_gear_list = 6;
	LGIFEDNKHON collection = 7;
	repeated uint32 allowed_gear_list = 8;
	uint32 cur_exp = 9;
	uint32 cur_reroll = 10;
	uint32 cur_treasure_miss_cnt = 11;
	repeated uint32 period_id_list = 12;
	uint32 cur_gear_lost_cnt = 13;
	uint32 cur_wave = 14;
	bool is_unlock_gear_reroll = 15;
	bool is_unlock_gear_ban = 16;
	repeated EvolveBuildCardInfo card_list = 17;
	repeated EvolveBuildGearDamageInfo gear_damage_list = 18;
	repeated uint32 stat_params = 19;
	bool is_giveup = 20;
	uint32 cur_unused_round_cnt = 21;
	PMNHMAMHGAI stat_log_info = 22;
	uint32 period_first_random_seed = 23;
	uint32 cur_card_reroll = 24;
	repeated uint32 allowed_card_list = 25;
	repeated EGDAJHJPLGI func_list = 26;
	uint32 finished_story_id = 27;
}

message PLPNLIBMNIO {
	string phase = 1;
	float DBDCNAFOGLF = 2;
	float HDALBIANCMF = 3;
	uint32 ADJBBABEHAH = 4;
	uint32 PJBIAEJECAE = 5;
	uint32 KPNACGHJALJ = 6;
	uint32 FPJADBGOHKM = 7;
	uint32 CJEJOFAMDCD = 8;
	repeated uint32 BGJCEDEAHGM = 9;
	repeated uint32 AAGJCJIOFPA = 10;
}

message CHDONIGOKNM {
	uint32 HEOCPAKCELM = 1;
	uint32 BGHKBMFHMOJ = 2;
	uint32 LOOLLAGMNLH = 3;
	uint32 HECJOOOBAHC = 4;
	uint32 FKEAAIPKPAA = 5;
	uint32 ICLEENHIPOH = 6;
	repeated uint32 boss_info = 7;
	repeated PLPNLIBMNIO ODBONKCMDMP = 8;
}

message JFFNDOBBNFB {
	uint32 wave = 1;
	double HFIHDDDILJB = 2;
	double KHGCLCLLECL = 3;
	uint32 FFPMJFHNCHO = 4;
	uint32 GMMBGAMHBKB = 5;
}

message EKBAGMOMECL {
	string key = 1;
	double value = 2;
}

message BattleRogueMagicModifierInfo {
	uint32 rogue_magic_battle_const = 1;
}

message BattleRogueMagicRoundCount {
	uint32 battle_standard_round_limit = 1;
	uint32 battle_extra_round_limit = 2;
}

message BattleRogueMagicUnit {
	uint32 magic_unit_id = 1;
	uint32 level = 2;
	bool HEMJHDOEEBL = 3;
	uint32 dice_slot_id = 4;
	map<uint32, uint32> IKDDALCBAFJ = 5;
}

message BattleRogueMagicScepter {
	uint32 scepter_id = 1;
	repeated BattleRogueMagicUnit rogue_magic_unit_info_list = 2;
	uint32 level = 3;
	map<uint32, uint32> EEPOJGNFLPA = 4;
}

message BattleRogueMagicItemInfo {
	BattleRogueMagicRoundCount battle_round_count = 1;
	repeated BattleRogueMagicScepter battle_scepter_list = 2;
}

message FKOCBOOCDNL {
	uint32 POIIAIAKILF = 1;
}

message BattleRogueMagicDetailInfo {
	oneof ECOEKHPGMEA {
		BattleRogueMagicItemInfo battle_magic_item_info = 1;
		FKOCBOOCDNL ENNPJGLCBEM = 2;
	}
}

message BattleRogueMagicInfo {
	BattleRogueMagicModifierInfo modifier_content = 1;
	BattleRogueMagicDetailInfo detail_info = 2;
}

message CCCCGJABBPM {
	uint32 scepter_id = 1;
	uint32 level = 2;
	double total_damage = 3;
}

message AENPIJCDBMH {
	uint32 KLMCPPBBOOH = 1;
	uint32 KMOEADPMFLG = 2;
	repeated CCCCGJABBPM CICANOKPNBM = 3;
}

message GBNCGKDNMIL {
	uint32 AENKMAOABMP = 1;
	uint32 MCDPIABDIGI = 2;
	double JNIMLOIOHNH = 3;
	double IEJJJKFEDAH = 4;
}

message MBJHFPCJALN {
	GBNCGKDNMIL EHNNECGHJAL = 1;
}

message AIGKNHFANGA {
	AENPIJCDBMH EILAABLDPHM = 1;
	MBJHFPCJALN INPKGDFMPEA = 2;
}

message LDOBBIABDDL {
	uint32 GEDDIBIKMMP = 1;
	double KGGDJHJLENL = 2;
}

message HPKEFFECHFG {
	DLBFAHOAGPH type = 1;
	uint32 config_id = 2;
	uint32 unique_id = 3;
	uint32 level = 4;
	repeated LDOBBIABDDL switch_list = 5;
}

message PFKAMAFIKKO {
	uint32 LABAIGDGJHL = 1;
	repeated uint32 JNBEGHEIOCI = 2;
}

message EACDEAPKILK {
	repeated HPKEFFECHFG CFKJEPMNLJI = 1;
	map<uint32, uint32> LKGDFHFBLDE = 2;
	repeated PFKAMAFIKKO FEBMNCJIFMN = 3;
	uint32 area_id = 4;
	uint32 difficulty_level = 5;
}

message LHLBIANFOHK {
	uint32 monster_id = 1;
	uint32 GMLFMPJPEGG = 2;
	uint32 FFPMJFHNCHO = 3;
	uint32 GMMBGAMHBKB = 4;
}

message LLBMAPHBOGD {
	uint32 ACPBMMMCJIP = 1;
	double KKANCJALJPO = 2;
	double MFJKFLGPGKO = 3;
	uint32 wave = 4;
	uint32 GMLFMPJPEGG = 5;
	double ABMNLNNOKLO = 6;
	double IHBBEKCOEAE = 7;
}

message DPNDLHGEMEI {
	uint32 IMCPKLDFDOG = 1;
	uint32 AJGEOFIIDDH = 2;
	double OMOENBAKMHJ = 3;
	uint32 wave = 4;
	uint32 GMLFMPJPEGG = 5;
}

message CPFCBLADMBH {
	repeated LHLBIANFOHK HAAFHKIAGKM = 1;
	repeated LLBMAPHBOGD OEAGAMJDLMA = 2;
	repeated DPNDLHGEMEI PLENNPAGJLL = 3;
}

message BAAGNOHEHMA {
	CPFCBLADMBH OIMBGAEHDBI = 1;
}

message MKEECCHGIGH {
	uint32 NMIMBIOPEKI = 1;
	double KKANCJALJPO = 2;
	double MFJKFLGPGKO = 3;
	uint32 FGMLCKANIAN = 4;
	uint32 GOAEBJJPAJO = 5;
	uint32 NILAKIDFHEJ = 6;
	uint32 PIGNDAJGDGJ = 7;
	double ABMNLNNOKLO = 8;
	uint32 JBJMOPHGMFA = 9;
	uint32 POBIBILOANI = 10;
	double IHBBEKCOEAE = 11;
	uint32 LOOLLAGMNLH = 12;
	uint32 FKEAAIPKPAA = 13;
}

message BDMGOEJBFGL {
	uint32 LOOLLAGMNLH = 1;
	uint32 FKEAAIPKPAA = 2;
	uint32 AKPMNJCGGAI = 3;
	repeated MKEECCHGIGH OEAGAMJDLMA = 4;
}

message HANHNLNEICM {
	uint32 avatar_id = 1;
	uint32 DPDNNMBCPOI = 2;
	uint32 total_turns = 3;
	double FBCMJGMBJFC = 4;
	repeated SkillUseProperty skill_times = 5;
	double total_damage = 6;
	double total_break_damage = 7;
	repeated AttackDamageProperty attack_type_damage = 8;
	repeated AttackDamageProperty attack_type_break_damage = 9;
	repeated AttackDamageProperty attack_type_max_damage = 10;
	double total_damage_taken = 11;
	double total_heal = 12;
	double total_hp_recover = 13;
	double total_shield = 14;
	double total_shield_taken = 15;
	double total_shield_damage = 16;
	uint32 break_times = 17;
	uint32 JEPLCJKFOMB = 18;
	uint32 NCJHDJJDJNL = 19;
	uint32 LKMGDIADOPB = 20;
	double IBLGMCIPCKM = 21;
	uint32 entity_id = 22;
}

message PEDJNPJKOCK {
	uint32 avatar_id = 1;
	uint32 maze_buff_id = 2;
	uint32 IAGENFADHLP = 3;
}

message NMCMOHAHOPL {
	repeated HANHNLNEICM PCCDMDFNJPD = 1;
	uint32 HKPBEFFLFEO = 2;
	uint32 DFNKMIJEBLD = 3;
}

message GJDKILHKIED {
	uint32 IMHHILCMMGI = 1;
	uint32 HAHJHBFAEFC = 2;
	uint32 BILEJKHIHJL = 3;
}

message DEMLPCNDJJP {
	GJDKILHKIED GJDOKFCHBGA = 1;
	repeated HPKEFFECHFG CFKJEPMNLJI = 2;
}

message BattleStatistics {
	uint32 total_battle_turns = 1;
	uint32 total_auto_turns = 2;
	repeated uint32 avatar_id_list = 3;
	uint32 ultra_cnt = 4;
	double total_delay_cumulate = 5;
	double cost_time = 6;
	repeated AvatarBattleInfo battle_avatar_list = 7;
	repeated MonsterBattleInfo monster_list = 8;
	uint32 round_cnt = 9;
	uint32 cocoon_dead_wave = 10;
	uint32 avatar_battle_turns = 11;
	uint32 monster_battle_turns = 12;
	map<string, float> custom_values = 13;
	uint32 challenge_score = 14;
	repeated BattleEventBattleInfo IJOLOFBJINB = 16;
	BattleEndReason end_reason = 19;
	repeated IBFFAJOHKMO GLOJPNLNHJH = 21;
	repeated int32 IICCEFCGPAK = 22;
	repeated IIIPHJIMNID LDGAANONMBK = 23;
	repeated MMNDJAMEBML ADBHGKPNIKP = 26;
	repeated GMKEPCOMHPN ECEFBCNOFKB = 27;
	map<uint32, BattleTargetList> battle_target_info = 28;
	repeated EAGOCAHFGAF NAJLKHFLLPG = 29;
	EvolveBuildBattleInfo JPGIFCHJDLK = 30;
	CHDONIGOKNM MNPHNJKGPKL = 31;
	bool LEDDODAMMNO = 32;
	repeated JFFNDOBBNFB ENBJCPKGCOL = 33;
	repeated EKBAGMOMECL NGOKNFDMHMF = 34;
	uint32 DKOEADNAMCJ = 35;
	AIGKNHFANGA IDCGPAKJFMD = 36;
	BAAGNOHEHMA BILLJJBFIOL = 37;
	BDMGOEJBFGL HMPGMILJAPB = 38;
	NMCMOHAHOPL NOCIGFLLIFG = 39;
	DEMLPCNDJJP JNJIIMJBOJP = 40;
	uint32 KKPKALJMAMF = 41;
	repeated PEDJNPJKOCK OKGCIPAHMEI = 42;
}

message EAGOCAHFGAF {
	uint32 OEFEEFGLIEB = 1;
	uint32 PBHPHHMPAIH = 2;
}

message GMKEPCOMHPN {
	AetherdivideSpiritLineupType type = 1;
	uint32 id = 2;
	SpBarInfo sp_bar = 3;
}

message MultiPath {
	uint32 multi_path_type = 1;
	uint32 level = 2;
	uint32 exp = 3;
}

message EPHILIMKADK {
	BattleCheckResultType retcode = 1;
	BattleEndStatus end_status = 2;
	BattleStatistics stt = 3;
	bytes game_core_log_encode = 4;
	map<string, uint32> DGNMMINGACJ = 5;
	uint32 mismatch_turn_count = 6;
	uint32 MDLPCFCPHDK = 7;
}

message CharacterSnapshot {
	uint32 runtime_id = 1;
	repeated uint64 properties = 2;
}

message AnimEventSnapshot {
	string event_name = 1;
	uint32 count = 2;
}

enum FightGameMode {
	FIGHT_GAME_MODE_NONE = 0;
	FIGHT_GAME_MODE_MATCH3 = 1;
	FIGHT_GAME_MODE_MARBLE = 2;
	FIGHT_GAME_MODE_MATCH3_SOLO = 3;
}

enum FightKickoutType {
	FIGHT_KICKOUT_UNKNOWN = 0;
	FIGHT_KICKOUT_BLACK = 1;
	FIGHT_KICKOUT_BY_GM = 2;
	FIGHT_KICKOUT_TIMEOUT = 3;
	FIGHT_KICKOUT_SESSION_RESET = 4;
}

enum LobbyCharacterType {
	LobbyCharacter_None = 0;
	LobbyCharacter_Leader = 1;
	LobbyCharacter_Member = 2;
	LobbyCharacter_Watcher = 3;
}

enum LobbyCharacterStatus {
	LobbyCharacterStatus_None = 0;
	LobbyCharacterStatus_Idle = 1;
	LobbyCharacterStatus_Operating = 2;
	LobbyCharacterStatus_Ready = 3;
	LobbyCharacterStatus_Fighting = 4;
	LobbyCharacterStatus_Watching = 5;
	LobbyCharacterStatus_Matching = 6;
	LobbyCharacterStatus_LobbyStartFight = 7;
}

enum LobbyModifyType {
	LobbyModifyType_None = 0;
	LobbyModifyType_Idle = 1;
	LobbyModifyType_Ready = 2;
	LobbyModifyType_Operating = 3;
	LobbyModifyType_CancelMatch = 4;
	LobbyModifyType_Match = 5;
	LobbyModifyType_QuitLobby = 6;
	LobbyModifyType_KickOut = 7;
	LobbyModifyType_TimeOut = 8;
	LobbyModifyType_JoinLobby = 9;
	LobbyModifyType_LobbyDismiss = 10;
	LobbyModifyType_MatchTimeOut = 11;
	LobbyModifyType_FightStart = 12;
	LobbyModifyType_Logout = 13;
	LobbyModifyType_FightEnd = 14;
	LobbyModifyType_FightRoomDestroyInInit = 15;
	LobbyModifyType_LobbyStartFight = 16;
	LobbyModifyType_LobbyStartFightTimeout = 17;
}

enum FightRoomDestroyReason {
	FIGHT_ROOM_DESTROY_REASON_NONE = 0;
	FIGHT_ROOM_DESTROY_REASON_SVR_STOP = 1;
	FIGHT_ROOM_DESTROY_REASON_GAME_END = 2;
}

enum Match3FinishReason {
	MATCH3_FINISH_REASON_DEFAULT = 0;
	MATCH3_FINISH_REASON_LEAVE = 1;
	MATCH3_FINISH_REASON_DIE = 2;
	MATCH3_FINISH_REASON_GAMEEND = 3;
	MATCH3_FINISH_REASON_KICKOUT = 4;
	MATCH3_FINISH_REASON_WIN = 5;
	MATCH3_FINISH_REASON_LOSE = 6;
	MATCH3_FINISH_REASON_TIE = 7;
}

enum MatchUnitType {
	MATCH_UNIT_TYPE_NONE = 0;
	MATCH_UNIT_TYPE_NORMAL = 1;
	MATCH_UNIT_TYPE_ROBOT = 2;
	MATCH_UNIT_TYPE_GM = 3;
}

enum FFJPPNGGLFF {
	FIGHT_PLAYER_RESULT_NONE = 0;
	FIGHT_PLAYER_RESULT_WIN = 1;
	FIGHT_PLAYER_RESULT_FAIL = 2;
	FIGHT_PLAYER_RESULT_DRAW = 3;
}

enum IMAONMHILNE {
	LOBBY_INTERACT_TYPE_NONE = 0;
	LOBBY_INTERACT_TYPE_REMIND_PREPARE = 1;
}

message OODOCMDLOMF {
	uint32 uid = 1;
	uint32 level = 2;
	string nickname = 3;
	uint32 GFIDNAANAFH = 4;
	PlatformType platform = 5;
	string AKCEJFCFBAN = 6;
	string BJELLAPOGJN = 7;
	uint64 version = 8;
	bool COCONGACIFJ = 9;
}

message IDDLKHHLECG {
	LobbyCharacterType NOIIAOIDGEO = 1;
	LobbyCharacterStatus status = 2;
}

message NJFGJPCANDI {
	uint32 BKMPFEOCFIB = 1;
	bool COCONGACIFJ = 2;
	uint32 JEJKIGABEEK = 3;
	uint32 MIAFPFPMACA = 4;
	NFOBAPHMIBF MMOHLKEIKGK = 5;
}

message LCMIFOBKNEN {
	uint32 MKFDPCCKFNF = 1;
	uint32 rank = 2;
	repeated uint32 GNIGOHIAFFI = 3;
	uint32 score_id = 4;
}

message GLMCGEPNAIA {
	uint32 DMKFFFPDLDI = 1;
	uint32 FOJCMHIMAFN = 2;
}

message NFOBAPHMIBF {
	uint32 MKFDPCCKFNF = 1;
	uint32 PCIDNDOBJGB = 2;
	uint32 DPBMLFFPOKH = 3;
	uint32 OGNEPBFPILH = 4;
	repeated GLMCGEPNAIA IBCDNJMCFEA = 5;
	uint32 JEFFMOFIPMH = 6;
	uint32 KMFLKMMAMNG = 7;
}

message FDHJBIMPKEK {
	NFOBAPHMIBF MMOHLKEIKGK = 1;
}

message EPEGHCGCMHP {
	repeated string BHGGHFJMMBM = 1;
	bool FMOPBFKNLNI = 2;
	oneof GEGMAJGEJFL {
		NJFGJPCANDI DCHDJALLNEC = 1001;
		LCMIFOBKNEN EMBBHNCJDPK = 1002;
		FDHJBIMPKEK MINKKEJIONE = 1003;
	}
}

message CBBDIOMIFHD {
	OODOCMDLOMF basic_info = 1;
	IDDLKHHLECG NCKCCOKDKOL = 2;
	EPEGHCGCMHP stage_info = 3;
}

message CDIMEMFJJFP {
	uint32 LMMGODPHJNE = 1;
	uint32 PGJCCGNBBPI = 2;
	uint32 NNBHKCJCPIO = 3;
	uint32 KHBNJGPPHOA = 4;
	uint32 AGDCEBLFGKH = 5;
	uint32 DNCPBBLIOPL = 6;
	uint32 LILIFGBAFKN = 7;
	uint32 MMIIJHOHOGE = 8;
	uint32 IOKFIKHHANG = 9;
	uint32 CILKFJBLEJG = 10;
	uint32 MKFEBPJEMAD = 11;
	uint32 EFGOMFDMNOP = 12;
	uint32 JFLKPCDBBJD = 13;
	uint32 APKCBMGELJI = 14;
}

message PPGGKMDAOEA {
	uint64 LOFAMEGPMBC = 1;
	FightGameMode GBAHCDLHACN = 2;
}

message BIPLKGDFAFJ {
	uint64 id = 1;
	FightGameMode PDMOLPLCFLG = 2;
	repeated CBBDIOMIFHD IIHPMLIBBEB = 3;
	MatchUnitType type = 4;
	uint64 INFHIKBLJLA = 5;
	uint64 MLELAJDLJNL = 6;
	uint32 JBNENLHCCBH = 7;
}

enum Retcode {
	RET_SUCC = 0;
	RET_FAIL = 1;
	RET_SERVER_INTERNAL_ERROR = 2;
	RET_TIMEOUT = 3;
	RET_REPEATED_REQ = 4;
	RET_REQ_PARA_INVALID = 5;
	RET_PLAYER_DATA_ERROR = 6;
	RET_PLAYER_CLIENT_PAUSED = 7;
	RET_FUNC_CHECK_FAILED = 8;
	RET_FEATURE_SWITCH_CLOSED = 9;
	RET_FREQ_OVER_LIMIT = 10;
	RET_SYSTEM_BUSY = 11;
	RET_PLAYER_NOT_ONLINE = 12;
	RET_OPERATION_IN_CD = 13;
	RET_REPEATE_LOGIN = 1000;
	RET_RETRY_LOGIN = 1001;
	RET_WAIT_LOGIN = 1002;
	RET_NOT_IN_WHITE_LIST = 1003;
	RET_IN_BLACK_LIST = 1004;
	RET_ACCOUNT_VERIFY_ERROR = 1005;
	RET_ACCOUNT_PARA_ERROR = 1006;
	RET_ANTI_ADDICT_LOGIN = 1007;
	RET_CHECK_SUM_ERROR = 1008;
	RET_REACH_MAX_PLAYER_NUM = 1009;
	RET_ALREADY_REGISTERED = 1010;
	RET_GENDER_ERROR = 1011;
	SET_NICKNAME_RET_CALLBACK_PROCESSING = 1012;
	RET_IN_GM_BIND_ACCESS = 1013;
	RET_QUEST_REWARD_ALREADY_TAKEN = 1100;
	RET_QUEST_NOT_ACCEPT = 1101;
	RET_QUEST_NOT_FINISH = 1102;
	RET_QUEST_STATUS_ERROR = 1103;
	RET_ACHIEVEMENT_LEVEL_NOT_REACH = 1104;
	RET_ACHIEVEMENT_LEVEL_ALREADY_TAKEN = 1105;
	RET_AVATAR_NOT_EXIST = 1200;
	RET_AVATAR_RES_EXP_NOT_ENOUGH = 1201;
	RET_AVATAR_EXP_REACH_PROMOTION_LIMIT = 1202;
	RET_AVATAR_REACH_MAX_PROMOTION = 1203;
	RET_SKILLTREE_CONFIG_NOT_EXIST = 1204;
	RET_SKILLTREE_ALREADY_UNLOCK = 1205;
	RET_SKILLTREE_PRE_LOCKED = 1206;
	RET_SKILLTREE_LEVEL_NOT_MEET = 1207;
	RET_SKILLTREE_RANK_NOT_MEET = 1208;
	RET_AVATAR_DRESS_NO_EQUIPMENT = 1209;
	RET_AVATAR_EXP_ITEM_NOT_EXIST = 1210;
	RET_SKILLTREE_POINT_LOCKED = 1211;
	RET_SKILLTREE_POINT_LEVEL_UPGRADE_NOT_MATCH = 1212;
	RET_SKILLTREE_POINT_LEVEL_REACH_MAX = 1213;
	RET_WORLD_LEVEL_NOT_MEET = 1214;
	RET_PLAYER_LEVEL_NOT_MEET = 1215;
	RET_AVATAR_RANK_NOT_MATCH = 1216;
	RET_AVATAR_RANK_REACH_MAX = 1217;
	RET_HERO_BASIC_TYPE_NOT_MATCH = 1218;
	RET_AVATAR_PROMOTION_NOT_MEET = 1219;
	RET_PROMOTION_REWARD_CONFIG_NOT_EXIST = 1220;
	RET_PROMOTION_REWARD_ALREADY_TAKEN = 1221;
	RET_AVATAR_SKIN_ITEM_NOT_EXIST = 1222;
	RET_AVATAR_SKIN_ALREADY_DRESSED = 1223;
	RET_AVATAR_NOT_DRESS_SKIN = 1224;
	RET_AVATAR_SKIN_NOT_MATCH_AVATAR = 1225;
	RET_AVATAR_PATH_NOT_MATCH = 1226;
	RET_AVATAR_ENHANCED_ID_NOT_EXIST = 1227;
	RET_AVATAR_ENHANCED_ID_ALREADY_SET = 1228;
	RET_AVATAR_NOT_CUR_ENHANCED_ID = 1229;
	RET_ITEM_NOT_EXIST = 1300;
	RET_ITEM_COST_NOT_ENOUGH = 1301;
	RET_ITEM_COST_TOO_MUCH = 1302;
	RET_ITEM_NO_COST = 1303;
	RET_ITEM_NOT_ENOUGH = 1304;
	RET_ITEM_INVALID = 1305;
	RET_ITEM_CONFIG_NOT_EXIST = 1306;
	RET_SCOIN_NOT_ENOUGH = 1307;
	RET_ITEM_REWARD_EXCEED_LIMIT = 1308;
	RET_ITEM_INVALID_USE = 1309;
	RET_ITEM_USE_CONFIG_NOT_EXIST = 1310;
	RET_REWARD_CONFIG_NOT_EXIST = 1311;
	RET_ITEM_EXCEED_LIMIT = 1312;
	RET_ITEM_COUNT_INVALID = 1313;
	RET_ITEM_USE_TARGET_TYPE_INVALID = 1314;
	RET_ITEM_USE_SATIETY_FULL = 1315;
	RET_ITEM_COMPOSE_NOT_EXIST = 1316;
	RET_RELIC_COMPOSE_NOT_EXIST = 1317;
	RET_ITEM_CAN_NOT_SELL = 1318;
	RET_ITEM_SELL_EXCEDD_LIMIT = 1319;
	RET_ITEM_NOT_IN_COST_LIST = 1320;
	RET_ITEM_SPECIAL_COST_NOT_ENOUGH = 1321;
	RET_ITEM_SPECIAL_COST_TOO_MUCH = 1322;
	RET_ITEM_FORMULA_NOT_EXIST = 1323;
	RET_ITEM_AUTO_GIFT_OPTIONAL_NOT_EXIST = 1324;
	RET_RELIC_COMPOSE_RELIC_INVALID = 1325;
	RET_RELIC_COMPOSE_MAIN_AFFIX_ID_INVALID = 1326;
	RET_RELIC_COMPOSE_WRONG_FORMULA_TYPE = 1327;
	RET_RELIC_COMPOSE_RELIC_NOT_EXIST = 1328;
	RET_RELIC_COMPOSE_BLACK_GOLD_COUNT_INVALID = 1329;
	RET_RELIC_COMPOSE_BLACK_GOLD_NOT_NEED = 1330;
	RET_MONTH_CARD_CANNOT_USE = 1331;
	RET_ITEM_REWARD_EXCEED_DISAPPEAR = 1332;
	RET_ITEM_NEED_RECYCLE = 1333;
	RET_ITEM_COMPOSE_EXCEED_LIMIT = 1334;
	RET_ITEM_CAN_NOT_DESTROY = 1335;
	RET_ITEM_ALREADY_MARK = 1336;
	RET_ITEM_MARK_EXCEED_LIMIT = 1337;
	RET_ITEM_NOT_MARK = 1338;
	RET_ITEN_TURN_FOOD_NOT_SET = 1339;
	RET_ITEM_TURN_FOOD_ALREADY_SET = 1340;
	RET_ITEM_TURN_FOOD_CONSUME_TYPE_ERROR = 1341;
	RET_ITEM_TURN_FOOD_SWITCH_ALREADY_OPEN = 1342;
	RET_ITEM_TURN_FOOD_SWITCH_ALREADY_CLOSE = 1343;
	RET_HCOIN_EXCHANGE_TOO_MUCH = 1344;
	RET_ITEM_TURN_FOOD_SCENE_TYPE_ERROR = 1345;
	RET_EQUIPMENT_ALREADY_DRESSED = 1350;
	RET_EQUIPMENT_NOT_EXIST = 1351;
	RET_EQUIPMENT_REACH_LEVEL_LIMIT = 1352;
	RET_EQUIPMENT_CONSUME_SELF = 1353;
	RET_EQUIPMENT_ALREADY_LOCKED = 1354;
	RET_EQUIPMENT_ALREADY_UNLOCKED = 1355;
	RET_EQUIPMENT_LOCKED = 1356;
	RET_EQUIPMENT_SELECT_NUM_OVER_LIMIT = 1357;
	RET_EQUIPMENT_RANK_UP_MUST_CONSUME_SAME_TID = 1358;
	RET_EQUIPMENT_PROMOTION_REACH_MAX = 1359;
	RET_EQUIPMENT_RANK_UP_REACH_MAX = 1360;
	RET_EQUIPMENT_LEVEL_REACH_MAX = 1361;
	RET_EQUIPMENT_EXCEED_LIMIT = 1362;
	RET_RELIC_NOT_EXIST = 1363;
	RET_RELIC_REACH_LEVEL_LIMIT = 1364;
	RET_RELIC_CONSUME_SELF = 1365;
	RET_RELIC_ALREADY_DRESSED = 1366;
	RET_RELIC_LOCKED = 1367;
	RET_RELIC_ALREADY_LOCKED = 1368;
	RET_RELIC_ALREADY_UNLOCKED = 1369;
	RET_RELIC_LEVEL_IS_NOT_ZERO = 1370;
	RET_UNIQUE_ID_REPEATED = 1371;
	RET_EQUIPMENT_LEVEL_NOT_MEET = 1372;
	RET_EQUIPMENT_ITEM_NOT_IN_COST_LIST = 1373;
	RET_EQUIPMENT_LEVEL_GREATER_THAN_ONE = 1374;
	RET_EQUIPMENT_ALREADY_RANKED = 1375;
	RET_RELIC_EXCEED_LIMIT = 1376;
	RET_RELIC_ALREADY_DISCARDED = 1377;
	RET_RELIC_ALREADY_UNDISCARDED = 1378;
	RET_EQUIPMENT_BATCH_LOCK_TOO_FAST = 1379;
	RET_RELIC_FILTER_PLAN_SLOT_EMPTY = 1380;
	RET_RELIC_FILTER_PLAN_NUM_EXCEED_LIMIT = 1381;
	RET_RELIC_FILTER_PLAN_NAME_UTF8_ERROR = 1382;
	RET_RELIC_FILTER_PLAN_NAME_FORMAT_ERROR = 1383;
	RET_RELIC_FILTER_PLAN_NO_CHANGE = 1384;
	RET_RELIC_REFORGE_NOT_CONFIRMED = 1385;
	RET_EQUIPMENT_ALREADY_LEVELUP = 1386;
	RET_EQUIPMENT_RARITY_ERROR = 1387;
	RET_LINEUP_INVALID_INDEX = 1400;
	RET_LINEUP_INVALID_MEMBER_POS = 1401;
	RET_LINEUP_SWAP_NOT_EXIST = 1402;
	RET_LINEUP_AVATAR_ALREADY_IN = 1403;
	RET_LINEUP_CREATE_AVATAR_ERROR = 1404;
	RET_LINEUP_AVATAR_INIT_ERROR = 1405;
	RET_LINEUP_NOT_EXIST = 1406;
	RET_LINEUP_ONLY_ONE_MEMBER = 1407;
	RET_LINEUP_SAME_LEADER_SLOT = 1408;
	RET_LINEUP_NO_LEADER_SELECT = 1409;
	RET_LINEUP_SWAP_SAME_SLOT = 1410;
	RET_LINEUP_AVATAR_NOT_EXIST = 1411;
	RET_LINEUP_TRIAL_AVATAR_CAN_NOT_QUIT = 1412;
	RET_LINEUP_VIRTUAL_LINEUP_PLANE_NOT_MATCH = 1413;
	RET_LINEUP_NOT_VALID_LEADER = 1414;
	RET_LINEUP_SAME_INDEX = 1415;
	RET_LINEUP_IS_EMPTY = 1416;
	RET_LINEUP_NAME_FORMAT_ERROR = 1417;
	RET_LINEUP_TYPE_NOT_MATCH = 1418;
	RET_LINEUP_REPLACE_ALL_FAILED = 1419;
	RET_LINEUP_NOT_ALLOW_EDIT = 1420;
	RET_LINEUP_AVATAR_IS_ALIVE = 1421;
	RET_LINEUP_ASSIST_HAS_ONLY_MEMBER = 1422;
	RET_LINEUP_ASSIST_CANNOT_SWITCH = 1423;
	RET_LINEUP_AVATAR_TYPE_INVALID = 1424;
	RET_LINEUP_NAME_UTF8_ERROR = 1425;
	RET_LINEUP_LEADER_LOCK = 1426;
	RET_LINEUP_STORY_LINE_NOT_MATCH = 1427;
	RET_LINEUP_AVATAR_LOCK = 1428;
	RET_LINEUP_AVATAR_INVALID = 1429;
	RET_LINEUP_AVATAR_ALREADY_INIT = 1430;
	RET_LINEUP_LIMITED = 1431;
	RET_MAIL_NOT_EXIST = 1700;
	RET_MAIL_RANGE_INVALID = 1701;
	RET_MAIL_MAIL_ID_INVALID = 1702;
	RET_MAIL_NO_MAIL_TAKE_ATTACHMENT = 1703;
	RET_MAIL_NO_MAIL_TO_DEL = 1704;
	RET_MAIL_TYPE_INVALID = 1705;
	RET_MAIL_PARA_INVALID = 1706;
	RET_MAIL_ATTACHEMENT_INVALID = 1707;
	RET_MAIL_TICKET_INVALID = 1708;
	RET_MAIL_TICKET_REPEATED = 1709;
	RET_STAGE_SETTLE_ERROR = 1800;
	RET_STAGE_CONFIG_NOT_EXIST = 1801;
	RET_STAGE_NOT_FOUND = 1802;
	RET_STAGE_COCOON_PROP_NOT_VALID = 1804;
	RET_STAGE_COCOON_WAVE_NOT_VALID = 1805;
	RET_STAGE_PROP_ID_NOT_EQUAL = 1806;
	RET_STAGE_COCOON_WAVE_OVER = 1807;
	RET_STAGE_WEEK_COCOON_OVER_CNT = 1808;
	RET_STAGE_COCOON_NOT_OPEN = 1809;
	RET_STAGE_TRIAL_NOT_OPEN = 1810;
	RET_STAGE_FARM_NOT_OPEN = 1811;
	RET_STAGE_FARM_TYPE_ERROR = 1812;
	RET_STAGE_FARM_SWEEP_CD = 1813;
	RET_CHAPTER_LOCK = 1900;
	RET_CHAPTER_CHALLENGE_NUM_NOT_ENOUGH = 1901;
	RET_CHAPTER_REWARD_ID_NOT_EXIST = 1902;
	RET_CHAPTER_REWARD_ALREADY_TAKEN = 1903;
	RET_BATTLE_STAGE_NOT_MATCH = 2000;
	RET_IN_BATTLE_NOW = 2001;
	RET_BATTLE_CHEAT = 2002;
	RET_BATTLE_FAIL = 2003;
	RET_BATTLE_NO_LINEUP = 2004;
	RET_BATTLE_LINEUP_EMPTY = 2005;
	RET_BATTLE_VERSION_NOT_MATCH = 2006;
	RET_BATTLE_QUIT_BY_SERVER = 2007;
	RET_IN_BATTLE_CHECK = 2008;
	RET_BATTLE_CHECK_NEED_RETRY = 2009;
	RET_BATTLE_COST_TIME_CHECK_FAIL = 2010;
	RET_LACK_EXCHANGE_STAMINA_TIMES = 2100;
	RET_LACK_STAMINA = 2101;
	RET_STAMINA_FULL = 2102;
	RET_AUTHKEY_SIGN_TYPE_ERROR = 2103;
	RET_AUTHKEY_SIGN_VER_ERROR = 2104;
	RET_NICKNAME_FORMAT_ERROR = 2105;
	RET_SENSITIVE_WORDS = 2106;
	RET_LEVEL_REWARD_HAS_TAKEN = 2107;
	RET_LEVEL_REWARD_LEVEL_ERROR = 2108;
	RET_LANGUAGE_INVALID = 2109;
	RET_NICKNAME_IN_CD = 2110;
	RET_GAMEPLAY_BIRTHDAY_INVALID = 2111;
	RET_GAMEPLAY_BIRTHDAY_ALREADY_SET = 2112;
	RET_NICKNAME_UTF8_ERROR = 2113;
	RET_NICKNAME_DIGIT_LIMIT_ERROR = 2114;
	RET_SENSITIVE_WORDS_PLATFORM_ERROR = 2115;
	RET_PLAYER_SETTING_TYPE_INVALID = 2116;
	RET_MAZE_LACK_TICKET = 2201;
	RET_MAZE_NOT_UNLOCK = 2202;
	RET_MAZE_NO_ABILITY = 2204;
	RET_MAZE_NO_PLANE = 2205;
	RET_MAZE_MAP_NOT_EXIST = 2207;
	RET_MAZE_MP_NOT_ENOUGH = 2213;
	RET_SPRING_NOT_ENABLE = 2214;
	RET_SPRING_TOO_FAR = 2216;
	RET_NOT_IN_MAZE = 2218;
	RET_MAZE_TIME_OF_DAY_TYPE_ERROR = 2223;
	RET_SCENE_TRANSFER_LOCKED_BY_TASK = 2224;
	RET_PLOT_NOT_UNLOCK = 2300;
	RET_MISSION_NOT_EXIST = 2400;
	RET_MISSION_ALREADY_DONE = 2401;
	RET_DAILY_TASK_NOT_FINISH = 2402;
	RET_DAILY_TASK_REWARD_HAS_TAKEN = 2403;
	RET_MISSION_NOT_FINISH = 2404;
	RET_MISSION_NOT_DOING = 2405;
	RET_MISSION_FINISH_WAY_NOT_MATCH = 2406;
	RET_MISSION_SCENE_NOT_MATCH = 2407;
	RET_MISSION_CUSTOM_VALUE_NOT_VALID = 2408;
	RET_MISSION_SUB_MISSION_NOT_MATCH = 2409;
	RET_ADVENTURE_MAP_NOT_EXIST = 2500;
	RET_SCENE_ENTITY_NOT_EXIST = 2600;
	RET_NOT_IN_SCENE = 2601;
	RET_SCENE_MONSTER_NOT_EXIST = 2602;
	RET_INTERACT_CONFIG_NOT_EXIST = 2603;
	RET_UNSUPPORTED_PROP_STATE = 2604;
	RET_SCENE_ENTRY_ID_NOT_MATCH = 2605;
	RET_SCENE_ENTITY_MOVE_CHECK_FAILED = 2606;
	RET_ASSIST_MONSTER_COUNT_LIMIT = 2607;
	RET_SCENE_USE_SKILL_FAIL = 2608;
	RET_PROP_IS_HIDDEN = 2609;
	RET_LOADING_SUCC_ALREADY = 2610;
	RET_SCENE_ENTITY_TYPE_INVALID = 2611;
	RET_INTERACT_TYPE_INVALID = 2612;
	RET_INTERACT_NOT_IN_REGION = 2613;
	RET_INTERACT_SUB_TYPE_INVALID = 2614;
	RET_NOT_LEADER_ENTITY = 2615;
	RET_MONSTER_IS_NOT_FARM_ELEMENT = 2616;
	RET_MONSTER_CONFIG_NOT_EXIST = 2617;
	RET_AVATAR_HP_ALREADY_FULL = 2618;
	RET_CUR_INTERACT_ENTITY_NOT_MATCH = 2619;
	RET_PLANE_TYPE_NOT_ALLOW = 2620;
	RET_GROUP_NOT_EXIST = 2621;
	RET_GROUP_SAVE_DATA_IN_CD = 2622;
	RET_GROUP_SAVE_LENGH_REACH_MAX = 2623;
	RET_RECENT_ELEMENT_NOT_EXIST = 2624;
	RET_RECENT_ELEMENT_STAGE_NOT_MATCH = 2625;
	RET_SCENE_POSITION_VERSION_NOT_MATCH = 2626;
	RET_GAMEPLAY_COUNTER_NOT_EXIST = 2627;
	RET_GAMEPLAY_COUNTER_NOT_ENOUGH = 2628;
	RET_GROUP_STATE_NOT_MATCH = 2629;
	RET_SCENE_ENTITY_POS_NOT_MATCH = 2630;
	RET_GROUP_STATE_CUSTOM_SAVE_DATA_OFF = 2631;
	RET_SCENE_NOT_MATCH = 2632;
	RET_PROP_TYPE_INVALID = 2633;
	RET_NOT_IN_CORRECT_SCENE = 2634;
	RET_NOT_IN_CORRECT_DIMENSION = 2635;
	RET_NOT_CORRECT_GROUP_PROPERTY_NAME = 2636;
	RET_BUY_TIMES_LIMIT = 2700;
	RET_BUY_LIMIT_TYPE = 2701;
	RET_SHOP_NOT_OPEN = 2702;
	RET_GOODS_NOT_OPEN = 2703;
	RET_CITY_LEVEL_REWARD_TAKEN = 2704;
	RET_CITY_LEVEL_NOT_MEET = 2705;
	RET_SINGLE_BUY_LIMIT = 2706;
	RET_TUTORIAL_NOT_UNLOCK = 2751;
	RET_TUTORIAL_UNLOCK_ALREADY = 2752;
	RET_TUTORIAL_FINISH_ALREADY = 2753;
	RET_TUTORIAL_PRE_NOT_UNLOCK = 2754;
	RET_TUTORIAL_PLAYER_LEVEL_NOT_MATCH = 2755;
	RET_TUTORIAL_TUTORIAL_NOT_FOUND = 2756;
	RET_CHALLENGE_NOT_EXIST = 2801;
	RET_CHALLENGE_NOT_UNLOCK = 2802;
	RET_CHALLENGE_ALREADY = 2803;
	RET_CHALLENGE_LINEUP_EDIT_FORBIDDEN = 2804;
	RET_CHALLENGE_LINEUP_EMPTY = 2805;
	RET_CHALLENGE_NOT_DOING = 2806;
	RET_CHALLENGE_NOT_FINISH = 2807;
	RET_CHALLENGE_TARGET_NOT_FINISH = 2808;
	RET_CHALLENGE_TARGET_REWARD_TAKEN = 2809;
	RET_CHALLENGE_TIME_NOT_VALID = 2810;
	RET_CHALLENGE_STARS_COUNT_NOT_MEET = 2811;
	RET_CHALLENGE_STARS_REWARD_TAKEN = 2812;
	RET_CHALLENGE_STARS_NOT_EXIST = 2813;
	RET_CHALLENGE_CUR_SCENE_NOT_ENTRY_FLOOR = 2814;
	RET_CHALLENGE_NO_TEAM_ARCHIVE = 2815;
	RET_CHALLENGE_LINEUP_AVATAR_TYPE_INVALID = 2816;
	RET_CHALLENGE_LINEUP_RECOMMEND_IN_CD = 2817;
	RET_BASIC_TYPE_ALREADY = 2850;
	RET_NO_BASIC_TYPE = 2851;
	RET_NOT_CHOOSE_BASIC_TYPE = 2852;
	RET_NOT_FUNC_CLOSE = 2853;
	RET_NOT_CHOOSE_GENDER = 2854;
	RET_NOT_REQ_UNLOCK_BASIC_TYPE = 2855;
	RET_AVATAR_PATH_LOCKED = 2856;
	RET_ROGUE_STATUS_NOT_MATCH = 2901;
	RET_ROGUE_SELECT_BUFF_NOT_EXIST = 2902;
	RET_ROGUE_COIN_NOT_ENOUGH = 2903;
	RET_ROGUE_STAMINA_NOT_ENOUGH = 2904;
	RET_ROGUE_APPRAISAL_COUNT_NOT_ENOUGH = 2905;
	RET_ROGUE_PROP_ALREADY_USED = 2906;
	RET_ROGUE_RECORD_ALREADY_SAVED = 2907;
	RET_ROGUE_ROLL_BUFF_MAX_COUNT = 2908;
	RET_ROGUE_PICK_AVATAR_INVALID = 2909;
	RET_ROGUE_QUEST_EXPIRE = 2910;
	RET_ROGUE_QUEST_REWARD_ALREADY = 2911;
	RET_ROGUE_REVIVE_COUNT_NOT_ENOUGH = 2912;
	RET_ROGUE_AREA_INVALID = 2913;
	RET_ROGUE_SCORE_REWARD_POOL_INVALID = 2914;
	RET_ROGUE_SCORE_REWARD_ROW_INVALID = 2915;
	RET_ROGUE_AEON_LEVEL_NOT_MEET = 2916;
	RET_ROGUE_AEON_LEVEL_REWARD_ALREADY_TAKEN = 2917;
	RET_ROGUE_AEON_CONFIG_NOT_EXIST = 2918;
	RET_ROGUE_TRIAL_AVATAR_INVALID = 2919;
	RET_ROGUE_HANDBOOK_REWARD_ALREADY_TAKEN = 2920;
	RET_ROGUE_ROOM_TYPE_NOT_MATCH = 2921;
	RET_ROGUE_SHOP_GOOD_NOT_FOUND = 2922;
	RET_ROGUE_SHOP_GOOD_ALREADY_BOUGHT = 2923;
	RET_ROGUE_SHOP_GOOD_ALREADY_OWN = 2924;
	RET_ROGUE_SHOP_MIRACLE_NOT_EXIST = 2925;
	RET_ROGUE_SHOP_NOT_EXIST = 2926;
	RET_ROGUE_SHOP_CANNOT_REFRESH = 2927;
	RET_ROGUE_SELECT_BUFF_CERTAIN_MISMATCH = 2928;
	RET_ROGUE_ACTION_QUEUE_NOT_EMPTY_BATTLE = 2929;
	RET_ROGUE_ACTION_QUEUE_NOT_EMPTY_OTHERS = 2930;
	RET_MISSION_EVENT_CONFIG_NOT_EXIST = 2951;
	RET_MISSION_EVENT_NOT_CLIENT = 2952;
	RET_MISSION_EVENT_FINISHED = 2953;
	RET_MISSION_EVENT_DOING = 2954;
	RET_HAS_CHALLENGE_MISSION_EVENT = 2955;
	RET_NOT_CHALLENGE_MISSION_EVENT = 2956;
	RET_GACHA_ID_NOT_EXIST = 3001;
	RET_GACHA_NUM_INVALID = 3002;
	RET_GACHA_FIRST_GACHA_MUST_ONE = 3003;
	RET_GACHA_REQ_DUPLICATED = 3004;
	RET_GACHA_NOT_IN_SCHEDULE = 3005;
	RET_GACHA_NEWBIE_CLOSE = 3006;
	RET_GACHA_TODAY_LIMITED = 3007;
	RET_GACHA_NOT_SUPPORT = 3008;
	RET_GACHA_CEILING_NOT_ENOUGH = 3009;
	RET_GACHA_CEILING_CLOSE = 3010;
	RET_GACHA_LOCKED = 3011;
	RET_GACHA_DECIDE_ITEM_TYPE_INVALID = 3012;
	RET_GACHA_DECIDE_ITEM_ID_INVALID = 3013;
	RET_NOT_IN_RAID = 3101;
	RET_RAID_DOING = 3102;
	RET_NOT_PROP = 3103;
	RET_RAID_ID_NOT_MATCH = 3104;
	RET_RAID_RESTART_NOT_MATCH = 3105;
	RET_RAID_LIMIT = 3106;
	RET_RAID_AVATAR_LIST_EMPTY = 3107;
	RET_RAID_AVATAR_NOT_EXIST = 3108;
	RET_CHALLENGE_RAID_REWARD_ALREADY = 3109;
	RET_CHALLENGE_RAID_SCORE_NOT_REACH = 3110;
	RET_CHALLENGE_RAID_NOT_OPEN = 3111;
	RET_RAID_FINISHED = 3112;
	RET_RAID_WORLD_LEVEL_NOT_LOCK = 3113;
	RET_RAID_CANNOT_USE_ASSIST = 3114;
	RET_RAID_AVATAR_NOT_MATCH = 3115;
	RET_RAID_CAN_NOT_SAVE = 3116;
	RET_RAID_NO_SAVE = 3117;
	RET_ACTIVITY_RAID_NOT_OPEN = 3118;
	RET_RAID_AVATAR_CAPTAIN_NOT_EXIST = 3119;
	RET_RAID_STORY_LINE_NOT_MATCH = 3120;
	RET_TALK_EVENT_ALREADY_TAKEN = 3151;
	RET_NPC_ALREADY_MEET = 3152;
	RET_NPC_NOT_IN_CONFIG = 3153;
	RET_DIALOGUE_GROUP_DISMATCH = 3154;
	RET_DIALOGUE_EVENT_INVALID = 3155;
	RET_TALK_EVENT_TAKE_PROTO_NOT_MATCH = 3156;
	RET_TALK_EVENT_NOT_VALID = 3157;
	RET_EXPEDITION_CONFIG_NOT_EXIST = 3201;
	RET_EXPEDITION_REWARD_CONFIG_NOT_EXIST = 3202;
	RET_EXPEDITION_NOT_UNLOCKED = 3203;
	RET_EXPEDITION_ALREADY_ACCEPTED = 3204;
	RET_EXPEDITION_REPEATED_AVATAR = 3205;
	RET_AVATAR_ALREADY_DISPATCHED = 3206;
	RET_EXPEDITION_NOT_ACCEPTED = 3207;
	RET_EXPEDITION_NOT_FINISH = 3208;
	RET_EXPEDITION_ALREADY_FINISH = 3209;
	RET_EXPEDITION_TEAM_COUNT_LIMIT = 3210;
	RET_EXPEDITION_AVATAR_NUM_NOT_MATCH = 3211;
	RET_EXPEDITION_NOT_OPEN = 3212;
	RET_EXPEDITION_FRIEND_AVATAR_NOT_VALID = 3213;
	RET_EXPEDITION_NOT_PUBLISHED = 3214;
	RET_LOGIN_ACTIVITY_HAS_TAKEN = 3301;
	RET_LOGIN_ACTIVITY_DAYS_LACK = 3302;
	RET_TRIAL_ACTIVITY_REWARD_ALREADY_TAKE = 3303;
	RET_TRIAL_ACTIVITY_STAGE_NOT_FINISH = 3304;
	RET_MATERIAL_SUBMIT_ACTIVITY_HAS_TAKEN = 3305;
	RET_MATERIAL_SUBMIT_ACTIVITY_MATERIAL_NOT_SUBMITTED = 3306;
	RET_MATERIAL_SUBMIT_ACTIVITY_MATERIAL_ALREADY_SUBMITTED = 3307;
	RET_FANTASTIC_STORY_ACTIVITY_STORY_ERROR = 3308;
	RET_FANTASTIC_STORY_ACTIVITY_STORY_NOT_OPEN = 3309;
	RET_FANTASTIC_STORY_ACTIVITY_BATTLE_ERROR = 3310;
	RET_FANTASTIC_STORY_ACTIVITY_BATTLE_NOT_OPEN = 3311;
	RET_FANTASTIC_STORY_ACTIVITY_BATTLE_AVATAR_ERROR = 3312;
	RET_FANTASTIC_STORY_ACTIVITY_BATTLE_BUFF_ERROR = 3313;
	RET_FANTASTIC_STORY_ACTIVITY_PRE_BATTLE_SCORE_NOT_ENOUGH = 3314;
	RET_TRIAL_ACTIVITY_ALREADY_IN_TRIAL_ACTIVITY = 3315;
	RET_COMMON_ACTIVITY_NOT_OPEN = 3316;
	RET_BENEFIT_NOT_READY = 3317;
	RET_COMMON_ACTIVITY_BUSY = 3318;
	RET_AVATAR_DELIVER_REWARD_PHASE_ERROR = 3319;
	RET_MESSAGE_CONFIG_NOT_EXIST = 3501;
	RET_MESSAGE_SECTION_NOT_TAKE = 3502;
	RET_MESSAGE_GROUP_NOT_TAKE = 3503;
	RET_MESSAGE_SECTION_ID_NOT_MATCH = 3504;
	RET_MESSAGE_SECTION_CAN_NOT_FINISH = 3505;
	RET_MESSAGE_ITEM_CAN_NOT_FINISH = 3506;
	RET_MESSAGE_ITEM_RAID_CAN_NOT_FINISH = 3507;
	RET_FRIEND_ALREADY_IS_FRIEND = 3601;
	RET_FRIEND_IS_NOT_FRIEND = 3602;
	RET_FRIEND_APPLY_EXPIRE = 3603;
	RET_FRIEND_IN_BLACKLIST = 3604;
	RET_FRIEND_NOT_IN_BLACKLIST = 3605;
	RET_FRIEND_NUMBER_LIMIT = 3606;
	RET_FRIEND_BLACKLIST_NUMBER_LIMIT = 3607;
	RET_FRIEND_DAILY_APPLY_LIMIT = 3608;
	RET_FRIEND_IN_HANDLE_LIMIT = 3609;
	RET_FRIEND_APPLY_IN_CD = 3610;
	RET_FRIEND_REMARK_NAME_FORMAT_ERROR = 3611;
	RET_FRIEND_PLAYER_NOT_FOUND = 3612;
	RET_FRIEND_IN_TARGET_BLACKLIST = 3613;
	RET_FRIEND_TARGET_NUMBER_LIMIT = 3614;
	RET_ASSIST_QUERY_TOO_FAST = 3615;
	RET_ASSIST_NOT_EXIST = 3616;
	RET_ASSIST_USED_ALREADY = 3617;
	RET_FRIEND_REPORT_REASON_FORMAT_ERROR = 3618;
	RET_FRIEND_REPORT_SENSITIVE_WORDS = 3619;
	RET_ASSIST_USED_TIMES_OVER = 3620;
	RET_ASSIST_QUIT_ALREADY = 3621;
	RET_ASSIST_AVATAR_IN_LINEUP = 3622;
	RET_ASSIST_NO_REWARD = 3623;
	RET_FRIEND_SEARCH_NUM_LIMIT = 3624;
	RET_FRIEND_SEARCH_IN_CD = 3625;
	RET_FRIEND_REMARK_NAME_UTF8_ERROR = 3626;
	RET_FRIEND_REPORT_REASON_UTF8_ERROR = 3627;
	RET_ASSIST_SET_ALREADY = 3628;
	RET_FRIEND_TARGET_FORBID_OTHER_APPLY = 3629;
	RET_FRIEND_MARKED_CNT_MAX = 3630;
	RET_FRIEND_MARKED_ALREADY = 3631;
	RET_FRIEND_NOT_MARKED = 3632;
	RET_FRIEND_CHALLENGE_LINEUP_RECOMMEND_IN_CD = 3633;
	RET_VIEW_PLAYER_CARD_IN_CD = 3634;
	RET_VIEW_PLAYER_BATTLE_RECORD_IN_CD = 3635;
	RET_PLAYER_BOARD_HEAD_ICON_NOT_EXIST = 3701;
	RET_PLAYER_BOARD_HEAD_ICON_LOCKED = 3702;
	RET_PLAYER_BOARD_HEAD_ICON_ALREADY_UNLOCKED = 3703;
	RET_PLAYER_BOARD_DISPLAY_AVATAR_NOT_EXIST = 3704;
	RET_PLAYER_BOARD_DISPLAY_AVATAR_EXCEED_LIMIT = 3705;
	RET_PLAYER_BOARD_DISPLAY_REPEATED_AVATAR = 3706;
	RET_PLAYER_BOARD_DISPLAY_AVATAR_SAME_POS = 3707;
	RET_PLAYER_BOARD_DISPLAY_AVATAR_LOCKED = 3708;
	RET_SIGNATURE_LENGTH_EXCEED_LIMIT = 3709;
	RET_SIGNATURE_SENSITIVE_WORDS = 3710;
	RET_PLAYER_BOARD_ASSIST_AVATAR_NOT_EXIST = 3712;
	RET_PLAYER_BOARD_ASSIST_AVATAR_LOCKED = 3713;
	RET_SIGNATURE_UTF8_ERROR = 3714;
	RET_PLAYER_BOARD_ASSIST_AVATAR_CNT_ERROR = 3715;
	RET_PLAYER_BOARD_PERSONAL_CARD_NOT_EXIST = 3716;
	RET_PLAYER_BOARD_PERSONAL_CARD_LOCKED = 3717;
	RET_PLAYER_BOARD_PERSONAL_NO_CHANGE = 3718;
	RET_BATTLE_PASS_TIER_NOT_VALID = 3801;
	RET_BATTLE_PASS_LEVEL_NOT_MEET = 3802;
	RET_BATTLE_PASS_REWARD_TAKE_ALREADY = 3803;
	RET_BATTLE_PASS_NOT_PREMIUM = 3804;
	RET_BATTLE_PASS_NOT_DOING = 3805;
	RET_BATTLE_PASS_LEVEL_INVALID = 3806;
	RET_BATTLE_PASS_NOT_UNLOCK = 3807;
	RET_BATTLE_PASS_NO_REWARD = 3808;
	RET_BATTLE_PASS_QUEST_NOT_VALID = 3809;
	RET_BATTLE_PASS_NOT_CHOOSE_OPTIONAL = 3810;
	RET_BATTLE_PASS_NOT_TAKE_REWARD = 3811;
	RET_BATTLE_PASS_OPTIONAL_NOT_VALID = 3812;
	RET_BATTLE_PASS_BUY_ALREADY = 3813;
	RET_BATTLE_PASS_NEAR_END = 3814;
	RET_MUSIC_LOCKED = 3901;
	RET_MUSIC_NOT_EXIST = 3902;
	RET_MUSIC_UNLOCK_FAILED = 3903;
	RET_PUNK_LORD_LACK_SUMMON_TIMES = 4001;
	RET_PUNK_LORD_ATTACKING_MONSTER_LIMIT = 4002;
	RET_PUNK_LORD_MONSTER_NOT_EXIST = 4003;
	RET_PUNK_LORD_MONSTER_ALREADY_SHARED = 4004;
	RET_PUNK_LORD_MONSTER_EXPIRED = 4005;
	RET_PUNK_LORD_SELF_MONSTER_ATTACK_LIMIT = 4006;
	RET_PUNK_LORD_LACK_SUPPORT_TIMES = 4007;
	RET_PUNK_LORD_MONSTER_ALREADY_KILLED = 4008;
	RET_PUNK_LORD_MONSTER_ATTACKER_LIMIT = 4009;
	RET_PUNK_LORD_WORLD_LEVLE_NOT_VALID = 4010;
	RET_PUNK_LORD_REWARD_LEVLE_NOT_EXIST = 4011;
	RET_PUNK_LORD_POINT_NOT_MEET = 4012;
	RET_PUNK_LORD_IN_ATTACKING = 4013;
	RET_PUNK_LORD_OPERATION_IN_CD = 4014;
	RET_PUNK_LORD_REWARD_ALREADY_TAKEN = 4015;
	RET_PUNK_LORD_OVER_BONUS_REWARD_LIMIT = 4016;
	RET_PUNK_LORD_NOT_IN_SCHEDULE = 4017;
	RET_PUNK_LORD_MONSTER_NOT_ATTACKED = 4018;
	RET_PUNK_LORD_MONSTER_NOT_KILLED = 4019;
	RET_PUNK_LORD_MONSTER_KILLED_SCORE_ALREADY_TAKE = 4020;
	RET_PUNK_LORD_REWARD_LEVLE_ALREADY_TAKE = 4021;
	RET_DAILY_ACTIVE_LEVEL_INVALID = 4101;
	RET_DAILY_ACTIVE_LEVEL_REWARD_ALREADY_TAKEN = 4102;
	RET_DAILY_ACTIVE_LEVEL_AP_NOT_ENOUGH = 4103;
	RET_DAILY_MEET_PAM = 4201;
	RET_REPLAY_ID_NOT_MATCH = 4251;
	RET_REPLAY_REQ_NOT_VALID = 4252;
	RET_FIGHT_ACTIVITY_DIFFICULTY_LEVEL_NOT_PASSED = 4301;
	RET_FIGHT_ACTIVITY_DIFFICULTY_LEVEL_REWARD_ALREADY_TAKE = 4302;
	RET_FIGHT_ACTIVITY_STAGE_NOT_OPEN = 4303;
	RET_FIGHT_ACTIVITY_LEVEL_NOT_UNLOCK = 4304;
	RET_TRAIN_VISITOR_VISITOR_NOT_EXIST = 4351;
	RET_TRAIN_VISITOR_BEHAVIOR_NOT_EXIST = 4352;
	RET_TRAIN_VISITOR_BEHAVIOR_FINISHED = 4353;
	RET_TRAIN_VISITOR_ALL_BEHAVIOR_REWARD_TAKEN = 4354;
	RET_TRAIN_VISITOR_GET_ON_MISSION_NOT_FINISH = 4355;
	RET_TRAIN_VISITOR_NOT_GET_OFF_OR_BE_TRAIN_MEMBER = 4356;
	RET_TEXT_JOIN_UNKNOW_IS_OVERRIDE = 4401;
	RET_TEXT_JOIN_ID_NOT_EXIST = 4402;
	RET_TEXT_JOIN_CAN_NOT_OVERRIDE = 4403;
	RET_TEXT_JOIN_ITEM_ID_ERROR = 4404;
	RET_TEXT_JOIN_SENSITIVE_CHECK_ERROR = 4405;
	RET_TEXT_JOIN_MUST_OVERRIDE = 4406;
	RET_TEXT_JOIN_TEXT_EMPTY = 4407;
	RET_TEXT_JOIN_TEXT_FORMAT_ERROR = 4408;
	RET_TEXT_JOIN_TEXT_UTF8_ERROR = 4409;
	RET_TEXT_JOIN_BATCH_REQ_ID_REPEAT = 4410;
	RET_TEXT_JOIN_TYPE_NOT_SUPPORT_BATCH_REQ = 4411;
	RET_TEXT_JOIN_AVATAR_ID_NOT_EXIST = 4412;
	RET_TEXT_JOIN_UNKNOW_TYPE = 4413;
	RET_PAM_MISSION_MISSION_ID_ERROR = 4451;
	RET_PAM_MISSION_MISSION_EXPIRE = 4452;
	RET_CHAT_TYPE_NOT_EXIST = 4501;
	RET_MSG_TYPE_NOT_EXIST = 4502;
	RET_CHAT_NO_TARGET_UID = 4503;
	RET_CHAT_MSG_EMPTY = 4504;
	RET_CHAT_MSG_EXCEED_LIMIT = 4505;
	RET_CHAT_MSG_SENSITIVE_CHECK_ERROR = 4506;
	RET_CHAT_MSG_UTF8_ERROR = 4507;
	RET_CHAT_FORBID_SWITCH_OPEN = 4508;
	RET_CHAT_FORBID = 4509;
	RET_CHAT_MSG_INCLUDE_SPECIAL_STR = 4510;
	RET_CHAT_MSG_EMOJI_NOT_EXIST = 4511;
	RET_CHAT_MSG_EMOJI_GENDER_NOT_MATCH = 4512;
	RET_CHAT_MSG_EMOJI_NOT_MARKED = 4513;
	RET_CHAT_MSG_EMOJI_ALREADY_MARKED = 4514;
	RET_CHAT_MSG_EMOJI_MARKED_MAX_LIMIT = 4515;
	RET_BOXING_CLUB_CHALLENGE_NOT_OPEN = 4601;
	RET_MUSEUM_NOT_OPEN = 4651;
	RET_MUSEUM_TURN_CNT_NOT_MATCH = 4652;
	RET_MUSEUM_PHASE_NOT_REACH = 4653;
	RET_MUSEUM_UNKNOW_STUFF = 4654;
	RET_MUSEUM_UNKNOW_AREA = 4655;
	RET_MUSEUM_UNKNOW_POS = 4656;
	RET_MUSEUM_STUFF_ALREADY_IN_AREA = 4657;
	RET_MUSEUM_STUFF_NOT_IN_AREA = 4658;
	RET_MUSEUM_GET_NPC_REPEAT = 4659;
	RET_MUSEUM_GET_NPC_UNLOCK = 4660;
	RET_MUSEUM_GET_NPC_NOT_ENOUGH = 4661;
	RET_MUSEUM_CHANGE_STUFF_AREA_ERROR = 4662;
	RET_MUSEUM_NOT_INIT = 4663;
	RET_MUSEUM_EVENT_ERROR = 4664;
	RET_MUSEUM_UNKNOW_CHOOSE_EVENT_ID = 4665;
	RET_MUSEUM_EVENT_ORDER_NOT_MATCH = 4666;
	RET_MUSEUM_EVENT_PHASE_NOT_UNLOCK = 4667;
	RET_MUSEUM_EVENT_MISSION_NOT_FOUND = 4668;
	RET_MUSEUM_AREA_LEVEL_UP_ALREADY = 4669;
	RET_MUSEUM_STUFF_ALREADY_USED = 4670;
	RET_MUSEUM_EVENT_ROUND_NOT_UNLOCK = 4671;
	RET_MUSEUM_STUFF_IN_AREA = 4672;
	RET_MUSEUM_STUFF_DISPATCH = 4673;
	RET_MUSEUM_IS_END = 4674;
	RET_MUSEUM_STUFF_LEAVING = 4675;
	RET_MUSEUM_EVENT_MISSION_NOT_FINISH = 4678;
	RET_MUSEUM_COLLECT_REWARD_NOT_EXIST = 4679;
	RET_MUSEUM_COLLECT_REWARD_ALREADY_TAKEN = 4680;
	RET_MUSEUM_ACCEPT_MISSION_MAX_LIMIT = 4681;
	RET_ROGUE_CHALLENGE_NOT_OPEN = 4701;
	RET_ROGUE_CHALLENGE_ASSIS_REFRESH_LIMIT = 4702;
	RET_ALLEY_NOT_INIT = 4721;
	RET_ALLEY_NOT_OPEN = 4722;
	RET_ALLEY_MAP_NOT_EXIST = 4724;
	RET_ALLEY_EMPTY_POS_LIST = 4725;
	RET_ALLEY_LINE_POS_INVALID = 4726;
	RET_ALLEY_SHOP_NOT_UNLOCK = 4727;
	RET_ALLEY_DEPOT_FULL = 4728;
	RET_ALLEY_SHOP_NOT_INCLUDE = 4729;
	RET_ALLEY_EVENT_NOT_UNLOCK = 4730;
	RET_ALLEY_EVENT_NOT_REFRESH = 4731;
	RET_ALLEY_EVENT_STATE_DOING = 4732;
	RET_ALLEY_EVENT_STATE_FINISH = 4733;
	RET_ALLEY_EVENT_ERROR = 4734;
	RET_ALLEY_REWARD_LEVEL_ERROR = 4735;
	RET_ALLEY_REWARD_PRESTIGE_NOT_ENOUGH = 4736;
	RET_ALLEY_SHIP_EMPTY = 4737;
	RET_ALLEY_SHIP_ID_DISMATCH = 4738;
	RET_ALLEY_SHIP_NOT_EXIST = 4739;
	RET_ALLEY_SHIP_NOT_UNLOCK = 4740;
	RET_ALLEY_GOODS_NOT_EXIST = 4741;
	RET_ALLEY_GOODS_NOT_UNLOCK = 4742;
	RET_ALLEY_PROFIT_NOT_POSITIVE = 4743;
	RET_ALLEY_SPECIAL_ORDER_DISMATCH = 4744;
	RET_ALLEY_ORDER_GOODS_OVER_LIMIT = 4745;
	RET_ALLEY_SPECIAL_ORDER_CONDITION_NOT_MEET = 4746;
	RET_ALLEY_DEPOT_SIZE_OVER_LIMIT = 4747;
	RET_ALLEY_GOODS_NOT_ENOUGH = 4748;
	RET_ALLEY_ORDER_INDEX_INVALID = 4749;
	RET_ALLEY_REWARD_ALREADY_TAKE = 4750;
	RET_ALLEY_REWARD_NOT_EXIST = 4751;
	RET_ALLEY_MAIN_MISSION_NOT_DOING = 4752;
	RET_ALLEY_CRITICAL_EVENT_NOT_FINISH = 4753;
	RET_ALLEY_SHOP_GOODS_NOT_VALID = 4754;
	RET_ALLEY_SLASH_NOT_OPEN = 4755;
	RET_ALLEY_PLACING_ANCHOR_INVALID = 4756;
	RET_ALLEY_PLACING_GOODS_INDEX_INVALID = 4757;
	RET_ALLEY_SAVE_MAP_TOO_QUICK = 4758;
	RET_ALLEY_MAP_NOT_LINK = 4759;
	RET_ALLEY_FUNDS_NOT_LOWER_BASE = 4760;
	RET_ALLEY_EVENT_NOT_FINISH = 4761;
	RET_ALLEY_NORMAL_ORDER_NOT_MEET = 4762;
	RET_PLAYER_RETURN_NOT_OPEN = 4801;
	RET_PLAYER_RETURN_IS_SIGNED = 4802;
	RET_PLAYER_RETURN_POINT_NOT_ENOUGH = 4803;
	RET_PLAYER_RETURN_CONDITION_INVALID = 4804;
	RET_PLAYER_RETURN_HAS_SIGNED = 4805;
	RET_PLAYER_RETURN_REWARD_TAKEN = 4806;
	RET_PLAYER_RETURN_RELIC_TAKEN = 4807;
	RET_AETHER_DIVIDE_NO_LINEUP = 4851;
	RET_AETHER_DIVIDE_LINEUP_INVALID = 4852;
	RET_CHAT_BUBBLE_ID_ERROR = 4901;
	RET_CHAT_BUBBLE_ID_NOT_UNLOCK = 4902;
	RET_PHONE_THEME_ID_ERROR = 4903;
	RET_PHONE_THEME_ID_NOT_UNLOCK = 4904;
	RET_CHAT_BUBBLE_SELECT_IS_CURRENT = 4905;
	RET_PHONE_THEME_SELECT_IS_CURRENT = 4906;
	RET_PHONE_CASE_ID_ERROR = 4907;
	RET_PHONE_CASE_ID_NOT_UNLOCK = 4908;
	RET_PHONE_CASE_SELECT_IS_CURRENT = 4909;
	RET_CHESS_ROGUE_CONFIG_NOT_FOUND = 4951;
	RET_CHESS_ROGUE_CONFIG_INVALID = 4952;
	RET_CHESS_ROGUE_NO_VALID_ROOM = 4963;
	RET_CHESS_ROGUE_NO_CELL_INFO = 4964;
	RET_CHESS_ROGUE_CELL_NOT_FINISH = 4965;
	RET_CHESS_ROGUE_CELL_IS_LOCKED = 4966;
	RET_CHESS_ROGUE_SCHEDULE_NOT_MATCH = 4967;
	RET_CHESS_ROGUE_STATUS_FAIL = 4968;
	RET_CHESS_ROGUE_AREA_NOT_EXIST = 4969;
	RET_CHESS_ROGUE_LINEUP_FAIL = 4970;
	RET_CHESS_ROGUE_AEON_FAIL = 4980;
	RET_CHESS_ROGUE_ENTER_CELL_FAIL = 4981;
	RET_CHESS_ROGUE_ROLL_DICE_FAIL = 4982;
	RET_CHESS_ROGUE_DICE_STATUS_FAIL = 4983;
	RET_CHESS_ROGUE_DICE_CNT_NOT_FULL = 4984;
	RET_CHESS_ROGUE_UNLOCK = 4985;
	RET_CHESS_ROGUE_PICK_AVATAR_FAIL = 4986;
	RET_CHESS_ROGUE_AVATAR_INVALID = 4987;
	RET_CHESS_ROGUE_CELL_CAN_NOT_SELECT = 4988;
	RET_CHESS_ROGUE_DICE_CONFIRMED = 4989;
	RET_CHESS_ROGUE_NOUS_DICE_NOT_MATCH = 4990;
	RET_CHESS_ROGUE_NOUS_DICE_RARITY_FAIL = 4991;
	RET_CHESS_ROGUE_NOUS_DICE_SURFACE_DUPLICATE = 4992;
	RET_CHESS_ROGUE_NOT_IN_ROGUE = 4993;
	RET_CHESS_ROGUE_NOUS_DICE_BRANCH_LIMIT = 4994;
	RET_HELIOBUS_NOT_OPEN = 5101;
	RET_HELIOBUS_SNS_POST_NOT_UNLOCK = 5102;
	RET_HELIOBUS_SNS_ALREADY_READ = 5103;
	RET_HELIOBUS_SNS_ALREADY_LIKED = 5104;
	RET_HELIOBUS_SNS_ALREADY_COMMENTED = 5105;
	RET_HELIOBUS_SNS_IN_MISSION = 5106;
	RET_HELIOBUS_SNS_ALREADY_POSTED = 5107;
	RET_HELIOBUS_SNS_NOT_DOING_MISSION = 5108;
	RET_HELIOBUS_REWARD_LEVEL_MAX = 5109;
	RET_HELIOBUS_INCOME_NOT_ENOUGH = 5110;
	RET_HELIOBUS_SNS_COMMENT_NOT_UNLOCK = 5111;
	RET_HELIOBUS_CHALLENGE_NOT_UNLOCK = 5112;
	RET_HELIOBUS_CHALLENGE_ID_ERROR = 5113;
	RET_HELIOBUS_SKILL_NOT_UNLOCK = 5114;
	RET_HELIOBUS_ACCEPT_POST_MISSION_FAIL = 5115;
	RET_HELIOBUS_SKILL_NOT_SELECTED = 5116;
	RET_HELIOBUS_PLANE_TYPE_INVALID = 5117;
	RET_REDDOT_PARAM_INVALID = 5151;
	RET_REDDOT_ACTIVITY_NOT_OPEN = 5152;
	RET_ROGUE_ENDLESS_ACTIVITY_CONFIG_ERROR = 5201;
	RET_ROGUE_ENDLESS_ACTIVITY_NOT_OPEN = 5202;
	RET_ROGUE_ENDLESS_ACTIVITY_OVER_BONUS_REWARD_LIMIT = 5203;
	RET_ROGUE_ENDLESS_ACTIVITY_SCORE_NOT_MEET = 5204;
	RET_ROGUE_ENDLESS_ACTIVITY_REWARD_LEVLE_ALREADY_TAKE = 5205;
	RET_HEART_DIAL_SCRIPT_NOT_FOUND = 5251;
	RET_HEART_DIAL_SCRIPT_EMOTION_THE_SAME = 5252;
	RET_HEART_DIAL_SCRIPT_STEP_NOT_NORMAL = 5253;
	RET_HEART_DIAL_SCRIPT_CONDITION_NOT_MATCH = 5254;
	RET_HEART_DIAL_SCRIPT_SUBMIT_ITEM_NUM_NOT_MATCH = 5255;
	RET_HEART_DIAL_SCRIPT_SUBMIT_ITEM_ID_NOT_MATCH = 5256;
	RET_HEART_DIAL_DIALOGUE_NOT_FOUND = 5257;
	RET_HEART_DIAL_DIALOGUE_ALREADY_PERFORMED = 5258;
	RET_HEART_DIAL_NPC_NOT_FOUND = 5259;
	RET_HEART_DIAL_TRACE_CONFIG_NOT_FOUND = 5260;
	RET_HEART_DIAL_FLOOR_TRACE_EXIST = 5261;
	RET_HEART_DIAL_TRACE_FLOOR_NOT_MATCH = 5262;
	RET_TRAVEL_BROCHURE_CONFIG_ERROR = 5301;
	RET_TRAVEL_BROCHURE_PARAM_INVALID = 5302;
	RET_TRAVEL_BROCHURE_LOCKED = 5303;
	RET_TRAVEL_BROCHURE_CANNOT_OPERATE = 5304;
	RET_TRAVEL_BROCHURE_WORLD_ID_NOT_MATCH = 5305;
	RET_TRAVEL_BROCHURE_HAS_NO_WORLD_BOOK = 5306;
	RET_TRAVEL_BROCHURE_PAGE_FULL = 5307;
	RET_MAP_ROTATION_NOT_IN_REGION = 5351;
	RET_MAP_ROTATION_ROTATER_ALREADY_DEPLOYED = 5352;
	RET_MAP_ROTATION_ENERGY_NOT_ENOUGH = 5353;
	RET_MAP_ROTATION_ENTITY_NOT_ON_CUR_POSE = 5354;
	RET_MAP_ROTATION_ROTATER_NOT_DEPLOYED = 5355;
	RET_MAP_ROTATION_POSE_ROTATER_MISMATCH = 5356;
	RET_MAP_ROTATION_ROTATER_NOT_REMOVABLE = 5357;
	RET_MAP_ROTATION_ROTATER_DISPOSABLE = 5358;
	RET_SPACE_ZOO_ACTIVITY_CAT_NOT_FOUND = 5401;
	RET_SPACE_ZOO_ACTIVITY_CAT_PARAM_INVALID = 5402;
	RET_SPACE_ZOO_ACTIVITY_CAT_ITEM_NOT_ENOUGH = 5403;
	RET_SPACE_ZOO_ACTIVITY_CAT_BAG_FULL = 5404;
	RET_SPACE_ZOO_ACTIVITY_CAT_NOT_TO_MUTATE = 5405;
	RET_SPACE_ZOO_ACTIVITY_CAT_STATE_ERROR = 5406;
	RET_SPACE_ZOO_ACTIVITY_CAT_CATTERY_LOCKED = 5407;
	RET_SPACE_ZOO_ACTIVITY_CAT_OUT_NOW = 5408;
	RET_SPACE_ZOO_ACTIVITY_CAT_CONFIG_NOT_FOUND = 5409;
	RET_SPACE_ZOO_ACTIVITY_CAT_FEATURE_NOT_FOUND = 5410;
	RET_SPACE_ZOO_ACTIVITY_CAT_ADD_CAT_ERROR = 5411;
	RET_SPACE_ZOO_ACTIVITY_CAT_MONEY_NOT_ENOUGH = 5412;
	RET_SPACE_ZOO_ACTIVITY_CAT_COND_NOT_MATCH = 5413;
	RET_STRONG_CHALLENGE_ACTIVITY_STAGE_CFG_MISS = 5501;
	RET_STRONG_CHALLENGE_ACTIVITY_STAGE_NOT_OPEN = 5502;
	RET_STRONG_CHALLENGE_ACTIVITY_BUFF_ERROR = 5503;
	RET_ROLL_SHOP_NOT_FOUND = 5551;
	RET_ROLL_SHOP_GROUP_EMPTY = 5552;
	RET_ROLL_SHOP_EMPTY = 5553;
	RET_ROLL_SHOP_GACHA_REQ_DUPLICATED = 5554;
	RET_ROLL_SHOP_RANDOM_ERROR = 5555;
	RET_ROLL_SHOP_GROUP_TYPE_NOT_FOUND = 5556;
	RET_ROLL_SHOP_HAS_STORED_REWARD_ALREADY = 5557;
	RET_ROLL_SHOP_NO_STORED_REWARD = 5558;
	RET_ROLL_SHOP_NOT_IN_VALID_SCENE = 5559;
	RET_ROLL_SHOP_INVALID_ROLL_SHOP_TYPE = 5560;
	RET_ACTIVITY_RAID_COLLECTION_PREV_NOT_FINISH = 5601;
	RET_ACTIVITY_RAID_COLLECTION_GROUP_ENTER_NEXT_UNAVAILABLE = 5602;
	RET_ACTIVITY_RAID_COLLECTION_IS_LAST = 5603;
	RET_ACTIVITY_RAID_COLLECTION_IS_NOT_NEXT = 5604;
	RET_OFFERING_NOT_UNLOCK = 5651;
	RET_OFFERING_LEVEL_NOT_UNLOCK = 5652;
	RET_OFFERING_REACH_MAX_LEVEL = 5653;
	RET_OFFERING_ITEM_NOT_ENOUGH = 5654;
	RET_OFFERING_LONGTAIL_NOT_OPEN = 5655;
	RET_OFFERING_REWARD_CONDITION = 5656;
	RET_DRINK_MAKER_CHAT_INVALID = 5701;
	RET_DRINK_MAKER_PARAM_INVALID = 5702;
	RET_DRINK_MAKER_PARAM_NOT_UNLOCK = 5703;
	RET_DRINK_MAKER_CONFIG_NOT_FOUND = 5704;
	RET_DRINK_MAKER_NOT_LAST_CHAT = 5705;
	RET_DRINK_MAKER_DAY_AND_FREE_PHASE_NOT_OPEN = 5706;
	RET_DRINK_MAKER_CHEERS_NOT_ABLE_TO_NEXT_GROUP = 5707;
	RET_DRINK_MAKER_CHEERS_DRINK_ALREADY_MADE = 5708;
	RET_DRINK_MAKER_CHEERS_ACTIVITY_NOT_OPEN = 5709;
	RET_DRINK_MAKER_CHEERS_MAKE_DRINK_PRE_MISSION_NOT_FINISHED = 5710;
	RET_MONOPOLY_NOT_OPEN = 5751;
	RET_MONOPOLY_CONFIG_ERROR = 5752;
	RET_MONOPOLY_DICE_NOT_ENOUGH = 5753;
	RET_MONOPOLY_CUR_CELL_NOT_FINISH = 5754;
	RET_MONOPOLY_COIN_NOT_ENOUGH = 5755;
	RET_MONOPOLY_CELL_WAIT_PENDING = 5756;
	RET_MONOPOLY_CELL_STATE_ERROR = 5757;
	RET_MONOPOLY_CELL_CONTENT_ERROR = 5758;
	RET_MONOPOLY_ITEM_NOT_ENOUGH = 5759;
	RET_MONOPOLY_CELL_CONTENT_CANNOT_GIVEUP = 5760;
	RET_MONOPOLY_ASSET_LEVEL_INVALID = 5761;
	RET_MONOPOLY_TURN_NOT_FINISH = 5762;
	RET_MONOPOLY_GUIDE_NOT_FINISH = 5763;
	RET_MONOPOLY_RAFFLE_REWARD_REISSUED = 5764;
	RET_MONOPOLY_NO_GAME_ACTIVE = 5771;
	RET_MONOPOLY_GAME_RATIO_NOT_INCREASABLE = 5772;
	RET_MONOPOLY_GAME_RATIO_MAX = 5773;
	RET_MONOPOLY_GAME_TARGET_RATIO_INVALID = 5774;
	RET_MONOPOLY_GAME_BINGO_FLIP_POS_INVALID = 5775;
	RET_MONOPOLY_GAME_GUESS_ALREADY_CHOOSE = 5776;
	RET_MONOPOLY_GAME_GUESS_CHOOSE_INVALID = 5777;
	RET_MONOPOLY_GAME_GUESS_INFORMATION_ALREADY_BOUGHT = 5778;
	RET_MONOPOLY_GAME_RAISE_RATIO_NOT_UNLOCK = 5779;
	RET_MONOPOLY_FRIEND_NOT_SYNCED = 5785;
	RET_MONOPOLY_GET_FRIEND_RANKING_LIST_IN_CD = 5786;
	RET_MONOPOLY_LIKE_TARGET_NOT_FRIEND = 5787;
	RET_MONOPOLY_DAILY_ALREADY_LIKED = 5788;
	RET_MONOPOLY_SOCIAL_EVENT_STATUS_NOT_MATCH = 5789;
	RET_MONOPOLY_SOCIAL_EVENT_SERVER_CACHE_NOT_EXIST = 5790;
	RET_MONOPOLY_ACTIVITY_ID_NOT_MATCH = 5791;
	RET_MONOPOLY_RAFFLE_POOL_NOT_EXIST = 5792;
	RET_MONOPOLY_RAFFLE_POOL_TIME_NOT_MATCH = 5793;
	RET_MONOPOLY_RAFFLE_POOL_PHASE_NOT_MEET = 5794;
	RET_MONOPOLY_RAFFLE_POOL_SHOW_TIME_NOT_MEET = 5795;
	RET_MONOPOLY_RAFFLE_TICKET_NOT_FOUND = 5796;
	RET_MONOPOLY_RAFFLE_TICKET_TIME_NOT_MEET = 5797;
	RET_MONOPOLY_RAFFLE_TICKET_REWARD_ALREADY_TAKEN = 5798;
	RET_MONOPOLY_RAFFLE_POOL_NOT_IN_RAFFLE_TIME = 5799;
	RET_MONOPOLY_MBTI_REPORT_REWARD_ALREADY_TAKEN = 5800;
	RET_EVOLVE_BUILD_LEVEL_GAMING = 5801;
	RET_EVEOLVE_BUILD_LEVEL_BAN_RANDOM = 5802;
	RET_EVOLVE_BUILD_FIRST_REWARD_ALREADY_TAKEN = 5803;
	RET_EVOLVE_BUILD_LEVEL_UNFINISH = 5804;
	RET_EVOLVE_BUILD_SHOP_ABILITY_MAX_LEVEL = 5805;
	RET_EVOLVE_BUILD_SHOP_ABILITY_MIN_LEVEL = 5806;
	RET_EVOLVE_BUILD_SHOP_ABILITY_NOT_GET = 5807;
	RET_EVOLVE_BUILD_LEVEL_LOCK = 5808;
	RET_EVOLVE_BUILD_EXP_NOT_ENOUGH = 5809;
	RET_EVOLVE_BUILD_SHOP_ABILITY_LEVEL_ERROR = 5810;
	RET_EVOLVE_BUILD_ACTIVITY_NOT_OPEN = 5811;
	RET_EVOLVE_BUILD_SHOP_ABILITY_EMPTY = 5812;
	RET_EVOLVE_BUILD_LEVEL_NOT_START = 5813;
	RET_EVOLVE_BUILD_SHOP_LOCK = 5814;
	RET_EVOLVE_BUILD_REWARD_LOCK = 5815;
	RET_EVOLVE_BUILD_REWARD_LEVEL_MAX = 5816;
	RET_EVOLVE_BUILD_REWARD_ALREADY_ALL_TAKEN = 5717;
	RET_EVOLVE_BUILD_SEASON_ERROR = 5718;
	RET_EVOLVE_BUILD_TEACH_SKIP_QUEST_NOT_FINISH = 5719;
	RET_CLOCK_PARK_CONFIG_ERROR = 5851;
	RET_CLOCK_PARK_EFFECT_ERROR = 5852;
	RET_CLOCK_PARK_SCRIPT_ALREADY_UNLOCK = 5853;
	RET_CLOCK_PARK_SCRIPT_UNLOCK_CONDITION_NOT_MEET = 5854;
	RET_CLOCK_PARK_TALENT_ALREADY_UNLOCK = 5855;
	RET_CLOCK_PARK_SCRIPT_LOCKED = 5856;
	RET_CLOCK_PARK_HAS_ONGOING_SCRIPT = 5857;
	RET_CLOCK_PARK_NO_ONGOING_SCRIPT = 5858;
	RET_CLOCK_PARK_DICE_PLACEMENT_ERROR = 5859;
	RET_CLOCK_PARK_MISMATCH_STATUS = 5860;
	RET_CLOCK_PARK_NO_BUFF = 5861;
	RET_CLOCK_PARK_SLOT_MACHINE_GACHA_REQ_DUPLICATED = 5862;
	RET_CLOCK_PARK_SLOT_MACHINE_COST_NOT_ENOUGH = 5863;
	RET_CLOCK_PARK_SLOT_MACHINE_GACHA_CNT_EXCEED_LIMIT = 5864;
	RET_CLOCK_PARK_NOT_OPEN = 5865;
	RET_TOURN_ROGUE_STATUS_MISMATCH = 5901;
	RET_MAGIC_ROGUE_STATUS_MISMATCH = 5902;
	RET_AUTO_MOUNT_MAGIC_UNIT_NO_MATCHED_MAGIC_SCEPTER = 5903;
	RET_MAGIC_UNIT_WORKBENCH_REFORGE_GEN_FAIL = 5904;
	RET_MATCH_ALREADY_IN_MATCH = 6201;
	RET_MATCH_NOT_IN_MATCH = 6202;
	RET_MATCH_PLAY_NOT_OPEN = 6203;
	RET_CROSS_STATE_ERROR = 6204;
	RET_MATCH_VERSION_NOT_EQUAL = 6205;
	RET_MATCH_PLAYER_NOT_IN_LOBBY_ROOM = 6206;
	RET_LOBBY_STATE_NOT_MATCH = 6207;
	RET_LOBBY_ROOM_NOT_EXIST = 6208;
	RET_LOBBY_ROOM_PALYER_FULL = 6209;
	RET_LOBBY_ROOM_PALYER_NOT_READY = 6210;
	RET_LOBBY_ROOM_PALYER_FIGHTING = 6211;
	RET_FIGHT_ROOM_NOT_EXIST = 6250;
	RET_FIGHT_MATCH3_PLAYER_STATE_ERR = 6251;
	RET_FIGHT_MATCH3_ROOM_STATE_ERR = 6252;
	RET_CROSS_STATE_TIME_OUT = 6253;
	RET_LOBBY_START_FIGHT_DISABLE = 6254;
	RET_LOBBY_START_FIGHT_PLAYER_LACK = 6255;
	RET_MATCH_CLIENT_DATA_VERSION_LOW = 6256;
	RET_LOBBY_START_MATCH_DISABLE = 6257;
	RET_LOBBY_INTERACT_IN_CD = 6258;
	RET_LOBBY_OWNER_STATE_ERR = 6259;
	RET_LOBBY_OP_TOO_FAST = 6260;
	RET_FIGHT_MATCH3_SOLO_PLAYER_TURN_ERR = 6261;
	RET_SWORD_TRAINING_NO_ACTIVE_GAME = 6301;
	RET_SWORD_TRAINING_NO_PENDING_ACTION_MATCH = 6302;
	RET_SWORD_TRAINING_PARTNER_ABILITY_INVALID = 6303;
	RET_SWORD_TRAINING_SKILL_ALREADY_LEARNED = 6304;
	RET_SWORD_TRAINING_CONDITION_NOT_MEET = 6305;
	RET_SWORD_TRAINING_PARENT_SKILL_NOT_LEARNED = 6306;
	RET_SWORD_TRAINING_SKILL_TYPE_NOT_UNLOCK = 6307;
	RET_SWORD_TRAINING_GAME_ALREADY_EXIST = 6308;
	RET_SWORD_TRAINING_ENDING_HINT_NOT_MATCH = 6309;
	RET_SWORD_TRAINING_STORYLINE_CONFIG_NOT_FOUND = 6310;
	RET_SWORD_TRAINING_STORY_CONFIG_NOT_FOUND = 6311;
	RET_SWORD_TRAINING_UNLOCK_NOT_FINISH = 6312;
	RET_SWORD_TRAINING_OPTION_MISMATCH = 6313;
	RET_SWORD_TRAINING_RESTORE_WITHOUT_EXAM_FAILED = 6314;
	RET_SWORD_TRAINING_NO_RESTORE_GAME_AVAILABLE = 6315;
	RET_SWORD_TRAINING_ENDING_STORY_NOT_MATCH = 6316;
	RET_SWORD_TRAINING_ENDING_NOT_FINISH = 6317;
	RET_SWORD_TRAINING_ENDING_REWARD_TAKEN = 6318;
	RET_SWORD_TRAINING_COMBAT_RANK_NOT_CHANGE = 6319;
	RET_SWORD_TRAINING_DIRECT_BATTLE_DISABLE = 6320;
	RET_FIGHT_FEST_PHASE_NOT_MATCH = 6351;
	RET_FIGHT_FEST_SCORE_RACE_ALREADY_FINISH = 6352;
	RET_FIGHT_FEST_CHALLENGE_LOCKED = 6353;
	RET_FIGHT_FEST_COACH_SKILL_LOCKED = 6354;
	RET_FIGHT_FEST_COACH_SKILL_EQUIP_TYPE_EXISTED = 6355;
	RET_FIGHT_FEST_SCORE_RACE_MISSION_DOIND = 6356;
	RET_FIGHT_FEST_COACH_SKILL_NO_EQUIP = 6357;
	RET_PET_NOT_EXIST = 6401;
	RET_PET_ALREADY_SUMMONED = 6402;
	RET_PET_NOT_SUMMONED = 6403;
	RET_MUSIC_RHYTHM_LEVEL_TIME_TOO_SHORT = 6451;
	RET_MUSIC_RHYTHM_NOT_IN_LEVEL = 6452;
	RET_MUSIC_RHYTHM_PRE_DIFFICULTY_NOT_PASS = 6453;
	RET_MUSIC_RHYTHM_SONG_LIMITED = 6454;
	RET_MUSIC_RHYTHM_SONG_LOCKED = 6455;
	RET_MUSIC_RHYTHM_TRACK_LOCKED = 6456;
	RET_MUSIC_RHYTHM_LEVEL_NOT_UNLOCK = 6457;
	RET_MUSIC_RHYTHM_SONG_SFX_LOCKED = 6458;
	RET_TRAIN_PARTY_COIN_NOT_ENOUGH = 6501;
	RET_TRAIN_PARTY_DIY_TAG_NOT_MATCH = 6502;
	RET_TRAIN_PARTY_USE_CARD_MOBILITY_NOT_ENOUGH = 6503;
	RET_TRAIN_PARTY_AREA_UNLOCK_COIN_NOT_ENOUGH = 6504;
	RET_TAROT_BOOK_ENERGY_NOT_ENOUGH = 6601;
	RET_TAROT_BOOK_PACK_NOT_AVAILABLE = 6602;
	RET_TAROT_BOOK_STORY_ALREADY_UNLOCK = 6603;
	RET_TAROT_BOOK_CARD_NOT_ENOUGH = 6604;
	RET_TAROT_BOOK_CLUE_NOT_ENOUGH = 6605;
	RET_TAROT_BOOK_UNLOCK_STORY_CARD_NOT_SAME = 6606;
	RET_TAROT_BOOK_STORY_NOT_UNLOCK = 6607;
	RET_TAROT_BOOK_STORY_ALREADY_FINISH = 6608;
	RET_TAROT_BOOK_INTERACTION_ALREADY_FINISH = 6609;
	RET_CHIMERA_CHIMERA_NOT_UNLOCK = 6621;
	RET_CHIMERA_CHIMERA_DUPLICATED = 6622;
	RET_CHIMERA_CHIMERA_TYPE_ERROR = 6623;
	RET_CHIMERA_WORK_MISMATCH_ROUND = 6624;
	RET_CHIMERA_WORK_ROUND_OPTION_NOT_MEET = 6625;
	RET_CHIMERA_ENDLESS_NOT_UNLOCK = 6626;
	RET_CHIMERA_IN_ENDLESS = 6627;
	RET_CHIMERA_NOT_IN_ENDLESS = 6628;
	RET_CHIMERA_CHIMERA_FALL_IN_ENDLESS = 6629;
	RET_PLANET_FES_AVATAR_NOT_EXIST = 6641;
	RET_PLANET_FES_LAND_NOT_EXIST = 6642;
	RET_PLANET_FES_ITEM_NOT_ENOUGH = 6643;
	RET_PLANET_FES_LAND_ALREADY_UNLOCK = 6644;
	RET_PLANET_FES_WORK_AVATAR_REPEAT = 6645;
	RET_PLANET_FES_WORK_AVATAR_TYPE_NOT_MATCH = 6646;
	RET_PLANET_FES_ACTIVITY_NOT_OPEN = 6647;
	RET_PLANET_FES_SKILLTREE_PHASE_NOT_UNLOCK = 6648;
	RET_PLANET_FES_SKILL_NOT_UNLOCK = 6649;
	RET_PLANET_FES_CONFIG_ERROR = 6650;
	RET_PLANET_FES_NOT_IN_BUSINESS_DAY = 6651;
	RET_PLANET_FES_EVENT_LOCKED = 6652;
	RET_PLANET_FES_EVENT_FINISHED = 6653;
	RET_PLANET_FES_EVENT_IN_CD = 6654;
	RET_PLANET_FES_EVENT_ALREADY_IN_STATE = 6655;
	RET_PLANET_FES_EVENT_NO_WORK_AVATAR = 6656;
	RET_PLANET_FES_EVENT_PROCESSING_CANNOT_DISAPPEAR = 6657;
	RET_PLANET_FES_EVENT_OPTION_PHASE_WRONG = 6658;
	RET_PLANET_FES_FUNCTION_NOT_UNLOCK = 6659;
	RET_PLANET_FES_REWARD_ALREADY_TAKEN = 6660;
	RET_PLANET_FES_EVENT_GAME_NOT_ACTIVE = 6661;
	RET_PLANET_FES_REGION_PROGRESS_NOT_ENOUGH = 6662;
	RET_PLANET_FES_FRIEND_ITEM_NOT_ENOUGH = 6663;
	RET_PLANET_FES_PIECE_PERMISSION_BAN = 6664;
	RET_PLANET_FES_PIECE_OFFER_NOT_EXIST = 6665;
	RET_PLANET_FES_PIECE_APPLY_IN_STACK_TOO_MUCH = 6666;
	RET_PLANET_FES_PIECE_APPLY_NOT_EXIST = 6667;
	RET_PLANET_FES_GET_FRIEND_RANKING_LIST_IN_CD = 6668;
	RET_PLANET_FES_GIVE_PIECE_OWNED_BY_TARGET = 6669;
	RET_PLANET_FES_LEVEL_MAX = 6670;
	RET_PLANET_FES_EXCLUSIVE_EVENT = 6671;
	RET_MARBLE_SEAL_ALREADY_UNLOCKED = 6701;
	RET_MARBLE_SEAL_SHOP_ITEM_NOT_ENOUGH = 6702;
	RET_MARBLE_SEAL_LOCKED = 6703;
	RET_FATE_STATUS_NOT_MATCH = 6771;
	RET_FATE_BUFF_SLOT_NOT_ENOUGH = 6772;
	RET_FATE_COIN_NOT_ENOUGH = 6773;
	RET_FATE_REIJU_REROLL_COUNT_NOT_ENOUGH = 6774;
	RET_FATE_BUFF_LEVEL_MAX = 6775;
	RET_FATE_ACTION_QUEUE_NOT_EMPTY = 6776;
	RET_PARKOUR_ACTIVITY_NOT_OPEN = 6801;
	RET_PARKOUR_LEVEL_NOT_UNLOCK = 6802;
	RET_PARKOUR_RAIL_BALL_NOT_ALLOWED = 6803;
	RET_PARKOUR_NOT_IN_LEVEL = 6804;
	RET_PARKOUR_LEVEL_NOT_MATCH = 6805;
	RET_PARKOUR_NOT_PLAYED_ALL_NON_STORY_LEVEL = 6806;
	RET_FTC_LIMIT_NAME_CHANGE = 6830;
	RET_ELF_RESTAURANT_CONFIG_ERROR = 6841;
	RET_ELF_RESTAURANT_FIELD_ALREADY_BOUGHT = 6842;
	RET_ELF_RESTAURANT_FIELD_NOT_BOUGHT = 6843;
	RET_ELF_RESTAURANT_FIELD_CELL_INVALID = 6844;
	RET_ELF_RESTAURANT_FARM_TYPE_INVALID = 6845;
	RET_ELF_RESTAURANT_SHOP_ITEM_NOT_EXIST = 6846;
	RET_ELF_RESTAURANT_SHOP_ITEM_COUNT_LIMIT = 6847;
	RET_ELF_RESTAURANT_TRADE_ORDER_NOT_EXIST = 6848;
	RET_ELF_RESTAURANT_NO_REWARD = 6849;
	RET_ELF_RESTAURANT_NOT_INIT = 6850;
	RET_GRID_FIGHT_CONF_MISS = 6900;
}

enum CmdActivityType {
	CmdActivityTypeNone = 0;
	CmdAvatarDeliverRewardChooseAvatarScRsp = 2617;
	CmdAvatarDeliverRewardTakeRewardScRsp = 2699;
	CmdLeaveTrialActivityCsReq = 2623;
	CmdGetAvatarDeliverRewardActivityDataScRsp = 2649;
	CmdEnterTrialActivityStageCsReq = 2603;
	CmdTakeLoginActivityRewardCsReq = 2698;
	CmdGetTrialActivityDataCsReq = 2658;
	CmdGetLoginActivityCsReq = 2610;
	CmdTakeTrialActivityRewardCsReq = 2604;
	CmdGetAvatarDeliverRewardActivityDataCsReq = 2618;
	CmdTakeTrialActivityRewardScRsp = 2686;
	CmdAvatarDeliverRewardChooseAvatarCsReq = 2696;
	CmdTakeLoginActivityRewardScRsp = 2653;
	CmdAvatarDeliverRewardTakeRewardCsReq = 2622;
	CmdGetLoginActivityScRsp = 2605;
	CmdGetActivityScheduleConfigScRsp = 2602;
	CmdTrialActivityDataChangeScNotify = 2683;
	CmdSubmitMaterialSubmitActivityMaterialScRsp = 2678;
	CmdGetMaterialSubmitActivityDataScRsp = 2694;
	CmdLeaveTrialActivityScRsp = 2614;
	CmdTakeMaterialSubmitActivityRewardScRsp = 2690;
	CmdCurTrialActivityScNotify = 2695;
	CmdSubmitMaterialSubmitActivityMaterialCsReq = 2636;
	CmdEnterTrialActivityStageScRsp = 2657;
	CmdStartTrialActivityCsReq = 2612;
	CmdTakeMaterialSubmitActivityRewardCsReq = 2674;
	CmdStartTrialActivityScRsp = 2664;
	CmdGetActivityScheduleConfigCsReq = 2679;
	CmdGetTrialActivityDataScRsp = 2682;
	CmdGetMaterialSubmitActivityDataCsReq = 2672;
}

enum TrialActivityStatus {
	TRIAL_ACTIVITY_STATUS_NONE = 0;
	TRIAL_ACTIVITY_STATUS_FINISH = 1;
}

message LoginActivityData {
	uint32 id = 9;
	uint32 panel_id = 7;
	uint32 login_days = 4;
	repeated uint32 JLHOGGDHMHG = 10;
}
message GetLoginActivityCsReq {
}
message GetLoginActivityScRsp {
	repeated LoginActivityData login_activity_list = 12;
	uint32 retcode = 14;
}
message TakeLoginActivityRewardCsReq {
	uint32 take_days = 14;
	uint32 id = 6;
}
message TakeLoginActivityRewardScRsp {
	uint32 panel_id = 11;
	uint32 take_days = 12;
	uint32 id = 1;
	ItemList reward = 5;
	uint32 retcode = 10;
}

message ActivityScheduleData {
	uint32 activity_id = 1;
	int64 end_time = 6;
	uint32 panel_id = 8;
	int64 begin_time = 9;
}
message GetActivityScheduleConfigCsReq {
}
message GetActivityScheduleConfigScRsp {
	repeated ActivityScheduleData schedule_data = 13;
	uint32 retcode = 12;
}

message TrialActivityInfo {
	uint32 stage_id = 6;
	bool taken_reward = 1;
}
message GetTrialActivityDataCsReq {
}
message GetTrialActivityDataScRsp {
	repeated TrialActivityInfo trial_activity_info_list = 9;
	uint32 activity_stage_id = 6;
	uint32 retcode = 10;
}
message TrialActivityDataChangeScNotify {
	TrialActivityInfo trial_activity_info = 2;
}
message EnterTrialActivityStageCsReq {
	uint32 stage_id = 10;
}
message EnterTrialActivityStageScRsp {
	uint32 retcode = 9;
	SceneBattleInfo battle_info = 15;
}
message TakeTrialActivityRewardCsReq {
	uint32 stage_id = 2;
}
message TakeTrialActivityRewardScRsp {
	uint32 retcode = 4;
	uint32 stage_id = 7;
	ItemList reward = 14;
}
message StartTrialActivityCsReq {
	uint32 stage_id = 11;
}
message StartTrialActivityScRsp {
	uint32 retcode = 8;
	uint32 stage_id = 11;
}
message LeaveTrialActivityCsReq {
	uint32 stage_id = 7;
}
message LeaveTrialActivityScRsp {
	uint32 retcode = 4;
	uint32 stage_id = 5;
}
message CurTrialActivityScNotify {
	uint32 activity_stage_id = 4;
	TrialActivityStatus status = 12;
}

message BCEKBNMNHOO {
	uint32 PEHOFBBDNIC = 6;
	bool is_taken_reward = 9;
	bool CBNFFEMDBKF = 4;
	uint32 panel_id = 5;
}
message GetMaterialSubmitActivityDataCsReq {
}
message GetMaterialSubmitActivityDataScRsp {
	uint32 retcode = 3;
	repeated BCEKBNMNHOO NBLHGEHLODN = 8;
}
message SubmitMaterialSubmitActivityMaterialCsReq {
	uint32 PEHOFBBDNIC = 12;
}
message SubmitMaterialSubmitActivityMaterialScRsp {
	uint32 retcode = 3;
	BCEKBNMNHOO BLAAOIAEIAH = 6;
}
message TakeMaterialSubmitActivityRewardCsReq {
	uint32 PEHOFBBDNIC = 14;
}
message TakeMaterialSubmitActivityRewardScRsp {
	uint32 PEHOFBBDNIC = 1;
	uint32 retcode = 8;
	ItemList reward = 11;
}
message GetAvatarDeliverRewardActivityDataCsReq {
}
message GetAvatarDeliverRewardActivityDataScRsp {
	uint32 retcode = 15;
	bool is_taken_reward = 9;
	uint32 avatar_id = 11;
}
message AvatarDeliverRewardChooseAvatarCsReq {
	uint32 avatar_id = 5;
}
message AvatarDeliverRewardChooseAvatarScRsp {
	uint32 avatar_id = 11;
	uint32 retcode = 12;
}
message AvatarDeliverRewardTakeRewardCsReq {
}
message AvatarDeliverRewardTakeRewardScRsp {
	ItemList reward = 9;
	uint32 retcode = 2;
}

enum CmdAdventureType {
	CmdAdventureTypeNone = 0;
	CmdQuickStartCocoonStageCsReq = 1379;
	CmdEnterAdventureCsReq = 1310;
	CmdEnterAdventureScRsp = 1305;
	CmdFarmElementSweepCsReq = 1307;
	CmdQuickStartFarmElementCsReq = 1397;
	CmdGetFarmStageGachaInfoCsReq = 1398;
	CmdQuickStartCocoonStageScRsp = 1302;
	CmdFarmElementSweepScRsp = 1339;
	CmdQuickStartFarmElementScRsp = 1306;
	CmdGetFarmStageGachaInfoScRsp = 1353;
	CmdCocoonSweepCsReq = 1341;
	CmdCocoonSweepScRsp = 1355;
}
message EnterAdventureCsReq {
	uint32 map_id = 6;
}
message EnterAdventureScRsp {
	uint32 retcode = 6;
	SceneInfo scene = 14;
}

message FarmStageGachaInfo {
	int64 end_time = 5;
	uint32 gacha_id = 8;
	int64 begin_time = 2;
}
message GetFarmStageGachaInfoCsReq {
	repeated uint32 farm_stage_gacha_id_list = 7;
}
message GetFarmStageGachaInfoScRsp {
	uint32 retcode = 10;
	repeated FarmStageGachaInfo farm_stage_gacha_info_list = 8;
}
message QuickStartCocoonStageCsReq {
	uint32 wave = 8;
	uint32 world_level = 10;
	uint32 cocoon_id = 11;
}
message QuickStartCocoonStageScRsp {
	uint32 retcode = 5;
	uint32 wave = 11;
	SceneBattleInfo battle_info = 13;
	uint32 cocoon_id = 6;
}
message QuickStartFarmElementCsReq {
	uint32 world_level = 2;
	uint32 JDANOKNHNHL = 7;
}
message QuickStartFarmElementScRsp {
	uint32 world_level = 4;
	uint32 JDANOKNHNHL = 15;
	uint32 retcode = 13;
	SceneBattleInfo battle_info = 10;
}
message CocoonSweepCsReq {
	uint32 world_level = 1;
	uint32 cocoon_id = 2;
}
message CocoonSweepScRsp {
	uint32 cocoon_id = 11;
	uint32 retcode = 6;
	ItemList multiple_drop_data = 9;
	ItemList drop_data = 2;
}
message FarmElementSweepCsReq {
	uint32 world_level = 13;
	uint32 JDANOKNHNHL = 14;
}
message FarmElementSweepScRsp {
	uint32 JDANOKNHNHL = 2;
	uint32 retcode = 7;
	ItemList multiple_drop_data = 4;
}

enum CmdAetherDivideType {
	CmdAetherDivideTypeNone = 0;
	CmdGetAetherDivideInfoCsReq = 4843;
	CmdEquipAetherDividePassiveSkillScRsp = 4805;
	CmdSwitchAetherDivideLineUpSlotScRsp = 4848;
	CmdSetAetherDivideLineUpScRsp = 4832;
	CmdAetherDivideFinishChallengeScNotify = 4815;
	CmdStartAetherDivideStageBattleCsReq = 4820;
	CmdClearAetherDividePassiveSkillScRsp = 4850;
	CmdStartAetherDivideChallengeBattleScRsp = 4827;
	CmdAetherDivideRefreshEndlessScNotify = 4836;
	CmdSetAetherDivideLineUpCsReq = 4813;
	CmdSwitchAetherDivideLineUpSlotCsReq = 4837;
	CmdGetAetherDivideInfoScRsp = 4818;
	CmdAetherDivideLineupScNotify = 4824;
	CmdGetAetherDivideChallengeInfoScRsp = 4803;
	CmdAetherDivideRefreshEndlessCsReq = 4826;
	CmdAetherDivideSpiritInfoScNotify = 4812;
	CmdAetherDivideRefreshEndlessScRsp = 4811;
	CmdLeaveAetherDivideSceneScRsp = 4830;
	CmdEnterAetherDivideSceneScRsp = 4821;
	CmdStartAetherDivideSceneBattleCsReq = 4802;
	CmdClearAetherDividePassiveSkillCsReq = 4806;
	CmdAetherDivideSkillItemScNotify = 4849;
	CmdGetAetherDivideChallengeInfoCsReq = 4808;
	CmdAetherDivideTakeChallengeRewardScRsp = 4838;
	CmdStartAetherDivideChallengeBattleCsReq = 4828;
	CmdAetherDivideTakeChallengeRewardCsReq = 4819;
	CmdStartAetherDivideStageBattleScRsp = 4809;
	CmdAetherDivideSpiritExpUpCsReq = 4840;
	CmdEnterAetherDivideSceneCsReq = 4823;
	CmdAetherDivideTainerInfoScNotify = 4814;
	CmdAetherDivideSpiritExpUpScRsp = 4807;
	CmdEquipAetherDividePassiveSkillCsReq = 4829;
	CmdStartAetherDivideSceneBattleScRsp = 4801;
	CmdLeaveAetherDivideSceneCsReq = 4846;
}
message EnterAetherDivideSceneCsReq {
	uint32 BDKNGDOCPGP = 14;
}
message EnterAetherDivideSceneScRsp {
	uint32 retcode = 9;
	uint32 BDKNGDOCPGP = 15;
}
message LeaveAetherDivideSceneCsReq {
}
message LeaveAetherDivideSceneScRsp {
	uint32 retcode = 1;
}
message StartAetherDivideSceneBattleCsReq {
	repeated uint32 assist_monster_entity_id_list = 9;
	uint32 cast_entity_id = 12;
	repeated AssistMonsterEntityInfo assist_monster_entity_info = 10;
	uint32 skill_index = 8;
	uint32 attacked_by_entity_id = 14;
}
message StartAetherDivideSceneBattleScRsp {
	uint32 retcode = 9;
	uint32 cast_entity_id = 4;
	AetherDivideBattleInfo battle_info = 8;
}
message StartAetherDivideChallengeBattleCsReq {
	uint32 challenge_id = 11;
	uint32 lineup_index = 3;
}
message StartAetherDivideChallengeBattleScRsp {
	AetherDivideBattleInfo battle_info = 10;
	uint32 retcode = 13;
}

message PassiveSkillItem {
	uint32 item_id = 14;
	uint32 slot = 4;
}

message AetherDivideSpiritInfo {
	uint32 aether_avatar_id = 3;
	uint32 JDHCHABCLCC = 10;
	SpBarInfo sp_bar = 4;
	repeated PassiveSkillItem passive_skill = 5;
	uint32 exp = 1;
	uint32 promotion = 7;
}

message AetherDivideLineupInfo {
	uint32 slot = 2;
	repeated uint32 aether_avatar_list = 11;
}

message AetherSkillInfo {
	uint32 num = 3;
	uint32 skill_dress_avatar_id = 15;
	uint32 item_id = 2;
}
message GetAetherDivideInfoCsReq {
}
message GetAetherDivideInfoScRsp {
	uint32 EGEMNDNEDIP = 3;
	uint32 PFLJGGDAOFM = 15;
	uint32 PHLKDNGHOOA = 6;
	repeated AetherDivideLineupInfo lineup_list = 10;
	uint32 IBCIPIIDCOL = 5;
	uint32 retcode = 4;
	repeated AetherSkillInfo skill_list = 8;
	repeated AetherDivideSpiritInfo NLFIHKICDDO = 2;
	uint32 JDHLMHJBOJM = 12;
}
message SetAetherDivideLineUpCsReq {
	AetherDivideLineupInfo lineup = 15;
}
message SetAetherDivideLineUpScRsp {
	AetherDivideLineupInfo lineup = 13;
	uint32 retcode = 14;
}
message EquipAetherDividePassiveSkillCsReq {
	uint32 aether_avatar_id = 13;
	uint32 slot = 6;
	uint32 item_id = 5;
}
message EquipAetherDividePassiveSkillScRsp {
	uint32 retcode = 5;
	AetherDivideSpiritInfo aether_info = 12;
	AetherSkillInfo aether_skill_info = 8;
}
message ClearAetherDividePassiveSkillCsReq {
	uint32 slot = 7;
	uint32 aether_avatar_id = 8;
}
message ClearAetherDividePassiveSkillScRsp {
	AetherDivideSpiritInfo aether_info = 5;
	AetherSkillInfo aether_skill_info = 15;
	uint32 retcode = 4;
}
message AetherDivideSpiritExpUpCsReq {
	uint32 JDHLMHJBOJM = 5;
	uint32 KBMLAJOAANE = 11;
	uint32 aether_avatar_id = 6;
}
message AetherDivideSpiritExpUpScRsp {
	AetherDivideSpiritInfo aether_info = 13;
	uint32 JDHLMHJBOJM = 12;
	uint32 retcode = 6;
}
message SwitchAetherDivideLineUpSlotCsReq {
	uint32 lineup_index = 8;
}
message SwitchAetherDivideLineUpSlotScRsp {
	uint32 retcode = 5;
	uint32 lineup_index = 2;
}
message StartAetherDivideStageBattleCsReq {
	uint32 event_id = 15;
}
message StartAetherDivideStageBattleScRsp {
	AetherDivideBattleInfo battle_info = 12;
	uint32 retcode = 1;
}
message AetherDivideLineupScNotify {
	AetherDivideLineupInfo lineup = 6;
}
message AetherDivideSpiritInfoScNotify {
	AetherDivideSpiritInfo aether_info = 8;
	repeated AetherDivideSpiritInfo MGEGIMBBAJB = 7;
	uint32 JDHLMHJBOJM = 3;
}
message GetAetherDivideChallengeInfoCsReq {
}
message GetAetherDivideChallengeInfoScRsp {
	repeated uint32 GKHJKFCCCGP = 2;
	uint32 PCNNMJBJIOC = 14;
	uint32 retcode = 5;
	repeated uint32 BFDIPGBLMMO = 13;
}
message AetherDivideFinishChallengeScNotify {
	uint32 challenge_id = 9;
}
message AetherDivideTainerInfoScNotify {
	uint32 EGEMNDNEDIP = 12;
}
message AetherDivideSkillItemScNotify {
	uint32 num = 13;
	uint32 item_id = 10;
}
message AetherDivideRefreshEndlessCsReq {
}
message AetherDivideRefreshEndlessScRsp {
	uint32 IBCIPIIDCOL = 2;
	uint32 retcode = 4;
}
message AetherDivideRefreshEndlessScNotify {
	uint32 IBCIPIIDCOL = 9;
}
message AetherDivideTakeChallengeRewardCsReq {
	uint32 challenge_id = 14;
}
message AetherDivideTakeChallengeRewardScRsp {
	ItemList reward = 3;
	uint32 retcode = 12;
	uint32 challenge_id = 4;
}

enum CmdAlleyType {
	CmdAlleyTypeNone = 0;
	CmdRefreshAlleyOrderCsReq = 4772;
	CmdAlleyFundsScNotify = 4754;
	CmdLogisticsGameCsReq = 4798;
	CmdStartAlleyEventScRsp = 4706;
	CmdLogisticsInfoScNotify = 4792;
	CmdLogisticsGameScRsp = 4753;
	CmdActivityRaidPlacingGameScRsp = 4728;
	CmdGetAlleyInfoCsReq = 4710;
	CmdAlleyGuaranteedFundsCsReq = 4751;
	CmdStartAlleyEventCsReq = 4797;
	CmdAlleyEventChangeNotify = 4741;
	CmdAlleyShipUnlockScNotify = 4709;
	CmdLogisticsDetonateStarSkiffScRsp = 4715;
	CmdAlleyTakeEventRewardScRsp = 4737;
	CmdSaveLogisticsScRsp = 4769;
	CmdGetAlleyInfoScRsp = 4705;
	CmdPrestigeLevelUpCsReq = 4774;
	CmdGetSaveLogisticsMapCsReq = 4773;
	CmdGetSaveLogisticsMapScRsp = 4742;
	CmdAlleyShopLevelScNotify = 4762;
	CmdLogisticsScoreRewardSyncInfoScNotify = 4760;
	CmdAlleyShipmentEventEffectsScNotify = 4724;
	CmdAlleyTakeEventRewardCsReq = 4735;
	CmdAlleyGuaranteedFundsScRsp = 4725;
	CmdAlleyPlacingGameCsReq = 4716;
	CmdRefreshAlleyOrderScRsp = 4794;
	CmdActivityRaidPlacingGameCsReq = 4766;
	CmdPrestigeLevelUpScRsp = 4790;
	CmdLogisticsDetonateStarSkiffCsReq = 4788;
	CmdAlleyEventEffectNotify = 4755;
	CmdTakePrestigeRewardScRsp = 4739;
	CmdAlleyPlacingGameScRsp = 4726;
	CmdSaveLogisticsCsReq = 4720;
	CmdAlleyShipUsedCountScNotify = 4701;
	CmdAlleyOrderChangedScNotify = 4736;
	CmdTakePrestigeRewardCsReq = 4707;
}

enum GBPHKKMOLMF {
	LEFT = 0;
	RIGHT = 1;
	UP = 2;
	DOWN = 3;
	LEFT_UP = 4;
	LEFT_DOWN = 5;
	RIGHT_UP = 6;
	RIGHT_DOWN = 7;
}

enum AlleyEventType {
	ALLEY_EVENT_TYPE_NONE = 0;
	ALLEY_MAIN_EVENT = 1;
	ALLEY_CRITICAL_EVENT = 2;
	ALLEY_DAILY_EVENT = 3;
}

enum AlleyEventState {
	ALLEY_STATE_NONE = 0;
	ALLEY_EVENT_DOING = 1;
	ALLEY_EVENT_FINISH = 2;
	ALLEY_EVENT_REWARDED = 3;
}

message JONGAGACHHO {
}

message ADOLEOFEGOK {
	uint32 POIIAIAKILF = 14;
	uint32 map_id = 2;
}
message GetAlleyInfoCsReq {
	uint32 shop_id = 11;
	uint32 level = 12;
}

message AGADEMAJIMD {
	repeated NJAOIGGMEAL HNFOJBCJAMG = 3;
	repeated ADOLEOFEGOK IMMLPHDNMOL = 14;
	repeated LogisticsScore FMJPLHOHBAB = 9;
	repeated uint32 OMNGCIJALFM = 10;
}
message GetAlleyInfoScRsp {
	AGADEMAJIMD NJGAMCCGADC = 4;
	LAIEMCFACDK KLPNGFNMIPI = 14;
	uint32 retcode = 2;
	repeated HEHAOMIAMGL BJCMPHLPKNF = 11;
	uint32 NOPODEIMFFB = 10;
	repeated uint32 GLBOEMJJAHD = 13;
	map<uint32, uint32> NPLAKEOKEKB = 3;
	repeated uint32 GEFNDEEIKEF = 15;
	uint32 cur_fund = 12;
	repeated uint32 OEDPOPCOHGB = 8;
	uint32 level = 1;
	ECJMJJKJGOP BOKOLCPKEJM = 7;
}

message KFAIFHOPNHH {
	uint32 IFFPPGLAFNB = 3;
	uint32 BDDLDNEJFKN = 4;
}

message KGCANLJIKCP {
	repeated KFAIFHOPNHH KALFMCAGHDO = 5;
	uint32 goods_id = 14;
}

message AlleyPlacingShip {
	repeated KGCANLJIKCP goods_list = 15;
	uint32 ship_id = 13;
}
message AlleyPlacingGameCsReq {
	uint32 cost_time = 3;
	AlleyPlacingShip EJJODHJHHAM = 11;
	uint32 DHHJLCHCLAF = 13;
	uint32 FJDABPPANDC = 6;
	uint32 INDEPLOFDEC = 12;
	uint32 ENGDBIIMAFF = 15;
	uint32 BMNHHIDHODD = 4;
	uint32 HLOJKEKIPKF = 8;
	uint32 KEOKDNIKBDA = 10;
}
message AlleyPlacingGameScRsp {
	uint32 KOFICKLLJNI = 2;
	uint32 event_id = 3;
	uint32 PGLGBLKKIDA = 11;
	uint32 KFBOKLHDJDA = 13;
	uint32 ELBBANDDJCI = 6;
	uint32 ILEGFKGCMOM = 9;
	uint32 KHIBBGPHDMB = 12;
	uint32 retcode = 8;
}
message ActivityRaidPlacingGameCsReq {
	AlleyPlacingShip EJJODHJHHAM = 12;
	oneof GCOIIOPKJPF {
		uint32 CJEMMDPICLJ = 1;
		uint32 FJDABPPANDC = 6;
	}
}
message ActivityRaidPlacingGameScRsp {
	uint32 retcode = 9;
	oneof GCOIIOPKJPF {
		uint32 CJEMMDPICLJ = 15;
		uint32 FJDABPPANDC = 14;
	}
}

message ECJMJJKJGOP {
	repeated uint32 FBEILDAJEDE = 8;
	uint32 CPGAJPCKCDG = 14;
	repeated uint32 JDJCNBGOGLP = 10;
	uint32 HDKDKJBDGCC = 1;
	uint32 JALHNEIDHGJ = 4;
	bool IICHHOKOPGG = 7;
}
message AlleyOrderChangedScNotify {
	ECJMJJKJGOP PPHIADNKGAF = 10;
}
message AlleyShipUnlockScNotify {
	uint32 EJDFKNMNALE = 1;
}

message LLLOMACPCGB {
	repeated uint32 DGNKGDLILLB = 9;
	repeated uint32 PPIBBKHLMJC = 8;
	uint32 CAKCCBJOHOI = 14;
	repeated uint32 CADHPHLNOCH = 4;
	uint32 LEPACDHLBIB = 12;
	uint32 BEHPABEEODH = 2;
	uint32 shop_id = 15;
}

message NJAOIGGMEAL {
	uint32 cost_time = 15;
	repeated LLLOMACPCGB HOFDBFLCGKB = 10;
	uint32 map_id = 3;
}

message LogisticsScore {
	ItemList reward = 3;
	uint32 last_level = 6;
	uint32 cur_score = 9;
	uint32 unlock_level = 15;
	uint32 map_id = 4;
	uint32 max_score = 14;
	uint32 last_max_score = 10;
}
message LogisticsGameCsReq {
	repeated NJAOIGGMEAL APMCPHFMAEG = 10;
	bool BOBLNBJMKCA = 14;
}
message LogisticsScoreRewardSyncInfoScNotify {
	repeated LogisticsScore FMJPLHOHBAB = 9;
}
message LogisticsGameScRsp {
	uint32 retcode = 8;
	bool BOBLNBJMKCA = 5;
	repeated LogisticsScore FMJPLHOHBAB = 10;
	uint32 event_id = 6;
}

message HEHAOMIAMGL {
	AlleyEventState state = 9;
	uint32 event_id = 11;
	uint32 NINGBNBMKOP = 8;
}
message StartAlleyEventCsReq {
	uint32 event_id = 14;
}
message StartAlleyEventScRsp {
	uint32 retcode = 8;
	uint32 event_id = 10;
}
message AlleyEventChangeNotify {
	HEHAOMIAMGL NFLDODIABCL = 11;
	uint32 HCNLDIBEACA = 12;
}
message AlleyEventEffectNotify {
	uint32 LFILNMFDNIG = 7;
}
message TakePrestigeRewardCsReq {
	uint32 level = 4;
}
message TakePrestigeRewardScRsp {
	ItemList reward = 11;
	uint32 retcode = 6;
	uint32 level = 9;
}
message PrestigeLevelUpCsReq {
}
message PrestigeLevelUpScRsp {
	uint32 level = 11;
	uint32 retcode = 9;
}
message AlleyFundsScNotify {
	uint32 cur_fund = 10;
}
message SaveLogisticsCsReq {
	repeated NJAOIGGMEAL APMCPHFMAEG = 1;
}
message SaveLogisticsScRsp {
	uint32 retcode = 1;
	repeated NJAOIGGMEAL APMCPHFMAEG = 6;
}
message LogisticsInfoScNotify {
	AGADEMAJIMD NJGAMCCGADC = 15;
}

message LAIEMCFACDK {
	uint32 ALGHCNAJBMM = 5;
	map<uint32, uint32> AAHAPCBILHC = 11;
	uint32 PGHCKCPKGLL = 8;
}
message AlleyShipmentEventEffectsScNotify {
	LAIEMCFACDK LGJKPJOJBLF = 4;
}
message GetSaveLogisticsMapCsReq {
}
message GetSaveLogisticsMapScRsp {
	uint32 retcode = 5;
	repeated NJAOIGGMEAL HNFOJBCJAMG = 11;
}
message AlleyShipUsedCountScNotify {
	map<uint32, uint32> NPLAKEOKEKB = 10;
}
message AlleyGuaranteedFundsCsReq {
}
message AlleyGuaranteedFundsScRsp {
	uint32 retcode = 6;
	uint32 CLIBOBEHNDM = 3;
}
message AlleyTakeEventRewardCsReq {
	uint32 event_id = 11;
}
message AlleyTakeEventRewardScRsp {
	uint32 retcode = 2;
	ItemList reward = 8;
}
message LogisticsDetonateStarSkiffCsReq {
}
message LogisticsDetonateStarSkiffScRsp {
	uint32 retcode = 12;
}

enum CmdArchiveType {
	CmdArchiveTypeNone = 0;
	CmdGetArchiveDataCsReq = 2310;
	CmdGetUpdatedArchiveDataScRsp = 2353;
	CmdGetUpdatedArchiveDataCsReq = 2398;
	CmdGetArchiveDataScRsp = 2305;
}

message RelicList {
	uint32 type = 15;
	uint32 set_id = 6;
}

message MonsterList {
	uint32 monster_id = 6;
	uint32 num = 10;
}

message ArchiveData {
	repeated uint32 archive_equipment_id_list = 12;
	repeated RelicList relic_list = 8;
	repeated uint32 archive_avatar_id_list = 11;
	repeated uint32 archive_missing_equipment_id_list = 6;
	repeated MonsterList kill_monster_list = 4;
}
message GetArchiveDataCsReq {
}
message GetArchiveDataScRsp {
	ArchiveData archive_data = 4;
	uint32 retcode = 9;
}
message GetUpdatedArchiveDataCsReq {
}
message GetUpdatedArchiveDataScRsp {
	ArchiveData archive_data = 6;
	uint32 retcode = 10;
}

enum CmdAvatarType {
	CmdAvatarTypeNone = 0;
	CmdDressAvatarScRsp = 355;
	CmdDressRelicAvatarScRsp = 372;
	CmdGetAvatarDataScRsp = 305;
	CmdTakeOffRelicCsReq = 394;
	CmdGetPreAvatarActivityListCsReq = 360;
	CmdTakePromotionRewardScRsp = 374;
	CmdTakeOffRelicScRsp = 336;
	CmdGetPreAvatarGrowthInfoScRsp = 325;
	CmdSetGrowthTargetAvatarCsReq = 373;
	CmdMarkAvatarCsReq = 369;
	CmdAddAvatarScNotify = 316;
	CmdSetAvatarEnhancedIdScRsp = 315;
	CmdDressRelicAvatarCsReq = 367;
	CmdAddMultiPathAvatarScNotify = 324;
	CmdDressAvatarSkinCsReq = 390;
	CmdGetPreAvatarActivityListScRsp = 366;
	CmdUnlockSkilltreeCsReq = 379;
	CmdGetPreAvatarGrowthInfoCsReq = 351;
	CmdPromoteAvatarCsReq = 397;
	CmdAvatarExpUpCsReq = 398;
	CmdRankUpAvatarCsReq = 326;
	CmdAvatarExpUpScRsp = 353;
	CmdTakeOffAvatarSkinCsReq = 362;
	CmdGetAvatarDataCsReq = 310;
	CmdSetGrowthTargetAvatarScRsp = 342;
	CmdGrowthTargetAvatarChangedScNotify = 301;
	CmdTakePromotionRewardCsReq = 378;
	CmdTakeOffEquipmentCsReq = 307;
	CmdUnlockSkilltreeScRsp = 302;
	CmdDressAvatarSkinScRsp = 354;
	CmdTakeOffAvatarSkinScRsp = 309;
	CmdDressAvatarCsReq = 341;
	CmdMarkAvatarScRsp = 392;
	CmdSetAvatarEnhancedIdCsReq = 388;
	CmdRankUpAvatarScRsp = 363;
	CmdPromoteAvatarScRsp = 306;
	CmdUnlockAvatarSkinScNotify = 320;
	CmdTakeOffEquipmentScRsp = 339;
}

enum GrowthTartgetFuncType {
	GROWTH_TARGET_FUNCTION_TYPE_INCLUDE_ALL_SKILLTREE = 0;
}

enum AddAvatarSrcState {
	ADD_AVATAR_SRC_NONE = 0;
	ADD_AVATAR_SRC_GACHA = 1;
	ADD_AVATAR_SRC_ROGUE = 2;
	ADD_AVATAR_SRC_DELIVERY = 3;
}

enum GrowthTargetState {
	GROWTH_TARGET_AVATAR_NONE = 0;
	GROWTH_TARGET_AVATAR_PRE = 1;
	GROWTH_TARGET_AVATAR_UP = 2;
	GROWTH_TARGET_AVATAR_LOCK = 3;
	GROWTH_TARGET_AVATAR_UNLOCK = 4;
	GROWTH_TARGET_AVATAR_LOCK_AND_UP = 5;
}
message GetAvatarDataCsReq {
	repeated uint32 base_avatar_id_list = 12;
	bool is_get_all = 4;
}

message EquipRelic {
	uint32 type = 12;
	uint32 relic_unique_id = 15;
}

message Avatar {
	bool is_marked = 7;
	uint32 base_avatar_id = 2;
	uint32 rank = 12;
	uint32 dressed_skin_id = 10;
	uint64 first_met_time_stamp = 15;
	repeated EquipRelic equip_relic_list = 3;
	uint32 unk_enhanced_id = 11;
	repeated AvatarSkillTree skilltree_list = 13;
	uint32 exp = 8;
	repeated uint32 has_taken_promotion_reward_list = 4;
	uint32 level = 1;
	uint32 promotion = 5;
	uint32 equipment_unique_id = 14;
}

message MultiPathAvatarInfo {
	repeated EquipRelic equip_relic_list = 6;
	repeated AvatarSkillTree multi_path_skill_tree = 3;
	uint64 KDMCLKJLJPP = 2;
	MultiPathAvatarType avatar_id = 12;
	uint32 unk_enhanced_id = 10;
	uint32 dressed_skin_id = 11;
	uint32 path_equipment_id = 7;
	uint32 rank = 9;
}
message GetAvatarDataScRsp {
	uint32 JPNLPOPMKEJ = 8;
	uint32 retcode = 2;
	repeated KHOCCHABNMN FEFPIJJLNFG = 1;
	repeated uint32 basic_type_id_list = 13;
	map<uint32, MultiPathAvatarType> cur_avatar_path = 4;
	repeated Avatar avatar_list = 7;
	repeated GrowthTartgetFuncType PNKCFEALAMI = 9;
	bool is_get_all = 15;
	repeated MultiPathAvatarInfo multi_path_avatar_info_list = 12;
	repeated uint32 skin_list = 10;
}
message AvatarExpUpCsReq {
	uint32 base_avatar_id = 1;
	ItemCostData item_cost = 3;
}
message AvatarExpUpScRsp {
	uint32 retcode = 7;
	repeated PileItem return_item_list = 1;
}
message UnlockSkilltreeCsReq {
	repeated ItemCost item_list = 14;
	uint32 point_id = 10;
	uint32 level = 12;
}
message UnlockSkilltreeScRsp {
	uint32 point_id = 4;
	uint32 retcode = 7;
	uint32 level = 9;
}
message PromoteAvatarCsReq {
	repeated ItemCost item_list = 10;
	uint32 base_avatar_id = 15;
}
message PromoteAvatarScRsp {
	uint32 retcode = 1;
}
message DressAvatarCsReq {
	uint32 avatar_id = 14;
	uint32 equipment_unique_id = 6;
}
message DressAvatarScRsp {
	uint32 retcode = 10;
}
message TakeOffEquipmentCsReq {
	uint32 avatar_id = 11;
}
message TakeOffEquipmentScRsp {
	uint32 retcode = 9;
}
message AddAvatarScNotify {
	uint32 base_avatar_id = 3;
	AddAvatarSrcState src = 2;
	ItemList reward = 5;
	bool is_new = 9;
}
message AddMultiPathAvatarScNotify {
	bool is_new = 11;
	ItemList reward = 7;
	uint32 avatar_id = 9;
}
message RankUpAvatarCsReq {
	uint32 avatar_id = 11;
	uint32 rank = 2;
	ItemCostData cost_data = 6;
}
message RankUpAvatarScRsp {
	uint32 retcode = 15;
}

message DressRelicParam {
	uint32 relic_type = 10;
	uint32 relic_unique_id = 7;
}
message DressRelicAvatarCsReq {
	uint32 avatar_id = 6;
	repeated DressRelicParam switch_list = 13;
}
message DressRelicAvatarScRsp {
	uint32 retcode = 11;
}
message TakeOffRelicCsReq {
	repeated uint32 relic_type_list = 15;
	uint32 avatar_id = 7;
}
message TakeOffRelicScRsp {
	uint32 retcode = 2;
}
message TakePromotionRewardCsReq {
	uint32 base_avatar_id = 8;
	uint32 promotion = 6;
}
message TakePromotionRewardScRsp {
	uint32 retcode = 14;
	ItemList reward_list = 13;
}
message DressAvatarSkinCsReq {
	uint32 avatar_id = 4;
	uint32 skin_id = 2;
}
message DressAvatarSkinScRsp {
	uint32 retcode = 13;
}
message TakeOffAvatarSkinCsReq {
	uint32 avatar_id = 4;
}
message TakeOffAvatarSkinScRsp {
	uint32 retcode = 3;
}
message UnlockAvatarSkinScNotify {
	uint32 skin_id = 8;
}
message MarkAvatarCsReq {
	uint32 avatar_id = 9;
	bool is_marked = 11;
}
message MarkAvatarScRsp {
	uint32 retcode = 5;
	bool is_marked = 11;
	uint32 avatar_id = 12;
}
message SetGrowthTargetAvatarCsReq {
	uint32 IDNMEKNHLPO = 13;
	uint32 avatar_id = 1;
	GrowthTargetState source = 11;
	repeated GrowthTartgetFuncType growth_target_type_list = 3;
}
message SetGrowthTargetAvatarScRsp {
	repeated GrowthTartgetFuncType growth_target_type_list = 7;
	uint32 retcode = 12;
	uint32 JPNLPOPMKEJ = 15;
	uint32 growth_avatar_id = 3;
}
message GrowthTargetAvatarChangedScNotify {
	uint32 JPNLPOPMKEJ = 10;
	repeated GrowthTartgetFuncType growth_target_type_list = 5;
}
message GetPreAvatarActivityListCsReq {
}
message GetPreAvatarActivityListScRsp {
	uint32 retcode = 12;
	repeated uint32 PHHNCJJPKIC = 6;
}

message NMIFOLJFCJH {
	uint32 AEKFJKENPHN = 13;
	string OANPNFJJFHG = 267;
	uint32 KJAEOJBJOJD = 7;
	uint32 HDNIKCBLKIL = 4;
	string EBPPBPMHDHI = 1274;
	uint32 type = 152;
	uint32 IHOKHLFHOCC = 6;
	uint32 panel_id = 1755;
	string KPJHBEILAIP = 1290;
	uint32 KIEJACMOGAN = 3;
	uint32 LKKAMLLAFAE = 10;
	uint32 FLAAGNAPDHP = 9;
	uint32 EGDDNPEONKC = 5;
	uint32 DLAPKBDDBBC = 2;
	uint32 DGGNNBCJOCC = 314;
	uint32 LIJCNGOHKHF = 11;
	uint32 DBIJFKOBKKH = 15;
	uint32 PMMCFGMPLBA = 12;
	uint32 PHIBNKMIOGP = 8;
	uint32 JJMKEADCIAG = 1;
	uint32 FOJCCKACDHH = 14;
	string MKHLDLFONKN = 697;
}
message GetPreAvatarGrowthInfoCsReq {
}
message GetPreAvatarGrowthInfoScRsp {
	uint32 retcode = 2;
	repeated NMIFOLJFCJH IJONOMEJOHM = 3;
}
message SetAvatarEnhancedIdCsReq {
	uint32 enhanced_id = 11;
	uint32 avatar_id = 7;
}
message SetAvatarEnhancedIdScRsp {
	uint32 unk_enhanced_id = 6;
	uint32 growth_avatar_id = 3;
	uint32 retcode = 5;
}

enum CmdBattleType {
	CmdBattleTypeNone = 0;
	CmdRebattleByClientCsNotify = 126;
	CmdSyncClientResVersionCsReq = 197;
	CmdServerSimulateBattleFinishScNotify = 139;
	CmdQuitBattleScRsp = 153;
	CmdGetCurBattleInfoCsReq = 179;
	CmdPVEBattleResultCsReq = 110;
	CmdBattleLogReportScRsp = 107;
	CmdGetCurBattleInfoScRsp = 102;
	CmdQuitBattleCsReq = 198;
	CmdReBattleAfterBattleLoseCsNotify = 116;
	CmdSyncClientResVersionScRsp = 106;
	CmdPVEBattleResultScRsp = 105;
	CmdBattleLogReportCsReq = 155;
	CmdQuitBattleScNotify = 141;
}
message PVEBattleResultCsReq {
	uint32 battle_id = 7;
	uint32 cost_time = 12;
	bool GJGKAGFPAGM = 14;
	map<string, uint32> HPEKEKIPJLF = 3;
	BattleEndStatus end_status = 11;
	uint32 client_res_version = 9;
	uint32 JCJFGOJFEGE = 4;
	bool is_ai_consider_ultra_skill = 2;
	bool is_auto_fight = 6;
	bytes turn_snapshot_hash = 10;
	uint32 client_version = 15;
	string debug_extra_info = 8;
	repeated BattleOp op_list = 13;
	BattleStatistics stt = 1;
	uint32 stage_id = 5;
}
message PVEBattleResultScRsp {
	string bin_version = 9;
	uint32 event_id = 3;
	ItemList multiple_drop_data = 10;
	ItemList drop_data = 6;
	repeated BattleAvatar battle_avatar_list = 14;
	uint32 retcode = 8;
	ItemList item_list_unk1 = 5;
	uint32 GGMPFNKOFKD = 7;
	uint32 stage_id = 15;
	string res_version = 1;
	ItemList item_list_unk2 = 1229;
	uint32 KLODELECMCI = 11;
	uint32 battle_id = 13;
	uint32 mismatch_turn_count = 12;
	BattleEndStatus end_status = 2;
	bool check_identical = 4;
	MBKOCMMICPG KJCHGEHDLNO = 759;
}
message QuitBattleCsReq {
	RebattleType rebattle_type = 1;
	BattleStatistics stt = 3;
}
message QuitBattleScRsp {
	uint32 retcode = 15;
}
message GetCurBattleInfoCsReq {
}
message GetCurBattleInfoScRsp {
	AetherDivideBattleInfo PBPHJBAFGBB = 8;
	SceneBattleInfo battle_info = 5;
	uint32 retcode = 9;
	uint32 IBPJKFFFLNG = 2;
	BattleEndStatus last_end_status = 14;
}
message SyncClientResVersionCsReq {
	uint32 client_res_version = 9;
}
message SyncClientResVersionScRsp {
	uint32 client_res_version = 1;
	uint32 retcode = 2;
}
message QuitBattleScNotify {
}
message BattleLogReportCsReq {
}
message BattleLogReportScRsp {
	bool is_battle_log_report = 13;
	uint32 retcode = 9;
}
message ServerSimulateBattleFinishScNotify {
}
message ReBattleAfterBattleLoseCsNotify {
	bool PMJAHILBLFL = 12;
}
message RebattleByClientCsNotify {
	RebattleType rebattle_type = 7;
	BattleStatistics stt = 5;
}

enum CmdBattleCollegeType {
	CmdBattleCollegeTypeNone = 0;
	CmdGetBattleCollegeDataScRsp = 5705;
	CmdStartBattleCollegeCsReq = 5753;
	CmdBattleCollegeDataChangeScNotify = 5798;
	CmdGetBattleCollegeDataCsReq = 5710;
	CmdStartBattleCollegeScRsp = 5779;
}
message GetBattleCollegeDataCsReq {
}
message GetBattleCollegeDataScRsp {
	uint32 retcode = 1;
	repeated uint32 finished_college_id_list = 14;
	uint32 MAMHOJMFJOF = 9;
}
message BattleCollegeDataChangeScNotify {
	uint32 MAMHOJMFJOF = 12;
	repeated uint32 finished_college_id_list = 1;
	ItemList reward = 3;
}
message StartBattleCollegeCsReq {
	uint32 id = 13;
}
message StartBattleCollegeScRsp {
	SceneBattleInfo battle_info = 8;
	uint32 id = 14;
	uint32 retcode = 3;
}

enum CmdBattlePassType {
	CmdBattlePassTypeNone = 0;
	CmdTakeAllRewardScRsp = 3041;
	CmdBattlePassInfoNotify = 3010;
	CmdTakeBpRewardCsReq = 3053;
	CmdTakeAllRewardCsReq = 3006;
	CmdBuyBpLevelScRsp = 3097;
	CmdTakeBpRewardScRsp = 3079;
	CmdBuyBpLevelCsReq = 3002;
}

enum BpTierType {
	BP_TIER_TYPE_NONE = 0;
	BP_TIER_TYPE_FREE = 1;
	BP_TIER_TYPE_PREMIUM_1 = 2;
	BP_TIER_TYPE_PREMIUM_2 = 3;
}

enum BpRewardType {
	BP_REWARAD_TYPE_NONE = 0;
	BP_REWARAD_TYPE_FREE = 1;
	BP_REWARAD_TYPE_PREMIUM_1 = 2;
	BP_REWARAD_TYPE_PREMIUM_2 = 3;
	BP_REWARAD_TYPE_PREMIUM_OPTIONAL = 4;
}
message BattlePassInfoNotify {
	uint64 CBJKLLEOHDC = 10;
	uint64 FDKKIKGANCK = 8;
	uint64 INBOCKJGLBO = 12;
	uint64 HKEOAACCBPL = 13;
	uint64 LJOEKEFKPKO = 2;
	uint64 EKGOPLDJOII = 14;
	uint64 NKAOKNMHOLH = 7;
	BpTierType JLLHALOHJII = 6;
	uint32 exp = 4;
	uint64 CPHIIOCKHPI = 1;
	uint32 LJFLFLIMKAD = 3;
	uint32 EDBMNMDJBKO = 9;
	uint32 level = 11;
}
message TakeBpRewardCsReq {
	BpRewardType type = 12;
	uint32 optional_reward_id = 6;
	uint32 level = 9;
}
message TakeBpRewardScRsp {
	ItemList reward = 7;
	uint32 retcode = 11;
}
message BuyBpLevelCsReq {
	uint32 LDNJEACFBJE = 4;
}
message BuyBpLevelScRsp {
	uint32 retcode = 7;
}

message OptionalReward {
	uint32 optional_reward_id = 10;
	uint32 level = 4;
}
message TakeAllRewardCsReq {
	repeated OptionalReward MODOOFJOIAO = 15;
}
message TakeAllRewardScRsp {
	uint32 retcode = 13;
	ItemList reward = 12;
}

enum CmdBenefitActivityType {
	CmdBenefitActivityTypeNone = 0;
	CmdGetBenefitActivityInfoCsReq = 4873;
	CmdJoinBenefitActivityCsReq = 4852;
	CmdTakeBenefitActivityRewardScRsp = 4880;
	CmdTakeBenefitActivityRewardCsReq = 4896;
	CmdJoinBenefitActivityScRsp = 4851;
	CmdGetBenefitActivityInfoScRsp = 4871;
}
message GetBenefitActivityInfoCsReq {
}

message ECMKALKCJAC {
	string MPBPONGIGID = 9;
	string CMAMEDOLLJL = 7;
	uint32 head_icon = 15;
}

message BenefitRewardItem {
	uint32 level = 4;
	ItemList item_list = 14;
}

message BenefitItemConfig {
	repeated BenefitRewardItem rogue_score_reward_info = 6;
	uint32 reveal_num_limit = 5;
	repeated ECMKALKCJAC lucky_koi_list = 15;
	uint64 end_time = 2;
	uint64 begin_time = 12;
	uint64 reveal_time = 9;
}

message BenefitData {
	uint32 daily_index = 3;
	uint32 status = 15;
	BenefitItemConfig config = 5;
	uint32 level = 12;
}
message GetBenefitActivityInfoScRsp {
	uint32 retcode = 7;
	repeated BenefitData benefit_data_list = 10;
	bool is_open = 6;
}

message SwitchItem {
	bool EINFBGKENDH = 4;
	uint32 daily_index = 8;
}
message TakeBenefitActivityRewardCsReq {
	repeated SwitchItem switch_list = 13;
	bool BFBPCBNPFPH = 10;
}

message RewardSwitchItem {
	bool EINFBGKENDH = 5;
	uint32 daily_index = 6;
	ItemList item_list = 12;
}
message TakeBenefitActivityRewardScRsp {
	ItemList CKEKCCONJGB = 1;
	repeated RewardSwitchItem switch_list = 6;
	uint32 retcode = 2;
}
message JoinBenefitActivityCsReq {
	uint32 daily_index = 2;
}
message JoinBenefitActivityScRsp {
	uint32 retcode = 4;
	uint32 daily_index = 10;
}

enum CmdBoxingClubType {
	CmdBoxingClubTypeNone = 0;
	CmdSetBoxingClubResonanceLineupScRsp = 4226;
	CmdChooseBoxingClubStageOptionalBuffScRsp = 4267;
	CmdGetBoxingClubInfoScRsp = 4205;
	CmdChooseBoxingClubStageOptionalBuffCsReq = 4263;
	CmdStartBoxingClubBattleCsReq = 4279;
	CmdBoxingClubChallengeUpdateScNotify = 4255;
	CmdStartBoxingClubBattleScRsp = 4202;
	CmdGiveUpBoxingClubChallengeScRsp = 4206;
	CmdGiveUpBoxingClubChallengeCsReq = 4297;
	CmdBoxingClubRewardScNotify = 4241;
	CmdMatchBoxingClubOpponentScRsp = 4253;
	CmdMatchBoxingClubOpponentCsReq = 4298;
	CmdGetBoxingClubInfoCsReq = 4210;
	CmdChooseBoxingClubResonanceScRsp = 4239;
	CmdSetBoxingClubResonanceLineupCsReq = 4216;
	CmdChooseBoxingClubResonanceCsReq = 4207;
}

message IJKJJDHLKLB {
	AvatarType avatar_type = 14;
	uint32 avatar_id = 12;
}

message FCIHIJLOMGA {
	uint32 NAALCBMBPGC = 2;
	uint32 LLFOFPNDAFG = 7;
	repeated uint32 avatar_list = 4;
	bool APLKNJEGBKF = 14;
	uint32 CPGOIPICPJF = 12;
	uint32 challenge_id = 15;
	repeated uint32 HLIBIJFHHPG = 3;
	uint32 HNPEAPPMGAA = 11;
	repeated IJKJJDHLKLB MDLACHDKMPH = 6;
	uint32 HJMGLEMJHKG = 13;
}
message GetBoxingClubInfoCsReq {
}
message GetBoxingClubInfoScRsp {
	uint32 retcode = 9;
	repeated FCIHIJLOMGA challenge_list = 15;
}

message GNEIBBPOAAB {
	AvatarType avatar_type = 13;
	uint32 avatar_id = 14;
}
message MatchBoxingClubOpponentCsReq {
	repeated GNEIBBPOAAB MDLACHDKMPH = 1;
	repeated uint32 avatar_list = 4;
	uint32 challenge_id = 3;
}
message MatchBoxingClubOpponentScRsp {
	FCIHIJLOMGA challenge = 15;
	uint32 retcode = 11;
}
message ChooseBoxingClubResonanceCsReq {
	uint32 challenge_id = 14;
	uint32 LLFOFPNDAFG = 13;
}
message ChooseBoxingClubResonanceScRsp {
	uint32 retcode = 6;
	FCIHIJLOMGA challenge = 10;
}
message SetBoxingClubResonanceLineupCsReq {
	uint32 challenge_id = 2;
	repeated GNEIBBPOAAB MDLACHDKMPH = 11;
}
message SetBoxingClubResonanceLineupScRsp {
	uint32 retcode = 1;
	FCIHIJLOMGA challenge = 8;
}
message ChooseBoxingClubStageOptionalBuffCsReq {
	uint32 FMGMAIEGOFP = 13;
	uint32 challenge_id = 9;
}
message ChooseBoxingClubStageOptionalBuffScRsp {
	uint32 retcode = 12;
	FCIHIJLOMGA challenge = 6;
}
message StartBoxingClubBattleCsReq {
	uint32 challenge_id = 2;
}
message StartBoxingClubBattleScRsp {
	uint32 retcode = 3;
	uint32 challenge_id = 8;
	SceneBattleInfo battle_info = 13;
}
message GiveUpBoxingClubChallengeCsReq {
	uint32 challenge_id = 3;
	bool PCPDFJHDJCC = 11;
}
message GiveUpBoxingClubChallengeScRsp {
	uint32 retcode = 2;
	FCIHIJLOMGA challenge = 1;
}
message BoxingClubRewardScNotify {
	uint32 challenge_id = 6;
	ItemList reward = 2;
	uint32 NAALCBMBPGC = 13;
	bool is_win = 8;
}
message BoxingClubChallengeUpdateScNotify {
	FCIHIJLOMGA challenge = 10;
}

enum CmdChallengeType {
	CmdChallengeTypeNone = 0;
	CmdGetCurChallengeCsReq = 1755;
	CmdLeaveChallengeCsReq = 1779;
	CmdEnterChallengeNextPhaseCsReq = 1762;
	CmdGetChallengeCsReq = 1710;
	CmdStartChallengeCsReq = 1798;
	CmdTakeChallengeRewardScRsp = 1767;
	CmdStartChallengeScRsp = 1753;
	CmdRestartChallengePhaseScRsp = 1754;
	CmdGetChallengeGroupStatisticsCsReq = 1772;
	CmdChallengeBossPhaseSettleNotify = 1720;
	CmdChallengeLineupNotify = 1739;
	CmdGetChallengeScRsp = 1705;
	CmdStartPartialChallengeCsReq = 1736;
	CmdChallengeSettleNotify = 1797;
	CmdGetChallengeGroupStatisticsScRsp = 1794;
	CmdRestartChallengePhaseCsReq = 1790;
	CmdGetCurChallengeScRsp = 1707;
	CmdStartPartialChallengeScRsp = 1778;
	CmdTakeChallengeRewardCsReq = 1763;
	CmdEnterChallengeNextPhaseScRsp = 1709;
	CmdLeaveChallengeScRsp = 1702;
}

enum ChallengeStatus {
	CHALLENGE_UNKNOWN = 0;
	CHALLENGE_DOING = 1;
	CHALLENGE_FINISH = 2;
	CHALLENGE_FAILED = 3;
}

message Challenge {
	uint32 score_id = 9;
	uint32 challenge_id = 14;
	uint32 star = 4;
	ChallengeStageInfo stage_info = 15;
	uint32 taken_reward = 5;
	uint32 score_two = 7;
	uint32 record_id = 3;
	bool KFDAICILNMB = 11;
}

message ChallengeGroup {
	uint64 taken_stars_count_reward = 12;
	uint32 group_id = 11;
}

message ChallengeHistoryMaxLevel {
	uint32 level = 13;
	uint32 reward_display_type = 7;
}
message GetChallengeCsReq {
}
message GetChallengeScRsp {
	repeated ChallengeHistoryMaxLevel max_level_list = 10;
	uint32 retcode = 1;
	repeated Challenge challenge_list = 8;
	repeated ChallengeGroup challenge_group_list = 6;
	uint32 LPLJMKPBLIF = 7;
}

message ChallengeStoryBuffInfo {
	uint32 buff_two = 3;
	uint32 buff_one = 15;
}

message ChallengeBossBuffInfo {
	uint32 buff_one = 1;
	uint32 buff_two = 7;
}

message ChallengeBuffInfo {
	oneof KFELKJLDKEH {
		ChallengeStoryBuffInfo story_info = 3;
		ChallengeBossBuffInfo boss_info = 15;
	}
}
message StartChallengeCsReq {
	ChallengeBuffInfo stage_info = 13;
	uint32 challenge_id = 2;
	repeated uint32 second_lineup = 7;
	repeated uint32 first_lineup = 12;
}
message StartChallengeScRsp {
	ChallengeStageInfo stage_info = 6;
	repeated LineupInfo lineup_list = 15;
	SceneInfo scene = 12;
	uint32 retcode = 9;
	CurChallenge cur_challenge = 1;
}
message StartPartialChallengeCsReq {
	uint32 challenge_id = 4;
	uint32 buff_id = 1;
	bool is_first_half = 2;
}
message StartPartialChallengeScRsp {
	CurChallenge cur_challenge = 9;
	SceneInfo scene = 12;
	LineupInfo lineup = 13;
	uint32 retcode = 14;
}
message LeaveChallengeCsReq {
}
message LeaveChallengeScRsp {
	uint32 retcode = 13;
}
message ChallengeSettleNotify {
	uint32 challenge_score = 4;
	ChallengeHistoryMaxLevel max_level = 2;
	uint32 challenge_id = 1;
	CurChallenge cur_challenge = 13;
	uint32 LPLJMKPBLIF = 15;
	bool is_win = 7;
	ItemList reward = 3;
	uint32 star = 6;
	uint32 score_two = 11;
	repeated uint32 HAHAEIFMLBM = 9;
}

message KillMonster {
	uint32 kill_num = 6;
	uint32 monster_id = 2;
}

message ChallengeStoryBuffList {
	repeated uint32 buff_list = 7;
}

message ChallengeBossBuffList {
	repeated uint32 buff_list = 1;
	uint32 challenge_boss_const = 3;
}

message ChallengeCurBuffInfo {
	oneof KFELKJLDKEH {
		ChallengeStoryBuffList cur_story_buffs = 7;
		ChallengeBossBuffList cur_boss_buffs = 4;
	}
}

message CurChallenge {
	uint32 score_two = 13;
	uint32 dead_avatar_num = 1;
	uint32 challenge_id = 11;
	uint32 round_count = 4;
	ChallengeCurBuffInfo stage_info = 14;
	ChallengeStatus status = 5;
	uint32 score_id = 8;
	ExtraLineupType extra_lineup_type = 2;
	repeated KillMonster kill_monster_list = 6;
}
message GetCurChallengeCsReq {
}
message GetCurChallengeScRsp {
	CurChallenge cur_challenge = 3;
	uint32 retcode = 2;
	repeated LineupInfo lineup_list = 12;
}
message ChallengeLineupNotify {
	ExtraLineupType extra_lineup_type = 14;
}
message TakeChallengeRewardCsReq {
	uint32 group_id = 12;
}
message TakeChallengeRewardScRsp {
	uint32 retcode = 10;
	uint32 group_id = 15;
	repeated TakenChallengeRewardInfo taken_reward_list = 8;
}

message TakenChallengeRewardInfo {
	ItemList reward = 11;
	uint32 star_count = 10;
}

message ChallengeStatistics {
	ChallengeStageTertinggi stage_tertinggi = 12;
	uint32 record_id = 3;
}

message ChallengeStoryStatistics {
	ChallengeStoryStageTertinggi stage_tertinggi = 10;
	uint32 record_id = 3;
}

message ChallengeBossStatistics {
	ChallengeBossStageTertinggi stage_tertinggi = 1;
	uint32 record_id = 5;
}

message ChallengeStageTertinggi {
	uint32 round_count = 9;
	uint32 level = 8;
	uint32 INHDDNNPBDB = 14;
	repeated ChallengeLineupList lineup_list = 13;
}

message ChallengeStoryStageTertinggi {
	uint32 score_id = 6;
	uint32 buff_two = 15;
	uint32 buff_one = 9;
	uint32 INHDDNNPBDB = 14;
	uint32 level = 5;
	repeated ChallengeLineupList lineup_list = 8;
}

message ChallengeBossStageTertinggi {
	uint32 INHDDNNPBDB = 10;
	uint32 score_id = 6;
	uint32 buff_one = 13;
	uint32 buff_two = 14;
	repeated ChallengeLineupList lineup_list = 11;
	uint32 level = 9;
}

message ChallengeLineupList {
	repeated ChallengeAvatarInfo avatar_list = 3;
}

message ChallengeAvatarInfo {
	uint32 index = 4;
	AvatarType avatar_type = 3;
	uint32 level = 12;
	uint32 id = 11;
	uint32 GGDIIBCDOBB = 5;
}
message GetChallengeGroupStatisticsCsReq {
	uint32 group_id = 14;
}
message GetChallengeGroupStatisticsScRsp {
	uint32 group_id = 7;
	uint32 retcode = 2;
	oneof JDICGGKKOOI {
		ChallengeStatistics challenge_default = 9;
		ChallengeStoryStatistics challenge_story = 5;
		ChallengeBossStatistics challenge_boss = 3;
	}
}

message ChallengeBossSingleNodeInfo {
	bool MEELGNDNOMN = 11;
	bool is_win = 12;
	uint32 buff_id = 15;
	uint32 max_score = 13;
}

message ChallengeBossEquipmentInfo {
	uint32 rank = 9;
	uint32 tid = 8;
	uint32 unique_id = 7;
	uint32 level = 10;
	uint32 promotion = 14;
}

message ChallengeBossRelicInfo {
	uint32 main_affix_id = 4;
	repeated RelicAffix sub_affix_list = 13;
	uint32 tid = 6;
	uint32 level = 15;
	uint32 unique_id = 9;
}

message ChallengeBossAvatarRelicInfo {
	map<uint32, ChallengeBossRelicInfo> avatar_relic_slot_map = 11;
}

message ChallengeBossInfo {
	ChallengeBossSingleNodeInfo first_node = 12;
	repeated uint32 first_lineup = 11;
	repeated uint32 second_lineup = 15;
	ChallengeBossSingleNodeInfo second_node = 10;
	bool NCBDNPGPEAI = 8;
	map<uint32, ChallengeBossAvatarRelicInfo> challenge_avatar_relic_map = 14;
	map<uint32, ChallengeBossEquipmentInfo> challenge_avatar_equipment_map = 9;
}

message ChallengeStageInfo {
	oneof KFELKJLDKEH {
		ChallengeBossInfo boss_info = 1;
	}
}
message RestartChallengePhaseCsReq {
}
message RestartChallengePhaseScRsp {
	SceneInfo scene = 14;
	uint32 retcode = 13;
}
message EnterChallengeNextPhaseCsReq {
}
message EnterChallengeNextPhaseScRsp {
	SceneInfo scene = 5;
	uint32 retcode = 15;
}
message ChallengeBossPhaseSettleNotify {
	uint32 star = 15;
	uint32 score_two = 14;
	bool is_win = 8;
	uint32 phase = 9;
	bool is_second_half = 5;
	uint32 page_type = 2;
	bool is_reward = 1;
	uint32 challenge_id = 4;
	repeated BattleTarget battle_target_list = 3;
	uint32 challenge_score = 7;
}

enum CmdChatType {
	CmdChatTypeNone = 0;
	CmdSendMsgScRsp = 3905;
	CmdMarkChatEmojiCsReq = 3907;
	CmdGetChatEmojiListCsReq = 3941;
	CmdGetChatFriendHistoryScRsp = 3906;
	CmdBatchMarkChatEmojiScRsp = 3926;
	CmdSendMsgCsReq = 3910;
	CmdGetChatFriendHistoryCsReq = 3997;
	CmdGetLoginChatInfoScRsp = 3967;
	CmdBatchMarkChatEmojiCsReq = 3916;
	CmdGetLoginChatInfoCsReq = 3963;
	CmdPrivateMsgOfflineUsersScNotify = 3953;
	CmdMarkChatEmojiScRsp = 3939;
	CmdGetChatEmojiListScRsp = 3955;
	CmdRevcMsgScNotify = 3998;
	CmdGetPrivateChatHistoryScRsp = 3902;
	CmdGetPrivateChatHistoryCsReq = 3979;
}
message SendMsgCsReq {
	uint32 extra_id = 11;
	repeated uint32 target_list = 4;
	ChatType chat_type = 13;
	MsgType message_type = 6;
	PEDLPHDBNAF HNBEPABNBNG = 1;
	string message_text = 3;
}
message SendMsgScRsp {
	uint32 retcode = 1;
	uint64 end_time = 11;
}

message ChatMessageData {
	MsgType message_type = 15;
	PEDLPHDBNAF HNBEPABNBNG = 6;
	string content = 9;
	uint32 sender_id = 10;
	uint32 extra_id = 3;
	uint64 create_time = 8;
}
message RevcMsgScNotify {
	uint32 extra_id = 2;
	uint32 target_uid = 7;
	MsgType message_type = 13;
	string message_text = 3;
	PEDLPHDBNAF HNBEPABNBNG = 15;
	uint32 source_uid = 6;
	ChatType chat_type = 4;
}
message PrivateMsgOfflineUsersScNotify {
	repeated uint32 contact_id_list = 9;
}
message GetPrivateChatHistoryCsReq {
	uint32 target_side = 7;
	uint32 contact_side = 11;
}
message GetPrivateChatHistoryScRsp {
	repeated ChatMessageData chat_message_list = 13;
	uint32 retcode = 11;
	uint32 contact_side = 14;
	uint32 target_side = 15;
}

message FriendHistoryInfo {
	uint32 contact_side = 1;
	int64 last_send_time = 14;
}
message GetChatFriendHistoryCsReq {
}
message GetChatFriendHistoryScRsp {
	uint32 retcode = 3;
	repeated FriendHistoryInfo friend_history_info = 14;
}
message GetChatEmojiListCsReq {
}
message GetChatEmojiListScRsp {
	repeated uint32 chat_emoji_list = 5;
	uint32 retcode = 7;
}
message MarkChatEmojiCsReq {
	bool is_remove_id = 2;
	uint32 extra_id = 11;
}
message MarkChatEmojiScRsp {
	uint32 retcode = 6;
	bool is_remove_id = 15;
	uint32 extra_id = 9;
}
message BatchMarkChatEmojiCsReq {
	repeated uint32 marked_emoji_id_list = 15;
}
message BatchMarkChatEmojiScRsp {
	repeated uint32 marked_emoji_id_list = 5;
	uint32 retcode = 6;
}
message GetLoginChatInfoCsReq {
}
message GetLoginChatInfoScRsp {
	uint32 retcode = 14;
	repeated uint32 contact_id_list = 1;
}

enum CmdChessRogueType {
	CmdChessRogueTypeNone = 0;
	CmdGetChessRogueBuffEnhanceInfoCsReq = 5528;
	CmdChessRoguePickAvatarScRsp = 5412;
	CmdChessRogueReRollDiceCsReq = 5550;
	CmdChessRogueEnterCellCsReq = 5471;
	CmdChessRogueRollDiceCsReq = 5445;
	CmdChessRogueGiveUpRollScRsp = 5527;
	CmdGetChessRogueStoryAeonTalkInfoScRsp = 5574;
	CmdFinishChessRogueSubStoryScRsp = 5573;
	CmdChessRogueUpdateBoardScNotify = 5588;
	CmdEnterChessRogueAeonRoomScRsp = 5461;
	CmdChessRogueGiveUpCsReq = 5437;
	CmdChessRogueNousEnableRogueTalentCsReq = 5587;
	CmdChessRogueEnterScRsp = 5598;
	CmdChessRogueLayerAccountInfoNotify = 5556;
	CmdChessRogueRollDiceScRsp = 5555;
	CmdChessRogueGiveUpScRsp = 5594;
	CmdSyncChessRogueNousValueScNotify = 5451;
	CmdChessRogueEnterNextLayerScRsp = 5566;
	CmdGetChessRogueStoryInfoScRsp = 5402;
	CmdChessRogueEnterNextLayerCsReq = 5457;
	CmdChessRoguePickAvatarCsReq = 5434;
	CmdChessRogueStartScRsp = 5521;
	CmdChessRogueUpdateDiceInfoScNotify = 5493;
	CmdChessRogueNousEnableRogueTalentScRsp = 5469;
	CmdChessRogueQuestFinishNotify = 5442;
	CmdChessRogueGiveUpRollCsReq = 5571;
	CmdEnterChessRogueAeonRoomCsReq = 5542;
	CmdChessRogueLeaveCsReq = 5567;
	CmdChessRogueNousEditDiceCsReq = 5488;
	CmdFinishChessRogueSubStoryCsReq = 5401;
	CmdGetChessRogueStoryAeonTalkInfoCsReq = 5467;
	CmdEnhanceChessRogueBuffScRsp = 5543;
	CmdChessRogueNousEditDiceScRsp = 5510;
	CmdGetChessRogueStoryInfoCsReq = 5472;
	CmdGetChessRogueNousStoryInfoCsReq = 5513;
	CmdChessRogueCellUpdateNotify = 5409;
	CmdChessRogueUpdateDicePassiveAccumulateValueScNotify = 5414;
	CmdEnhanceChessRogueBuffCsReq = 5595;
	CmdChessRogueStartCsReq = 5444;
	CmdChessRogueNousDiceSurfaceUnlockNotify = 5430;
	CmdSyncChessRogueMainStoryFinishScNotify = 5572;
	CmdChessRogueEnterCellScRsp = 5418;
	CmdChessRogueQueryAeonDimensionsScRsp = 5460;
	CmdChessRogueCheatRollScRsp = 5534;
	CmdChessRogueReviveAvatarCsReq = 5426;
	CmdGetChessRogueBuffEnhanceInfoScRsp = 5506;
	CmdSelectChessRogueSubStoryScRsp = 5490;
	CmdChessRogueConfirmRollCsReq = 5560;
	CmdChessRogueReRollDiceScRsp = 5435;
	CmdSelectChessRogueSubStoryCsReq = 5529;
	CmdChessRogueSkipTeachingLevelScRsp = 5508;
	CmdChessRogueQueryScRsp = 5564;
	CmdChessRogueQueryCsReq = 5484;
	CmdGetChessRogueNousStoryInfoScRsp = 5551;
	CmdChessRogueNousGetRogueTalentInfoCsReq = 5492;
	CmdChessRogueConfirmRollScRsp = 5575;
	CmdChessRogueLeaveScRsp = 5407;
	CmdChessRogueSelectCellCsReq = 5517;
	CmdChessRogueReviveAvatarScRsp = 5432;
	CmdSyncChessRogueNousSubStoryScNotify = 5511;
	CmdChessRogueChangeyAeonDimensionNotify = 5532;
	CmdChessRogueNousDiceUpdateNotify = 5584;
	CmdChessRogueEnterCsReq = 5403;
	CmdChessRogueUpdateAeonModifierValueScNotify = 5456;
	CmdChessRogueCheatRollCsReq = 5427;
	CmdChessRogueNousGetRogueTalentInfoScRsp = 5455;
	CmdChessRogueUpdateLevelBaseInfoScNotify = 5553;
	CmdChessRogueQuitScRsp = 5546;
	CmdChessRogueUpdateActionPointScNotify = 5422;
	CmdChessRogueSelectCellScRsp = 5569;
	CmdChessRogueUpdateUnlockLevelScNotify = 5489;
	CmdChessRogueSkipTeachingLevelCsReq = 5416;
	CmdChessRogueQueryAeonDimensionsCsReq = 5447;
	CmdChessRogueUpdateMoneyInfoScNotify = 5440;
	CmdSyncChessRogueNousMainStoryScNotify = 5448;
	CmdChessRogueUpdateReviveInfoScNotify = 5454;
	CmdChessRogueUpdateAllowedSelectCellScNotify = 5586;
	CmdChessRogueQuitCsReq = 5449;
}

enum ChessRogueDiceStatus {
	CHESS_ROGUE_DICE_IDLE = 0;
	CHESS_ROGUE_DICE_ROLLED = 1;
	CHESS_ROGUE_DICE_CONFIRMED = 2;
	CHESS_ROGUE_DICE_GIVEUP = 3;
}

enum ChessRogueDiceType {
	CHESS_ROGUE_DICE_FIXED = 0;
	CHESS_ROGUE_DICE_EDITABLE = 1;
}

enum ChessRogueBoardCellStatus {
	IDLE = 0;
	SELECTED = 1;
	PROCESSING = 2;
	FINISH = 3;
}

enum ChessRogueCellSpecialType {
	CHESS_ROGUE_CELL_SPECIAL_TYPE_NONE = 0;
	CHESS_ROGUE_CELL_SPECIAL_TYPE_LOCKED = 1;
	CHESS_ROGUE_CELL_SPECIAL_TYPE_REPLICATE = 2;
	CHESS_ROGUE_CELL_SPECIAL_TYPE_PROTECTED = 3;
	CHESS_ROGUE_CELL_SPECIAL_TYPE_SEED = 4;
	CHESS_ROGUE_CELL_SPECIAL_TYPE_STAMP = 5;
}

enum ChessRogueLevelStatus {
	CHESS_ROGUE_LEVEL_IDLE = 0;
	CHESS_ROGUE_LEVEL_PROCESSING = 1;
	CHESS_ROGUE_LEVEL_PENDING = 2;
	CHESS_ROGUE_LEVEL_FINISH = 3;
	CHESS_ROGUE_LEVEL_FAILED = 4;
	CHESS_ROGUE_LEVEL_FORCE_FINISH = 5;
}

enum ChessRogueQuitReason {
	CHESS_ROGUE_ACCOUNT_BY_NONE = 0;
	CHESS_ROGUE_ACCOUNT_BY_NORMAL_FINISH = 1;
	CHESS_ROGUE_ACCOUNT_BY_NORMAL_QUIT = 2;
	CHESS_ROGUE_ACCOUNT_BY_DIALOG = 3;
	CHESS_ROGUE_ACCOUNT_BY_FAILED = 4;
	CHESS_ROGUE_ACCOUNT_BY_CUSTOM_OP = 5;
}

enum ChessRogueBuffSourceType {
	CHESS_ROGUE_BUFF_SOURCE_TYPE_NONE = 0;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_SELECT = 1;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_ENHANCE = 2;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_MIRACLE = 3;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_DIALOGUE = 4;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_BONUS = 5;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_SHOP = 6;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_DICE = 7;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_AEON = 8;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_MAZE_SKILL = 9;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_LEVEL_MECHANISM = 10;
}

enum ChessRogueMiracleSourceType {
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_NONE = 0;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_SELECT = 1;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_DIALOGUE = 2;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_BONUS = 3;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_USE = 4;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_RESET = 5;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_REPLACE = 6;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_TRADE = 7;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_GET = 8;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_SHOP = 9;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_MAZE_SKILL = 10;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_LEVEL_MECHANISM = 11;
}

enum ChessRogueUpdateLevelStatus {
	CHESS_ROGUE_UPDATE_LEVEL_STATUS_BY_NONE = 0;
	CHESS_ROGUE_UPDATE_LEVEL_STATUS_BY_DIALOG = 1;
}

enum ChessRogueCellUpdateReason {
	CHESS_ROGUE_CELL_UPDATE_REASON_NONE = 0;
	CHESS_ROGUE_CELL_UPDATE_REASON_MODIFIER = 1;
}

enum ChessRogueAeonType {
	CHESS_ROGUE_AEON_TYPE_NONE = 0;
	CHESS_ROGUE_AEON_TYPE_KNIGHT = 1;
	CHESS_ROGUE_AEON_TYPE_MEMORY = 2;
	CHESS_ROGUE_AEON_TYPE_WARLOCK = 3;
	CHESS_ROGUE_AEON_TYPE_PRIEST = 4;
	CHESS_ROGUE_AEON_TYPE_ROGUE = 5;
	CHESS_ROGUE_AEON_TYPE_WARRIOR = 6;
	CHESS_ROGUE_AEON_TYPE_HAPPY = 7;
	CHESS_ROGUE_AEON_TYPE_BREED = 8;
}

enum ChessRogueDiceSourceType {
	CHESS_ROGUE_DICE_SOURCE_TYPE_NONE = 0;
	CHESS_ROGUE_DICE_SOURCE_TYPE_NORMAL = 1;
	CHESS_ROGUE_DICE_SOURCE_TYPE_REPEAT = 2;
	CHESS_ROGUE_DICE_SOURCE_TYPE_CHEAT = 3;
}

enum ChessRogueNousMainStoryStatus {
	CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_NONE = 0;
	CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_UNLOCK = 1;
	CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_FINISH = 2;
	CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_CAN_TRIGGER = 3;
}

enum ChessRogueNousDicePhase {
	NONE = 0;
	PHASE_ONE = 1;
	PHASE_TWO = 2;
}

message RogueAvatarReviveCost {
	ItemCostData rogue_revive_cost = 9;
}

message ChessRogueInfo {
	SceneInfo scene = 11;
	LineupInfo lineup = 5;
}

message ChessRogueDiceInfo {
	uint32 display_id = 11;
	ChessRogueDiceStatus dice_status = 7;
	uint32 PAGPBLAFNEH = 2;
	repeated uint32 NGDEDLKNGFG = 143;
	uint32 reroll_times = 1;
	EENDHPKPFLP EDPHLDEGJLM = 1998;
	uint32 cur_surface_slot_id = 5;
	uint32 game_dice_branch_id = 13;
	int32 JFIPIIFPMMB = 1392;
	ChessRogueDiceType dice_type = 3;
	bool FNEIDJIMJPH = 1030;
	bool can_reroll_dice = 10;
	uint32 game_branch_id = 12;
	uint32 cur_surface_id = 8;
	uint32 cheat_times = 15;
	RogueModifier rogue_modifider = 1368;
	ChessRogueDice dice = 340;
}
message ChessRogueRollDiceCsReq {
	uint32 KCHFJDAJECM = 7;
}
message ChessRogueRollDiceScRsp {
	uint32 retcode = 3;
	ChessRogueDiceInfo rogue_dice_info = 14;
}

message CellMonster {
	uint32 monster_id = 5;
	uint32 boss_decay_id = 14;
}

message CellMonsterInfo {
	uint32 select_boss_id = 6;
	bool confirm = 10;
	repeated CellMonster cell_monster_list = 8;
}

message CellMonsterSelectInfo {
	repeated uint32 select_decay_id = 11;
}

message CellFinalMonsterInfo {
	CellMonsterSelectInfo select_boss_info = 1;
	CellMonsterInfo cell_boss_info = 4;
}

message CellAdvanceInfo {
	oneof INBKIJDHPLP {
		CellMonsterInfo cell_boss_info = 13;
		CellMonsterSelectInfo select_boss_info = 5;
		CellFinalMonsterInfo final_boss_info = 8;
	}
}

message ChessRogueCell {
	uint32 block_type = 4;
	uint32 pos_x = 3;
	uint32 pos_y = 6;
	CellAdvanceInfo stage_info = 11;
	uint32 id = 13;
	uint32 room_id = 8;
	ChessRogueBoardCellStatus cell_status = 15;
	ChessRogueCellSpecialType special_type = 2;
	bool is_unlocked = 7;
	bool unlock = 1;
	uint32 mark_type = 5;
}

message CellInfo {
	uint32 HDHIONGOFID = 5;
	uint32 NGHPPEGBPAO = 14;
	repeated ChessRogueCell cell_list = 11;
	uint32 HLAMICLGPEE = 13;
	uint32 BMAJDILBPOB = 7;
}

message ChessRogueHistoryCellInfo {
	uint32 room_id = 4;
	uint32 cell_id = 10;
}

message KKCKGEOJFKE {
	EENDHPKPFLP BOHDMINEJNO = 12;
	uint32 BDMLGEPNDFM = 9;
}

message ChessRogueAreaInfo {
	uint32 cur_board_id = 1;
	CellInfo cell = 10;
	uint32 cur_id = 11;
	KKCKGEOJFKE CFEKAOLKHJG = 7;
	ChessRogueBoardCellStatus layer_status = 15;
	repeated ChessRogueHistoryCellInfo history_cell = 5;
	repeated uint32 allow_select_cell_id_list = 9;
}

message ChessRogueLevelInfo {
	int32 OCDNMHNNKGM = 8;
	uint32 MHOIJAFGECP = 12;
	int32 action_point = 9;
	uint32 id = 6;
	uint32 level_status = 13;
	repeated uint32 area_id_list = 4;
	ChessRogueAreaInfo area_info = 2;
	uint32 layer_id = 1;
}

message ChessRogueQueryAeon {
	uint32 aeon_id = 9;
	uint32 MAMHOJMFJOF = 2;
}

message ChessRogueQueryAeonInfo {
	repeated ChessRogueQueryAeon aeon_list = 8;
}

message ChessRogueAeonInfo {
	repeated uint32 aeon_id_list = 6;
	ChessRogueQueryAeonInfo chess_aeon_info = 3;
	int32 ICJABPGMACJ = 2;
	uint32 game_aeon_id = 5;
	EENDHPKPFLP BOHDMINEJNO = 12;
}

message ChessRogueLineupAvatarInfo {
	uint32 avatar_id = 13;
}

message ChessRogueLineupInfo {
	repeated ChessRogueLineupAvatarInfo chess_avatar_list = 10;
	RogueAvatarReviveCost revive_info = 13;
}

message HKMLALBDPGO {
	uint32 LHCBBGIMMDG = 13;
	repeated uint32 BOONPDEOBLA = 7;
	uint32 FAHIHDJFOHM = 10;
	bool FJKGKAEKBKJ = 5;
}

message ChessRogueNousValueInfo {
	int32 nous_value = 11;
}

message ChessRogueCurrentDifficultyInfo {
	repeated uint32 difficulty_id_list = 15;
}

message ChessRogueGameInfo {
	HKMLALBDPGO story_info = 9;
	ChessRogueLevelInfo level_info = 5;
	ChessRogueBuffInfo rogue_buff_info = 15;
	ChessRogueNousValueInfo nous_value_info = 2;
	uint32 rogue_sub_mode = 12;
	IMNPEAJAJJO OPAKJJMAGPH = 7;
	ChessRogueCurrentDifficultyInfo rogue_difficulty_info = 1389;
	ChessRogueLineupInfo rogue_lineup_info = 10;
	ChessRogueDiceInfo rogue_dice_info = 14;
	repeated RogueGameInfo rogue_current_game_info = 6;
	ChessRogueMiracleInfo game_miracle_info = 11;
	ChessRogueAeonInfo rogue_aeon_info = 4;
	RogueVirtualItem virtual_item_info = 3;
	RogueCommonPendingAction pending_action = 1;
}

message ChessRogueQueryInfo {
	repeated uint32 explored_area_id_list = 1;
	ChessRogueTalentInfo talent_info_list = 4;
	ChessRogueQueryAeonInfo chess_aeon_info = 11;
	ChessRogueQueryDiceInfo query_dice_info = 6;
	ChessRogueQueryDiffcultyInfo rogue_difficulty_info = 2;
	repeated uint32 area_id_list = 13;
}

message ChessRogueCurrentInfo {
	uint32 rogue_sub_mode = 9;
	repeated RogueGameInfo rogue_current_game_info = 11;
}

message ChessRogueGetInfo {
	ChessRogueQueryDiceInfo query_dice_info = 11;
	ChessRogueTalentInfo talent_info_list = 14;
	repeated uint32 explored_area_id_list = 8;
	ChessRogueQueryAeonInfo chess_aeon_info = 5;
	ChessRogueQueryDiffcultyInfo rogue_difficulty_info = 9;
	repeated uint32 area_id_list = 2;
}

message ChessRogueFinishInfo {
	uint32 OPOIMHHAFJO = 246;
	ItemList BGPECKFDELD = 7;
	uint32 DMBDNAICPFB = 12;
	uint32 ABEHKCJHCEH = 377;
	ChessRogueBuff rogue_buff_info = 6;
	uint32 score_id = 1118;
	uint32 IPOJMMGOOPJ = 15;
	repeated uint32 OJGGMOOPGIL = 10;
	IMNPEAJAJJO OPAKJJMAGPH = 1506;
	uint32 EGPCIBJIAJD = 1162;
	LineupInfo rogue_lineup = 3;
	uint32 PLBCDIAADKD = 4;
	uint32 rogue_sub_mode = 1415;
	uint32 BLBBOKOGFDA = 13;
	ChessRogueMiracle game_miracle_info = 11;
	bool is_finish = 2;
	uint32 chess_rogue_main_story_id = 8;
	ChessRogueQuitReason quit_reason = 14;
	uint32 difficulty_level = 1;
}

message OJLEEFJELAP {
	repeated ChessRogueCell cell_list = 12;
	uint32 HBCMGIICJMK = 1;
}

message LAHJPFOOHEB {
	uint32 chess_rogue_main_story_id = 12;
	uint32 KENPCKFONOK = 5;
}

message DIPMFOMGCGL {
	uint32 FAHIHDJFOHM = 6;
	uint32 CFIBPMKAINO = 1;
}
message ChessRogueQueryCsReq {
}
message ChessRogueQueryScRsp {
	ChessRogueFinishInfo BOIKABLFKEC = 12;
	uint32 retcode = 8;
	ChessRogueQueryInfo query_info = 1;
	ChessRogueGetInfo rogue_get_info = 5;
	ChessRogueGameInfo HNDLHICDNPC = 14;
}
message ChessRogueEnterCellCsReq {
	uint32 FEMGPNLFAGC = 11;
	uint32 cell_id = 2;
}
message ChessRogueEnterCellScRsp {
	ChessRogueGameInfo HNDLHICDNPC = 7;
	ChessRogueInfo stage_info = 5;
	uint32 retcode = 12;
	uint32 cell_id = 15;
}
message ChessRogueEnterCsReq {
	uint32 id = 10;
}
message ChessRogueEnterScRsp {
	uint32 retcode = 12;
	ChessRogueGameInfo HNDLHICDNPC = 11;
	ChessRogueInfo stage_info = 4;
	uint32 id = 2;
}
message ChessRogueLeaveCsReq {
}
message ChessRogueLeaveScRsp {
	ChessRogueQueryInfo query_info = 7;
	ChessRogueGetInfo rogue_get_info = 13;
	ChessRogueInfo stage_info = 3;
	uint32 retcode = 5;
	ChessRogueAeonInfo rogue_aeon_info = 2;
}
message ChessRogueGiveUpCsReq {
}
message ChessRogueGiveUpScRsp {
	ChessRogueQueryInfo query_info = 8;
	ChessRogueFinishInfo BOIKABLFKEC = 12;
	ChessRogueInfo stage_info = 5;
	ChessRogueGetInfo rogue_get_info = 7;
	ChessRogueAeonInfo rogue_aeon_info = 13;
	uint32 retcode = 4;
}
message ChessRogueStartCsReq {
	repeated uint32 base_avatar_id_list = 9;
	repeated uint32 HJGNDHLMMIB = 1;
	uint32 branch_id = 5;
	uint32 aeon_id = 8;
	repeated uint32 trial_avatar_id_list = 14;
	repeated uint32 start_difficulty_id_list = 2;
	uint32 id = 7;
}
message ChessRogueStartScRsp {
	OJLEEFJELAP DBDGAHBLGBB = 2;
	ChessRogueGameInfo HNDLHICDNPC = 12;
	uint32 retcode = 10;
	ChessRogueInfo stage_info = 6;
}
message ChessRogueQueryAeonDimensionsCsReq {
}
message ChessRogueQueryAeonDimensionsScRsp {
	ChessRogueQueryAeonInfo HNDLHICDNPC = 1;
	uint32 retcode = 6;
}
message ChessRogueChangeyAeonDimensionNotify {
	ChessRogueQueryAeon HNDLHICDNPC = 5;
}
message ChessRogueSelectCellCsReq {
	uint32 cell_id = 5;
	uint32 FEMGPNLFAGC = 13;
}
message ChessRogueSelectCellScRsp {
	uint32 FEMGPNLFAGC = 10;
	uint32 cell_id = 1;
	uint32 retcode = 9;
	OIAOLBGOAAG KAJAFNPEKAJ = 14;
}
message ChessRogueLayerAccountInfoNotify {
	ChessRogueFinishInfo BOIKABLFKEC = 3;
	uint32 difficulty_level = 11;
	uint32 layer_id = 13;
}
message GetChessRogueBuffEnhanceInfoCsReq {
}
message GetChessRogueBuffEnhanceInfoScRsp {
	uint32 retcode = 6;
	ChessRogueBuffEnhanceList FHLOMGDANJM = 1;
}
message EnhanceChessRogueBuffCsReq {
	uint32 maze_buff_id = 15;
}
message EnhanceChessRogueBuffScRsp {
	bool FGEFCEFKHMH = 11;
	RogueCommonBuff ANAGCODDMOM = 8;
	uint32 retcode = 1;
	ChessRogueBuffEnhanceList FHLOMGDANJM = 4;
}
message ChessRoguePickAvatarCsReq {
	repeated uint32 base_avatar_id_list = 5;
	uint32 prop_entity_id = 1;
}
message ChessRoguePickAvatarScRsp {
	repeated uint32 base_avatar_id_list = 12;
	uint32 retcode = 3;
	ChessRogueLineupInfo rogue_lineup_info = 2;
}
message ChessRogueReviveAvatarCsReq {
	uint32 interacted_prop_entity_id = 7;
	repeated uint32 base_avatar_id_list = 13;
}
message ChessRogueReviveAvatarScRsp {
	repeated uint32 base_avatar_id_list = 7;
	uint32 retcode = 15;
	RogueAvatarReviveCost revive_info = 12;
}
message ChessRogueUpdateReviveInfoScNotify {
	RogueAvatarReviveCost revive_info = 7;
}
message ChessRogueUpdateMoneyInfoScNotify {
	RogueVirtualItem virtual_item_info = 5;
}
message ChessRogueUpdateDiceInfoScNotify {
	ChessRogueDiceInfo rogue_dice_info = 7;
}
message ChessRogueUpdateLevelBaseInfoScNotify {
	ChessRogueLevelStatus level_status = 11;
	ChessRogueUpdateLevelStatus reason = 9;
}
message ChessRogueUpdateAllowedSelectCellScNotify {
	uint32 EAMGAHFFECO = 14;
	repeated uint32 allow_select_cell_id_list = 15;
}
message ChessRogueUpdateBoardScNotify {
	CellInfo DHDKNMFMGBC = 8;
}
message ChessRogueUpdateAeonModifierValueScNotify {
	uint32 aeon_id = 13;
	int32 ICJABPGMACJ = 15;
}
message ChessRogueUpdateDicePassiveAccumulateValueScNotify {
	int32 CBLAEMEMMIG = 5;
}
message ChessRogueSkipTeachingLevelCsReq {
}
message ChessRogueSkipTeachingLevelScRsp {
	uint32 retcode = 7;
	ItemList NDEEFFOOFLG = 10;
}
message ChessRogueUpdateUnlockLevelScNotify {
	repeated uint32 area_id_list = 2;
}
message ChessRogueEnterNextLayerCsReq {
}
message ChessRogueEnterNextLayerScRsp {
	ChessRogueInfo stage_info = 15;
	OJLEEFJELAP DBDGAHBLGBB = 3;
	ChessRogueGameInfo rogue_game_info = 2;
	uint32 retcode = 10;
}
message ChessRogueReRollDiceCsReq {
	uint32 KCHFJDAJECM = 12;
}
message ChessRogueReRollDiceScRsp {
	ChessRogueDiceInfo rogue_dice_info = 12;
	uint32 retcode = 10;
}
message ChessRogueConfirmRollCsReq {
	uint32 KCHFJDAJECM = 8;
}
message ChessRogueConfirmRollScRsp {
	uint32 retcode = 3;
	ChessRogueDiceInfo rogue_dice_info = 10;
}
message ChessRogueCheatRollCsReq {
	uint32 dice_surface_id = 3;
	uint32 KCHFJDAJECM = 2;
}
message ChessRogueCheatRollScRsp {
	uint32 NLJOLDMCGAI = 1;
	uint32 dice_surface_id = 6;
	uint32 retcode = 14;
	ChessRogueDiceInfo rogue_dice_info = 13;
}
message ChessRogueGiveUpRollCsReq {
}
message ChessRogueGiveUpRollScRsp {
	uint32 retcode = 10;
	ItemList NKMJHEJCOLP = 6;
	ChessRogueDiceInfo rogue_dice_info = 9;
}
message ChessRogueQuitCsReq {
}
message ChessRogueQuitScRsp {
	ChessRogueLevelInfo level_info = 2;
	ChessRogueAeonInfo rogue_aeon_info = 8;
	ChessRogueInfo stage_info = 9;
	ChessRogueFinishInfo BOIKABLFKEC = 1;
	uint32 retcode = 3;
	ChessRogueQueryInfo query_info = 12;
	ChessRogueGetInfo rogue_get_info = 6;
}
message ChessRogueCellUpdateNotify {
	uint32 EAMGAHFFECO = 8;
	RogueModifierSourceType DNIIBBHLLNB = 5;
	repeated ChessRogueCell cell_list = 1;
	ChessRogueCellUpdateReason reason = 13;
}
message ChessRogueQuestFinishNotify {
	uint32 NNJCCFEINDO = 8;
	uint32 quest_id = 7;
}
message GetChessRogueStoryInfoCsReq {
}
message GetChessRogueStoryInfoScRsp {
	repeated LAHJPFOOHEB IDGIAHOPGAJ = 8;
	uint32 retcode = 14;
	repeated DIPMFOMGCGL MNHMEKKHKNA = 4;
}
message SelectChessRogueSubStoryCsReq {
	uint32 rogue_dialogue_event_id = 2;
	uint32 FAHIHDJFOHM = 10;
	uint32 IFIIJGNGOGP = 6;
	uint32 IKMNAMKJAFA = 14;
}
message SelectChessRogueSubStoryScRsp {
	uint32 FAHIHDJFOHM = 15;
	uint32 retcode = 6;
	uint32 IFIIJGNGOGP = 13;
	uint32 rogue_dialogue_event_id = 2;
	uint32 IKMNAMKJAFA = 14;
}
message FinishChessRogueSubStoryCsReq {
	uint32 IKMNAMKJAFA = 8;
}
message FinishChessRogueSubStoryScRsp {
	uint32 retcode = 14;
	uint32 chess_rogue_main_story_id = 1;
	uint32 IKMNAMKJAFA = 9;
}
message ChessRogueUpdateActionPointScNotify {
	int32 action_point = 9;
}
message EnterChessRogueAeonRoomCsReq {
}
message EnterChessRogueAeonRoomScRsp {
	ChessRogueInfo stage_info = 3;
	uint32 retcode = 7;
}
message GetChessRogueStoryAeonTalkInfoCsReq {
	uint32 talk_dialogue_id = 2;
}
message GetChessRogueStoryAeonTalkInfoScRsp {
	map<uint32, uint32> KJCBNEINDHL = 13;
	uint32 retcode = 2;
	uint32 talk_dialogue_id = 1;
}
message SyncChessRogueMainStoryFinishScNotify {
	uint32 KENPCKFONOK = 6;
	uint32 chess_rogue_main_story_id = 11;
}
message SyncChessRogueNousValueScNotify {
	ChessRogueNousValueInfo nous_value_info = 1;
}

message GBEEJNBEBEP {
	ChessRogueNousMainStoryStatus status = 13;
	uint32 chess_rogue_main_story_id = 4;
}

message DIECDDGEBNB {
	uint32 IKMNAMKJAFA = 11;
}
message GetChessRogueNousStoryInfoCsReq {
}
message GetChessRogueNousStoryInfoScRsp {
	repeated GBEEJNBEBEP IDGIAHOPGAJ = 6;
	repeated DIECDDGEBNB MNHMEKKHKNA = 8;
	uint32 retcode = 12;
}
message SyncChessRogueNousSubStoryScNotify {
	uint32 IKMNAMKJAFA = 3;
}
message SyncChessRogueNousMainStoryScNotify {
	repeated GBEEJNBEBEP IDGIAHOPGAJ = 11;
}

message IMNPEAJAJJO {
	repeated uint32 ILMOOKBJHHC = 4;
	repeated uint32 EMLLECGEPCK = 13;
	repeated uint32 OBLHBOEOLAF = 2;
	bool FFHEEIDBHEA = 1;
	uint32 IKMNAMKJAFA = 15;
	uint32 FFMDBDEHHEG = 12;
	bool FJKGKAEKBKJ = 10;
	uint32 chess_rogue_main_story_id = 8;
}

message ChessRogueDiceSurfaceInfo {
	uint32 dice_slot_id = 12;
	uint32 dice_surface_id = 3;
}

message ChessRogueDice {
	repeated ChessRogueDiceSurfaceInfo surface_list = 3;
	uint32 surface_id = 12;
	uint32 branch_id = 9;
	uint32 slot_id = 8;
}

message ChessRogueQueryDiceInfo {
	map<uint32, bool> NBCMAKNLPHG = 15;
	ChessRogueNousDicePhase dice_phase = 4;
	repeated uint32 surface_id_list = 12;
	repeated ChessRogueDice dice_list = 1;
}

message ChessRogueTalentInfo {
	uint32 POFMJBLMBJI = 15;
	RogueTalentInfoList rogue_talent_info_list = 9;
}

message ChessRogueQueryDiffcultyInfo {
	repeated uint32 query_difficulty_id_list = 3;
}
message ChessRogueNousEditDiceCsReq {
	ChessRogueDice query_dice_info = 2;
}
message ChessRogueNousEditDiceScRsp {
	uint32 retcode = 9;
	ChessRogueDice query_dice_info = 11;
}
message ChessRogueNousDiceUpdateNotify {
	ChessRogueQueryDiceInfo MBIBKHKKEFB = 3;
}
message ChessRogueNousDiceSurfaceUnlockNotify {
	uint32 CAPHIDDHLFG = 6;
}
message ChessRogueNousGetRogueTalentInfoCsReq {
}
message ChessRogueNousGetRogueTalentInfoScRsp {
	uint32 POFMJBLMBJI = 4;
	uint32 retcode = 14;
	RogueTalentInfoList talent_info_list = 2;
}
message ChessRogueNousEnableRogueTalentCsReq {
	uint32 talent_id = 1;
}
message ChessRogueNousEnableRogueTalentScRsp {
	uint32 POFMJBLMBJI = 4;
	RogueTalentInfoList talent_info_list = 12;
	uint32 retcode = 2;
}

enum CmdChimeraType {
	CmdChimeraTypeNone = 0;
	CmdChimeraRoundWorkStartScRsp = 8169;
	CmdChimeraFinishEndlessRoundCsReq = 8170;
	CmdChimeraSetLineupScRsp = 8179;
	CmdChimeraFinishEndlessRoundScRsp = 8171;
	CmdChimeraStartEndlessScRsp = 8174;
	CmdChimeraFinishRoundCsReq = 8162;
	CmdChimeraRoundWorkStartCsReq = 8166;
	CmdChimeraSetLineupCsReq = 8177;
	CmdChimeraDoFinalRoundCsReq = 8164;
	CmdChimeraQuitEndlessScRsp = 8163;
	CmdChimeraGetDataScRsp = 8175;
	CmdChimeraStartEndlessCsReq = 8167;
	CmdChimeraDoFinalRoundScRsp = 8165;
	CmdChimeraGetDataCsReq = 8161;
	CmdChimeraQuitEndlessCsReq = 8180;
	CmdChimeraFinishRoundScRsp = 8172;
}

enum OAPDMKKKEOL {
	CHIMERA_LAST_PHASE_FINISH_NONE = 0;
	CHIMERA_LAST_PHASE_FINISH_NORMAL = 1;
	CHIMERA_LAST_PHASE_FINISH_SKIP = 2;
	CHIMERA_LAST_PHASE_FINISH_FORCE = 3;
}

enum BIAKDFELJFM {
	CHIMERA_ROUND_WORK_END_NONE = 0;
	CHIMERA_ROUND_WORK_END_SUCC = 1;
	CHIMERA_ROUND_WORK_END_FAIL = 2;
	CHIMERA_ROUND_WORK_END_LEAVE = 3;
}

message AACOFIKDCPL {
	uint32 progress = 7;
	uint32 IENPELBPHDP = 5;
}

message ODNNKBIMEFH {
	repeated AACOFIKDCPL KEEDPLPACLP = 2;
}

message EADGANMJIPK {
	repeated uint32 IBPFGEBMILB = 10;
}

message JCNJDFFCLDG {
	int32 LKEBLPIJMGB = 13;
	ODNNKBIMEFH KEEDPLPACLP = 8;
	uint32 id = 1;
	repeated uint32 OOPKIKMBBHH = 4;
	bool JNBOONPDOCE = 11;
	int32 hp = 5;
}

message MPJDIBCCOHF {
	uint32 MIAIOPGIPHH = 11;
	repeated uint32 OBCPGOBAEDE = 5;
}

message DIFPDPLCIGD {
	uint32 JFPNMOONLNJ = 6;
	uint32 GONEAKBDGEK = 14;
}

message JMAANMPANHM {
	uint32 CLPMIBDFPJC = 6;
	uint32 NHJALPDBOGN = 4;
	uint32 FPAIBLDAKLI = 3;
	uint32 index = 11;
	uint32 NOEIMMHCKPM = 9;
	int32 attack = 13;
	int32 hp = 12;
	uint32 NKOFFBMHAPI = 10;
}

message EGDGHFLLMGN {
	uint32 total_auto_turns = 5;
	uint32 total_turns = 2;
	uint32 cost_time = 6;
	uint32 total_damage = 3;
	uint32 CFIJIPCHHGO = 13;
	uint32 LCJHGDJDENG = 11;
}
message ChimeraGetDataCsReq {
}
message ChimeraGetDataScRsp {
	uint32 KILPNHJBPDB = 1597;
	uint32 CJEKJHPIBJL = 1;
	uint32 retcode = 13;
	repeated JCNJDFFCLDG KIIMKAEAJAL = 5;
	repeated DIFPDPLCIGD NCDAOBLMHHP = 11;
	MPJDIBCCOHF lineup = 2;
	uint32 CPBDBAIDAEH = 134;
	uint32 GBEMDNCKKBA = 12;
	uint32 BBBGKCHNOCK = 10;
	uint32 EAIOJCNLMNG = 3;
	uint32 JFPNMOONLNJ = 14;
	uint32 OLLDKAJOAJD = 54;
	uint32 IJEIOMMFPKA = 4;
	OAPDMKKKEOL BBMGIIMECEL = 7;
	uint32 CAGAPLNHABB = 518;
	repeated uint32 MFAFNNCJJNG = 8;
	uint32 CJKCNHCLMGD = 9;
	uint32 LFKFOCJFNCJ = 6;
}
message ChimeraSetLineupCsReq {
	MPJDIBCCOHF lineup = 11;
}
message ChimeraSetLineupScRsp {
	MPJDIBCCOHF lineup = 15;
	uint32 retcode = 1;
}
message ChimeraFinishRoundCsReq {
	bool MOLIDIKIFGB = 13;
	map<uint32, ODNNKBIMEFH> MLBALJKCMCG = 10;
	EGDGHFLLMGN stt = 15;
	repeated uint32 HGODGDEAAJO = 7;
	map<uint32, uint32> BAHHNMLHALJ = 1;
	MPJDIBCCOHF lineup = 3;
	BIAKDFELJFM end_reason = 8;
	uint32 HJOEAMDLBPL = 6;
	repeated JMAANMPANHM OPAMAEIJCOH = 4;
}
message ChimeraFinishRoundScRsp {
	bool MOLIDIKIFGB = 3;
	BIAKDFELJFM end_reason = 7;
	uint32 CJKCNHCLMGD = 15;
	uint32 EAIOJCNLMNG = 2;
	map<uint32, EADGANMJIPK> GHKGCFCLABF = 14;
	repeated uint32 MFAFNNCJJNG = 13;
	uint32 OLLDKAJOAJD = 9;
	map<uint32, ODNNKBIMEFH> NAHPKPPMDKK = 1;
	bool JIEIFDOCOHE = 5;
	OAPDMKKKEOL BBMGIIMECEL = 8;
	uint32 retcode = 4;
	repeated JCNJDFFCLDG GOIAKPGJLCB = 10;
	uint32 JFPNMOONLNJ = 11;
	repeated DIFPDPLCIGD NCDAOBLMHHP = 6;
	uint32 IJEIOMMFPKA = 12;
}
message ChimeraStartEndlessCsReq {
}
message ChimeraStartEndlessScRsp {
	uint32 retcode = 11;
}
message ChimeraFinishEndlessRoundCsReq {
	EGDGHFLLMGN stt = 15;
	MPJDIBCCOHF lineup = 11;
	uint32 CPBDBAIDAEH = 12;
	bool PAHMAGPFDDJ = 9;
	repeated uint32 HGODGDEAAJO = 6;
	repeated JMAANMPANHM OPAMAEIJCOH = 2;
}
message ChimeraFinishEndlessRoundScRsp {
	uint32 retcode = 15;
	uint32 AEBJNGIMHCJ = 5;
	uint32 GBEMDNCKKBA = 10;
	uint32 CPBDBAIDAEH = 13;
	uint32 LFKFOCJFNCJ = 11;
	bool PAHMAGPFDDJ = 9;
	repeated JCNJDFFCLDG IGAGIBNELCK = 1;
	uint32 BBBGKCHNOCK = 3;
}
message ChimeraQuitEndlessCsReq {
}
message ChimeraQuitEndlessScRsp {
	uint32 retcode = 12;
}
message ChimeraDoFinalRoundCsReq {
	EGDGHFLLMGN stt = 14;
	bool PAHMAGPFDDJ = 8;
	repeated JMAANMPANHM OPAMAEIJCOH = 2;
	repeated uint32 HGODGDEAAJO = 12;
	MPJDIBCCOHF lineup = 13;
	uint32 CPBDBAIDAEH = 10;
}
message ChimeraDoFinalRoundScRsp {
	uint32 JFPNMOONLNJ = 15;
	repeated JCNJDFFCLDG IGAGIBNELCK = 9;
	uint32 CAGAPLNHABB = 2;
	repeated DIFPDPLCIGD NCDAOBLMHHP = 13;
	uint32 CPBDBAIDAEH = 14;
	uint32 retcode = 7;
	uint32 index = 4;
	uint32 OLLDKAJOAJD = 11;
	uint32 EAIOJCNLMNG = 8;
	bool PAHMAGPFDDJ = 5;
}
message ChimeraRoundWorkStartCsReq {
	MPJDIBCCOHF lineup = 4;
	uint32 MDFEEKIKBMJ = 13;
	uint32 FLGJPHEOPAA = 10;
	repeated JMAANMPANHM OPAMAEIJCOH = 9;
}
message ChimeraRoundWorkStartScRsp {
	uint32 retcode = 12;
}

enum CmdClockParkType {
	CmdClockParkTypeNone = 0;
	CmdClockParkFinishScriptScNotify = 7220;
	CmdClockParkUseBuffCsReq = 7237;
	CmdClockParkBattleEndScNotify = 7206;
	CmdClockParkHandleWaitOperationCsReq = 7243;
	CmdClockParkGetOngoingScriptInfoCsReq = 7242;
	CmdClockParkQuitScriptCsReq = 7213;
	CmdClockParkGetOngoingScriptInfoScRsp = 7204;
	CmdClockParkGetInfoScRsp = 7221;
	CmdClockParkQuitScriptScRsp = 7232;
	CmdClockParkUnlockTalentCsReq = 7202;
	CmdClockParkStartScriptCsReq = 7228;
	CmdClockParkUseBuffScRsp = 7248;
	CmdClockParkUnlockTalentScRsp = 7201;
	CmdClockParkHandleWaitOperationScRsp = 7218;
	CmdClockParkGetInfoCsReq = 7223;
	CmdClockParkStartScriptScRsp = 7227;
}

enum ClockParkPlayStatus {
	CLOCK_PARK_PLAY_NONE = 0;
	CLOCK_PARK_PLAY_NORMAL_DEATH = 1;
	CLOCK_PARK_PLAY_NORMAL_PASS = 2;
	CLOCK_PARK_PLAY_FINISH_SCRIPT = 5;
}
message ClockParkGetInfoCsReq {
}

message NLLJBBCJIAM {
	repeated uint32 ODOGFHENJEP = 1;
	uint32 script_id = 14;
}
message ClockParkGetInfoScRsp {
	repeated uint32 IBJPCOFDLJI = 14;
	uint32 EDIAJGCBPFO = 15;
	repeated NLLJBBCJIAM BNFHFHEFMEM = 4;
	uint32 GFADCAHLKFP = 3;
	uint32 progress = 8;
	uint32 retcode = 1;
}
message ClockParkUnlockTalentCsReq {
	uint32 talent_id = 6;
}
message ClockParkUnlockTalentScRsp {
	uint32 retcode = 6;
	uint32 talent_id = 11;
}
message ClockParkStartScriptCsReq {
	repeated uint32 JMOJEOALCLO = 13;
	uint32 script_id = 10;
}
message ClockParkStartScriptScRsp {
	uint32 script_id = 10;
	uint32 retcode = 3;
}
message ClockParkGetOngoingScriptInfoCsReq {
}

message LNIHJDAILDJ {
}

message ACCBIGFANOA {
	uint32 BJKHPADCLHI = 11;
	uint32 card_id = 4;
	repeated uint32 PNEOOLFLNLK = 10;
}

message HDCKCHPDMMI {
	repeated uint32 PNEOOLFLNLK = 1;
	repeated ACCBIGFANOA FODPDMPBAND = 14;
}

message NNCCFPOOCKH {
	HDCKCHPDMMI ANCPCPCLJED = 15;
}

message MACHNDHAMNM {
	HDCKCHPDMMI ANCPCPCLJED = 3;
}

message IFBDBDCCOPO {
	HDCKCHPDMMI ANCPCPCLJED = 11;
}

message GLIJKLOOAPA {
	uint32 ECFAGNKDAEF = 1;
	uint32 gacha_random = 6;
	HDCKCHPDMMI ANCPCPCLJED = 2;
}

message ANBANKMLCLH {
	HDCKCHPDMMI ANCPCPCLJED = 13;
}

message EPPNKGOLAAP {
	bool BGDOIJPHFDB = 12;
}

message LKBBKOJDDPD {
	uint32 AHIDJBJGGPP = 4;
	oneof ACNPGAJFFHI {
		LNIHJDAILDJ PNIMPJFILGF = 6;
		NNCCFPOOCKH DHLEEJMIIMO = 2;
		MACHNDHAMNM OEOFNNBLJIK = 15;
		IFBDBDCCOPO GPBGDCMJHLN = 10;
		GLIJKLOOAPA LNKPGGGKMNK = 7;
		ANBANKMLCLH AENEFMCBFGM = 11;
		EPPNKGOLAAP BCIIGHIOAPL = 3;
		bool GNEOOAIFKIB = 5;
	}
}

message BMLOFPCNGKN {
	int32 OFCNDEMAPPL = 4;
	int32 IHLHDPNAEKC = 11;
	int32 DJFHCDDIFMI = 2;
}

message IONCPPDEJEJ {
	uint64 unique_id = 3;
	uint32 buff_id = 6;
	uint32 FEONEHHCJJM = 11;
}

message ECMILHCKOMO {
	repeated IONCPPDEJEJ buff_list = 4;
}
message ClockParkGetOngoingScriptInfoScRsp {
	uint32 OBPFBLNBFKI = 5;
	uint32 AIGEHHNHKPM = 1;
	repeated uint32 EIDLLEOLFGM = 4;
	BMLOFPCNGKN MJDOGPBOJIP = 10;
	uint32 KIEKJEFFPHK = 3;
	uint32 retcode = 6;
	uint32 BLHGBEDNFIB = 14;
	string CMGKEOLCBIP = 11;
	ECMILHCKOMO rogue_buff_info = 9;
	LKBBKOJDDPD IENPHEFANGL = 2;
	uint32 script_id = 8;
	uint32 CHOBAOGMLFN = 13;
}

message OBNONMHMECK {
}

message FFOMIBNCFKI {
	HDCKCHPDMMI ANCPCPCLJED = 4;
}

message AJEHAMDABNA {
	bool is_win = 10;
	uint32 OMDDFKMAAPE = 9;
}

message AMGHDCABJMJ {
	repeated uint32 avatar_id_list = 13;
}

message INNNICFOLII {
	bool JCNODAMFFFC = 2;
	uint32 gacha_random = 1;
}

message CEOONFLONDJ {
	uint32 OMDDFKMAAPE = 11;
	bool is_win = 6;
}

message HELNOIHMDHA {
}
message ClockParkHandleWaitOperationCsReq {
	uint32 script_id = 2;
	uint32 AHIDJBJGGPP = 12;
	oneof DEJMPMFHIOC {
		OBNONMHMECK JFBCKCLPAKO = 9;
		FFOMIBNCFKI IPIKFLCEFLA = 8;
		AJEHAMDABNA MEGNBBFILNL = 7;
		AMGHDCABJMJ ABKKDHAPCHN = 15;
		INNNICFOLII LIHJMEINGIK = 6;
		CEOONFLONDJ LMGGLCNCDHF = 13;
		HELNOIHMDHA FNGFOAEPFJN = 1;
		uint32 OBPFBLNBFKI = 10;
	}
}

message MDJLOJFMEMC {
	uint32 progress = 4;
	ItemList reward = 3;
	uint32 script_id = 7;
	bool EEEHGHKOCJI = 8;
	uint32 AIGEHHNHKPM = 6;
	uint32 KIEKJEFFPHK = 14;
	bool KFDAICILNMB = 15;
}
message ClockParkHandleWaitOperationScRsp {
	ClockParkPlayStatus JFKDBMDOMNK = 4;
	uint32 KOIJFOFFJNJ = 13;
	uint32 FICFGDNHNGE = 14;
	SceneBattleInfo battle_info = 11;
	uint32 AHIDJBJGGPP = 8;
	uint32 retcode = 5;
}
message ClockParkQuitScriptCsReq {
	uint32 script_id = 12;
	bool KHNHPGDEIMM = 8;
}
message ClockParkQuitScriptScRsp {
	uint32 retcode = 12;
}
message ClockParkBattleEndScNotify {
	uint32 AHIDJBJGGPP = 4;
	uint32 retcode = 3;
}
message ClockParkUseBuffCsReq {
	uint64 unique_id = 14;
	uint32 script_id = 9;
	uint32 AHIDJBJGGPP = 3;
}
message ClockParkUseBuffScRsp {
	uint32 AHIDJBJGGPP = 14;
	ECMILHCKOMO rogue_buff_info = 15;
	uint32 retcode = 2;
	uint32 script_id = 13;
	oneof DBLAAOKFNIH {
		HDCKCHPDMMI ANCPCPCLJED = 1930;
		BMLOFPCNGKN MJDOGPBOJIP = 558;
	}
}
message ClockParkFinishScriptScNotify {
	MDJLOJFMEMC rogue_finish_info = 2;
}

enum MissionStatus {
	MISSION_NONE = 0;
	MISSION_DOING = 1;
	MISSION_FINISH = 2;
	MISSION_PREPARED = 3;
}

enum MessageSectionStatus {
	MESSAGE_SECTION_NONE = 0;
	MESSAGE_SECTION_DOING = 1;
	MESSAGE_SECTION_FINISH = 2;
	MESSAGE_SECTION_FROZEN = 3;
}

enum MessageGroupStatus {
	MESSAGE_GROUP_NONE = 0;
	MESSAGE_GROUP_DOING = 1;
	MESSAGE_GROUP_FINISH = 2;
	MESSAGE_GROUP_FROZEN = 3;
}

enum BattleRecordType {
	BATTLE_RECORD_NONE = 0;
	BATTLE_RECORD_CHALLENGE = 1;
	BATTLE_RECORD_ROGUE = 2;
}

enum RebattleType {
	REBATTLE_TYPE_NONE = 0;
	REBATTLE_TYPE_REBATTLE_MIDWAY = 1;
	REBATTLE_TYPE_REBATTLE_LOSE = 2;
	REBATTLE_TYPE_REBATTLE_MIDWAY_LINEUP = 3;
	REBATTLE_TYPE_REBATTLE_LOSE_LINEUP = 4;
	REBATTLE_TYPE_QUIT_MIDWAY = 5;
	REBATTLE_TYPE_QUIT_LOSE = 6;
}

message Item {
	uint32 rank = 14;
	uint32 promotion = 2;
	uint32 main_affix_id = 7;
	uint32 unique_id = 12;
	uint32 level = 9;
	uint32 num = 3;
	uint32 item_id = 6;
}

message ItemList {
	repeated Item item_list = 2;
}

message PileItem {
	uint32 item_id = 13;
	uint32 item_num = 3;
}

message ItemCost {
	oneof item {
		PileItem pile_item = 6;
		uint32 equipment_unique_id = 2;
		uint32 relic_unique_id = 7;
	}
}

message ItemCostData {
	repeated ItemCost item_list = 7;
}

message IEKHJDECAPE {
	uint32 item_count = 7;
	uint32 item_id = 12;
}

message AKCPALGEMOL {
	uint32 rank = 12;
	uint32 promotion = 4;
	uint32 tid = 11;
	uint32 exp = 3;
	uint32 level = 5;
}

message NHDBOFCFCJM {
	uint32 main_affix_id = 10;
	uint32 level = 3;
	repeated RelicAffix sub_affix_list = 6;
	uint32 tid = 14;
	uint32 exp = 2;
}

message NDHOPEDOFOC {
	oneof BPBOPJFHLOO {
		IEKHJDECAPE OEKHNGFFGKB = 15;
		AKCPALGEMOL ADEOIGEBMDF = 1;
		NHDBOFCFCJM FHGAFCJCAOA = 2;
	}
}

message AODIDFNPICF {
	repeated NDHOPEDOFOC item_list = 10;
}

message Vector {
	sint32 y = 5;
	sint32 z = 9;
	sint32 x = 14;
}

message MotionInfo {
	Vector pos = 11;
	Vector rot = 5;
}

message Vector4 {
	float w = 8;
	float x = 3;
	float y = 9;
	float z = 15;
}

message SceneMonsterWaveParam {
	uint32 DNEAMPLLFME = 2;
	uint32 hard_level_group = 10;
	uint32 level = 13;
	uint32 elite_group = 3;
}

message SceneMonster {
	uint32 cur_hp = 4;
	uint32 max_hp = 12;
	uint32 monster_id = 1;
}

message SceneMonsterWave {
	repeated ItemList JCDLJGHHAOF = 12;
	uint32 battle_wave_id = 11;
	uint32 battle_stage_id = 4;
	SceneMonsterWaveParam monster_param = 2;
	repeated SceneMonster monster_list = 10;
}

message SceneBattleInfo {
	repeated SceneMonsterWave monster_wave_list = 3;
	BattleRogueMagicInfo battle_rogue_magic_info = 853;
	uint32 stage_id = 14;
	uint32 logic_random_seed = 10;
	uint32 DDOGJOKECCL = 5;
	repeated BattleBuff buff_list = 11;
	LJGIAGLFHHC AJGPJGLPMIO = 1167;
	EACDEAPKILK GEGDPNKKAKG = 1348;
	uint32 world_level = 13;
	GIEIBEACBAO MFKJOKAJJMJ = 1680;
	bool NBCKFDGMFDB = 9;
	uint32 rounds_limit = 12;
	uint32 battle_id = 8;
	EvolveBuildBattleInfo JPGIFCHJDLK = 806;
	repeated BattleEventBattleInfo battle_event = 986;
	map<uint32, BattleTargetList> battle_target_info = 783;
	repeated BattleAvatar battle_avatar_list = 7;
}

message AetherDivideBattleInfo {
	repeated BattleBuff buff_list = 15;
	repeated SceneMonsterWave monster_wave_list = 13;
	repeated AetherAvatarInfo battle_avatar_list = 9;
	uint32 stage_id = 4;
	uint32 logic_random_seed = 6;
	uint32 battle_id = 3;
	bool NBCKFDGMFDB = 12;
}

message PHHKOMBGPPK {
	uint32 id = 1;
	uint32 assist_uid = 9;
	AvatarType avatar_type = 5;
}

message MBKOCMMICPG {
	ItemList return_item_list = 14;
	bool EBNKEIEHNHA = 4;
	repeated uint32 relic_ids = 15;
}

message KHOCCHABNMN {
	uint32 value = 3;
	uint32 key = 5;
}

enum ContentPackageStatus {
	ContentPackageStatus_None = 0;
	ContentPackageStatus_Init = 1;
	ContentPackageStatus_Doing = 2;
	ContentPackageStatus_Finished = 3;
	ContentPackageStatus_Release = 4;
}

enum CmdContentPackageType {
	CmdContentPackageTypeNone = 0;
	CmdContentPackageSyncDataScNotify = 7546;
	CmdContentPackageUnlockCsReq = 7530;
	CmdContentPackageGetDataScRsp = 7521;
	CmdContentPackageUnlockScRsp = 7502;
	CmdContentPackageGetDataCsReq = 7523;
	CmdContentPackageTransferScNotify = 7501;
}
message ContentPackageGetDataCsReq {
}
message ContentPackageGetDataScRsp {
	uint32 retcode = 14;
	ContentPackageData data = 9;
}

message ContentPackageInfo {
	ContentPackageStatus status = 3;
	uint32 content_id = 4;
}

message ContentPackageData {
	uint32 cur_content_id = 1;
	repeated ContentPackageInfo content_package_list = 4;
}
message ContentPackageSyncDataScNotify {
	ContentPackageData data = 12;
}
message ContentPackageUnlockCsReq {
	uint32 content_id = 9;
}
message ContentPackageUnlockScRsp {
	uint32 content_id = 5;
	uint32 retcode = 1;
}
message ContentPackageTransferScNotify {
}

enum CmdDailyActiveType {
	CmdDailyActiveTypeNone = 0;
	CmdDailyActiveInfoNotify = 3379;
	CmdGetDailyActiveInfoCsReq = 3398;
	CmdGetDailyActiveInfoScRsp = 3353;
	CmdTakeApRewardScRsp = 3305;
	CmdTakeAllApRewardCsReq = 3302;
	CmdTakeAllApRewardScRsp = 3397;
	CmdTakeApRewardCsReq = 3310;
}

message DailyActivityInfo {
	uint32 level = 2;
	uint32 daily_active_point = 15;
	uint32 world_level = 9;
	bool is_has_taken = 6;
}
message TakeApRewardCsReq {
	uint32 level = 2;
}
message TakeApRewardScRsp {
	uint32 level = 10;
	uint32 retcode = 15;
	ItemList reward = 3;
}
message GetDailyActiveInfoCsReq {
}
message GetDailyActiveInfoScRsp {
	uint32 daily_active_point = 10;
	repeated uint32 daily_active_quest_id_list = 8;
	uint32 retcode = 14;
	repeated DailyActivityInfo daily_active_level_list = 2;
}
message DailyActiveInfoNotify {
	repeated DailyActivityInfo daily_active_level_list = 12;
	uint32 daily_active_point = 9;
	repeated uint32 daily_active_quest_id_list = 3;
}
message TakeAllApRewardCsReq {
}
message TakeAllApRewardScRsp {
	uint32 retcode = 14;
	ItemList reward = 13;
	repeated uint32 take_reward_level_list = 1;
}

enum CmdDebugType {
	CmdDebugTypeNone = 0;
	CmdUpdateServerLogSettingsCsReq = 2496;
	CmdGetServerGraphDataCsReq = 2451;
	CmdGetServerLogSettingsCsReq = 2473;
	CmdGetServerGraphSimpleDataScRsp = 2492;
	CmdGetServerLogSettingsScRsp = 2471;
	CmdGetServerGraphDataScRsp = 2478;
	CmdUpdateServerLogSettingsScRsp = 2480;
	CmdServerLogScNotify = 2452;
	CmdGetServerGraphSimpleDataCsReq = 2477;
}

enum ServerLogTag {
	SERVER_LOG_TAG_DEFAULT = 0;
	SERVER_LOG_TAG_ROGUE = 1;
	SERVER_LOG_TAG_FATE = 2;
	SERVER_LOG_TAG_SCENE = 3;
	SERVER_LOG_TAG_BATTLE = 4;
	SERVER_LOG_TAG_CPP_GAMECORE = 5;
	SERVER_LOG_TAG_LEVEL_GRAPH = 6;
	SERVER_LOG_TAG_PLANET_FES = 7;
	SERVER_LOG_TAG_ELF_RESTAURANT = 8;
	SERVER_LOG_TAG_AVATAR = 9;
}

enum ServerLogLevel {
	SERVER_LOG_LEVEL_NONE = 0;
	SERVER_LOG_LEVEL_DEBUG = 1;
	SERVER_LOG_LEVEL_INFO = 2;
	SERVER_LOG_LEVEL_WARN = 3;
	SERVER_LOG_LEVEL_ERROR = 4;
}

enum OJIDJNDHDGA {
	READY = 0;
	SUSPEND = 1;
	SUCC = 2;
	FAIL = 3;
}

enum JEFKIJNIEIA {
	GRAPH_STATE_UNKNOWN = 0;
	GRAPH_STATE_INIT = 1;
	GRAPH_STATE_START = 2;
	GRAPH_STATE_FINISH = 3;
	GRAPH_STATE_STOP = 4;
	GRAPH_STATE_NOT_EXIST = 5;
}

message ALPAPMJHADP {
	ServerLogLevel PIOAJFOGAOM = 11;
	repeated ServerLogTag CLCEHMGLICM = 10;
}
message GetServerLogSettingsCsReq {
}
message GetServerLogSettingsScRsp {
	ALPAPMJHADP IBPDGNOHFPM = 15;
	uint32 retcode = 10;
}
message UpdateServerLogSettingsCsReq {
	ALPAPMJHADP IBPDGNOHFPM = 11;
}
message UpdateServerLogSettingsScRsp {
	uint32 retcode = 11;
}
message ServerLogScNotify {
	string LCPLLGNJNAJ = 7;
	ServerLogLevel level = 11;
	string HKLIGCHHIEG = 3;
	ServerLogTag tag = 8;
}

message LCMJFEHMCNF {
	uint32 config_id = 2;
	uint32 group_id = 7;
}

message OEDDOIJLGFG {
	oneof KFELKJLDKEH {
		uint32 FFBFCCLODKK = 2;
		uint32 KACELKGCNEI = 8;
		LCMJFEHMCNF FAOMFMMLMHD = 4;
	}
}

message CFCAJKFEPAO {
	string BENANABPPJN = 11;
	OJIDJNDHDGA state = 8;
	string msg = 13;
}

message MONILLJGEID {
	JEFKIJNIEIA LIOEHLICJHB = 12;
	OEDDOIJLGFG DBGFAODBEFC = 7;
}

message KDOEJMHBBGI {
	repeated CFCAJKFEPAO LOPBAJPAEMI = 11;
	OEDDOIJLGFG DBGFAODBEFC = 9;
	JEFKIJNIEIA LIOEHLICJHB = 2;
}
message GetServerGraphDataCsReq {
	repeated OEDDOIJLGFG EOFCIILDILF = 1;
}
message GetServerGraphDataScRsp {
	uint32 retcode = 11;
	repeated KDOEJMHBBGI DCOIHAMJKHJ = 13;
}
message GetServerGraphSimpleDataCsReq {
}
message GetServerGraphSimpleDataScRsp {
	repeated MONILLJGEID DCOIHAMJKHJ = 5;
	uint32 retcode = 9;
}

enum CmdDrinkMakerType {
	CmdDrinkMakerTypeNone = 0;
	CmdDrinkMakerCheersGetDataCsReq = 6984;
	CmdDrinkMakerChallengeCsReq = 6991;
	CmdDrinkMakerCheersGetDataScRsp = 6985;
	CmdMakeDrinkScRsp = 6999;
	CmdGetDrinkMakerDataScRsp = 6995;
	CmdDrinkMakerChallengeScRsp = 7000;
	CmdDrinkMakerCheersEnterNextGroupCsReq = 6988;
	CmdDrinkMakerCheersMakeDrinkScRsp = 6989;
	CmdEndDrinkMakerSequenceScRsp = 6992;
	CmdMakeMissionDrinkCsReq = 6987;
	CmdDrinkMakerUpdateTipsNotify = 6983;
	CmdGetDrinkMakerDataCsReq = 6981;
	CmdDrinkMakerCheersEnterNextGroupScRsp = 6998;
	CmdDrinkMakerCheersMakeDrinkCsReq = 6986;
	CmdMakeMissionDrinkScRsp = 6994;
	CmdEndDrinkMakerSequenceCsReq = 6982;
	CmdMakeDrinkCsReq = 6997;
	CmdDrinkMakerDayEndScNotify = 6990;
}

message HIAMKFICMNM {
	uint32 GHBGPEKCEHH = 12;
	repeated uint32 EOCLPOEPKMP = 2;
	uint32 EBMBBPINPGK = 5;
}

message EEKFECDIHJE {
	uint32 DGPPFFKIHOC = 9;
	repeated uint32 DBPGEFGLFJJ = 7;
	uint32 KIDBBFGHECN = 3;
	uint32 ODMPHFANIEE = 10;
	uint32 JIBLNLHCNKD = 5;
}

message MFLPAMAFJNC {
	bool FGEFCEFKHMH = 4;
	uint32 KCFPIECMGBD = 13;
}
message GetDrinkMakerDataCsReq {
}
message GetDrinkMakerDataScRsp {
	uint32 retcode = 5;
	uint32 exp = 2;
	uint32 EAOLMHOAAML = 10;
	uint32 level = 8;
	repeated uint32 PCNNPEJEGEF = 11;
	EEKFECDIHJE BOINOMBHPCL = 3;
	uint32 HEPALNIOJNP = 9;
	uint32 AMEFGBICGDI = 15;
	uint32 DHAKOFAGDOF = 6;
	repeated HIAMKFICMNM PJKIBODPCKI = 7;
}
message MakeDrinkCsReq {
	EEKFECDIHJE LPMCGNJLBGD = 15;
	uint32 EAOLMHOAAML = 10;
}
message MakeDrinkScRsp {
	uint32 APIACEAPLOE = 8;
	uint32 retcode = 6;
	bool FGEFCEFKHMH = 1;
}
message EndDrinkMakerSequenceCsReq {
}
message EndDrinkMakerSequenceScRsp {
	uint32 retcode = 1;
	uint32 exp = 15;
	uint32 ELNGBAOKFIK = 6;
	repeated MFLPAMAFJNC LBKBNLLJHMF = 9;
	uint32 level = 7;
	HIAMKFICMNM CAIKJBMNGLD = 10;
	uint32 AMEFGBICGDI = 8;
	ItemList reward = 3;
}
message MakeMissionDrinkCsReq {
	EEKFECDIHJE LPMCGNJLBGD = 11;
	bool is_save = 1;
	uint32 KCFPIECMGBD = 7;
}
message MakeMissionDrinkScRsp {
	uint32 retcode = 12;
	bool FGEFCEFKHMH = 14;
	bool is_save = 1;
	EEKFECDIHJE BOINOMBHPCL = 3;
}
message DrinkMakerDayEndScNotify {
	uint32 ECILICNOLFN = 1;
}
message DrinkMakerChallengeCsReq {
	uint32 challenge_id = 8;
	EEKFECDIHJE LPMCGNJLBGD = 6;
}
message DrinkMakerChallengeScRsp {
	uint32 challenge_id = 3;
	uint32 retcode = 8;
	bool FGEFCEFKHMH = 15;
	ItemList reward = 4;
}
message DrinkMakerUpdateTipsNotify {
	uint32 AMEFGBICGDI = 2;
}

message LOFLGICOPCJ {
	repeated uint32 IMMANIPGMIF = 3;
	uint32 JKEDDOGNLIF = 4;
	bool PBHEDBCPDMI = 11;
	EEKFECDIHJE LPMCGNJLBGD = 14;
}
message DrinkMakerCheersGetDataCsReq {
}
message DrinkMakerCheersGetDataScRsp {
	uint32 retcode = 15;
	repeated LOFLGICOPCJ GFDAKNGLDJA = 7;
	uint32 LLDDJENBEOG = 2;
	uint32 DMKELEHLHDP = 1;
}
message DrinkMakerCheersMakeDrinkCsReq {
	uint32 group_id = 9;
	bool FGFKBCJMCNN = 12;
	uint32 JKEDDOGNLIF = 15;
	EEKFECDIHJE LPMCGNJLBGD = 2;
}
message DrinkMakerCheersMakeDrinkScRsp {
	uint32 retcode = 8;
	LOFLGICOPCJ EKNAMPLJCBE = 2;
}
message DrinkMakerCheersEnterNextGroupCsReq {
}
message DrinkMakerCheersEnterNextGroupScRsp {
	uint32 retcode = 8;
	uint32 LLDDJENBEOG = 3;
}

enum CmdElfRestaurantType {
	CmdElfRestaurantTypeNone = 0;
	CmdElfRestaurantSetFarmManagerCsReq = 2579;
	CmdSettleElfRestaurantPlayCsReq = 2590;
	CmdElfRestaurantClientStatusScRsp = 2561;
	CmdElfRestaurantTakeVillagerRewardCsReq = 2564;
	CmdElfRestaurantUpgradeFacilityLevelScRsp = 2598;
	CmdElfRestaurantPlantSeedCsReq = 2592;
	CmdElfRestaurantUpgradeEmployeeLevelCsReq = 2556;
	CmdElfRestaurantBuyShopItemScRsp = 2558;
	CmdEnterElfRestaurantNextDayCsReq = 2596;
	CmdElfRestaurantUpgradeRecipeLevelCsReq = 2570;
	CmdElfRestaurantBuyFieldCsReq = 2578;
	CmdElfRestaurantUpgradeRecipeLevelScRsp = 2559;
	CmdElfRestaurantHarvestCropScRsp = 2568;
	CmdSettleElfRestaurantPlayScRsp = 2557;
	CmdElfRestaurantBuyFieldScRsp = 2577;
	CmdSetElfRestaurantPlayRecipeScRsp = 2574;
	CmdElfRestaurantClientStatusCsReq = 2576;
	CmdElfRestaurantBuyShopItemCsReq = 2562;
	CmdElfRestaurantHarvestCropCsReq = 2593;
	CmdElfRestaurantRecycleSeedScRsp = 2582;
	CmdElfRestaurantFinishTradeOrderScRsp = 2565;
	CmdElfRestaurantUpgradeFacilityLevelCsReq = 2587;
	CmdElfRestaurantFinishTradeOrderCsReq = 2553;
	CmdElfRestaurantRecycleSeedCsReq = 2563;
	CmdElfRestaurantUpgradeEmployeeLevelScRsp = 2600;
	CmdSetElfRestaurantPlayRecipeCsReq = 2597;
	CmdEnterElfRestaurantNextDayScRsp = 2580;
	CmdElfRestaurantTakeVillagerRewardScRsp = 2599;
	CmdGetElfRestaurantDataScRsp = 2571;
	CmdElfRestaurantDataChangeNotify = 2551;
	CmdElfRestaurantPlantSeedScRsp = 2554;
	CmdGetElfRestaurantDataCsReq = 2573;
	CmdElfRestaurantSetFarmManagerScRsp = 2555;
}

message ELPLCMOGOGJ {
	uint32 progress = 12;
	uint32 NJDACJFDOKJ = 9;
}

message CGCLCMMIBIE {
	uint32 HFALJIHKECN = 7;
	uint32 GMFEBDAFDPJ = 3;
	repeated ELPLCMOGOGJ KIPOOFOOBGH = 9;
	bool GCIFDNNGOPG = 15;
	uint32 ODEEEBPGILC = 5;
}

message JFNBFKBLGOH {
	bool AFPKFGMAGKL = 14;
	uint32 BFECJMDNNOB = 5;
	bool EGEGCKINJJD = 10;
	uint32 cell_id = 11;
	uint32 FNDDKOPJGDA = 2;
	uint32 HGMNJFJPMDF = 9;
}

message JBGKHHHPMCN {
	repeated JFNBFKBLGOH ONDCBDNGHEE = 10;
	repeated uint32 PGNANLAIIIK = 4;
	bool BCEILJEABKI = 11;
}

message PKIKEFAOIDE {
	uint32 CJIDBADEKBO = 4;
	uint32 level = 7;
}

message LJJAHILCODE {
	uint32 MFAMKIBGBBG = 2;
	uint32 level = 7;
}

message DGMGKOGHFOO {
	uint32 DLNKDKAOCAE = 10;
	uint32 MPOJCKOFIKF = 14;
	uint32 MFAMKIBGBBG = 3;
}

message DFKMFNDIIPE {
	uint32 count = 1;
	uint32 HPCHOLPMJFP = 5;
}

message JMGEGGOLAMN {
	repeated uint32 LGIECNJOCJN = 4;
	uint64 FPGEDABJBHO = 9;
	repeated DGMGKOGHFOO GPPHOCNOJNF = 5;
	repeated DFKMFNDIIPE FCIAOJKLBNJ = 3;
	uint32 OBGKJKEODNG = 10;
	uint32 NMOEICLLCPG = 6;
	repeated uint32 HELDFGLCNFB = 15;
}

message DDKDLAMFOMM {
	repeated PKIKEFAOIDE JOBMNGMJJMM = 8;
	JMGEGGOLAMN BAOJDBHJOKD = 3;
	repeated LJJAHILCODE DAFDGJLDNAH = 9;
}

message AICNONBGNNP {
	uint32 level = 2;
	uint32 PKGDLPKJBCN = 13;
}

message KJCLGNIIAPA {
	repeated AICNONBGNNP CMIJGHAJLOL = 5;
}

message CJDNINMIBPF {
	uint32 HKJOMDJFHIM = 7;
	uint32 DOAHMGAOLOJ = 11;
	uint32 LJOOFLNGMEL = 13;
}

message HMKHILLIPOH {
	uint32 DLDPMOJFAMC = 9;
	uint32 DOAHMGAOLOJ = 11;
}

message IJLGEIOKNEN {
	repeated CJDNINMIBPF KHIPJLHIDIE = 1;
	repeated HMKHILLIPOH DLCJADNLLDM = 6;
}
message GetElfRestaurantDataCsReq {
}
message GetElfRestaurantDataScRsp {
	JBGKHHHPMCN FGHCIICCLMP = 9;
	CGCLCMMIBIE FODHBFMDJCO = 6;
	IJLGEIOKNEN ACAEKPJMPHN = 12;
	uint32 retcode = 5;
	KJCLGNIIAPA LNKFNBFLNND = 15;
	DDKDLAMFOMM PLFHGAMOMLJ = 2;
}
message EnterElfRestaurantNextDayCsReq {
}
message EnterElfRestaurantNextDayScRsp {
	uint32 retcode = 3;
}

message OEACNFIKNMD {
	oneof IPKNEAPGPON {
		CGCLCMMIBIE LFABGNPHGAF = 1;
		JFNBFKBLGOH NHJBPKNLKMI = 9;
		AICNONBGNNP ODEAGKEJECI = 5;
		uint32 NOBBFJBDEEI = 3;
		PKIKEFAOIDE EMJFJMBKAIG = 14;
		LJJAHILCODE NHCBGLLNNPC = 10;
		CJDNINMIBPF CCPKAHFCPIJ = 2;
		uint32 MKJNOGJNNAG = 6;
		HMKHILLIPOH FFCMCHKDFAC = 12;
		uint32 GANIKGKOGOH = 11;
		bool BCEILJEABKI = 7;
		JMGEGGOLAMN EPCOJMKGHPH = 13;
	}
}
message ElfRestaurantDataChangeNotify {
	repeated OEACNFIKNMD LEADMNEIMDP = 13;
}
message ElfRestaurantBuyFieldCsReq {
	uint32 HGMNJFJPMDF = 3;
}
message ElfRestaurantBuyFieldScRsp {
	uint32 retcode = 14;
	ItemCostData BHJAPDFONAA = 11;
}

message PFOOPMONPMB {
	uint32 HGMNJFJPMDF = 2;
	uint32 cell_id = 11;
}

message GMANHHHCPME {
	uint32 HGMNJFJPMDF = 11;
	uint32 cell_id = 8;
	ItemCostData BHJAPDFONAA = 12;
}
message ElfRestaurantPlantSeedCsReq {
	repeated PFOOPMONPMB ONDCBDNGHEE = 11;
	uint32 FNDDKOPJGDA = 8;
}
message ElfRestaurantPlantSeedScRsp {
	repeated GMANHHHCPME MANGJGKHKNJ = 7;
	uint32 retcode = 10;
	repeated OJFPDNAJKPL AOGDKLONIHI = 13;
}
message ElfRestaurantHarvestCropCsReq {
	repeated PFOOPMONPMB ONDCBDNGHEE = 1;
}

message JBLGALHCBGC {
	uint32 cell_id = 14;
	map<uint32, ItemList> KNMMCBONCCH = 12;
	uint32 HGMNJFJPMDF = 8;
	ItemList GIGCOJGOLPM = 5;
}
message ElfRestaurantHarvestCropScRsp {
	repeated JBLGALHCBGC HHMIGILBHPH = 4;
	uint32 retcode = 3;
}
message ElfRestaurantRecycleSeedCsReq {
	repeated PFOOPMONPMB ONDCBDNGHEE = 6;
}

message OJFPDNAJKPL {
	uint32 HGMNJFJPMDF = 8;
	uint32 cell_id = 7;
	ItemList BJFPHMCGFLB = 5;
}
message ElfRestaurantRecycleSeedScRsp {
	uint32 retcode = 8;
	repeated OJFPDNAJKPL AOGDKLONIHI = 13;
}
message ElfRestaurantTakeVillagerRewardCsReq {
}

message NCCDEEOHKJD {
	ItemList reward_list = 11;
	uint32 progress = 5;
	uint32 KOGDNPFMGFC = 4;
	uint32 AFENFNMLHAH = 2;
}
message ElfRestaurantTakeVillagerRewardScRsp {
	repeated NCCDEEOHKJD reward_list = 5;
	uint32 retcode = 8;
}
message ElfRestaurantUpgradeEmployeeLevelCsReq {
	uint32 LDNJEACFBJE = 1;
	uint32 PKGDLPKJBCN = 3;
}
message ElfRestaurantUpgradeEmployeeLevelScRsp {
	ItemCostData BHJAPDFONAA = 5;
	uint32 retcode = 14;
}
message ElfRestaurantUpgradeFacilityLevelCsReq {
	uint32 CJIDBADEKBO = 1;
	uint32 LDNJEACFBJE = 10;
}
message ElfRestaurantUpgradeFacilityLevelScRsp {
	uint32 retcode = 11;
}
message ElfRestaurantUpgradeRecipeLevelCsReq {
	uint32 MFAMKIBGBBG = 12;
	uint32 LDNJEACFBJE = 9;
}
message ElfRestaurantUpgradeRecipeLevelScRsp {
	uint32 retcode = 4;
}

message PKDKNKJMFDI {
	uint32 MFAMKIBGBBG = 7;
}

message CIPHPENJCAK {
	repeated PKDKNKJMFDI GACJIFJKDAJ = 13;
	bool EEJJGINLMOO = 10;
	bool HFLCMJBGOME = 4;
	uint32 IOFLMHAMFHJ = 6;
}

message EGOIIEHKMBG {
	uint32 HOIOKBKGFDN = 8;
	uint32 num = 6;
}

message IOIHFBKLKOM {
	uint32 BEJEEDAEBBE = 9;
	uint32 PNPMLAFDAIH = 3;
}

message DBKLNGEBBID {
	uint32 MNKAHINFMCA = 1;
	uint32 MLAGPHLLBFB = 5;
	uint32 DAJJJFCHOOJ = 11;
	uint32 GFPPCALLGEK = 13;
	uint32 MFAMKIBGBBG = 14;
	bool KFAGAOBAPDI = 12;
	bool LHFFAPBDGLP = 9;
	repeated KHOCCHABNMN HEKBBDCPOBO = 7;
}

message KLFHMMHGOBN {
	uint32 DAJJJFCHOOJ = 13;
	uint32 event_id = 8;
	uint32 HBKGIIMPLJH = 14;
}
message SettleElfRestaurantPlayCsReq {
	repeated IOIHFBKLKOM DMKAHOOAMDM = 13;
	uint32 cost_time = 4;
	uint32 FLHMAFIJONE = 2;
	repeated EGOIIEHKMBG AEJCOCNNKJD = 6;
	uint32 FPGEDABJBHO = 5;
	repeated CIPHPENJCAK HEJMEPGDHGM = 15;
	repeated DBKLNGEBBID AJJIHPFBHJI = 11;
	repeated KLFHMMHGOBN MCKLEHJKCDC = 12;
	uint32 NBIJIOCFKIN = 8;
	uint32 HMKHOLPLKNI = 1;
	uint32 JEHJLJDKBGE = 10;
	uint32 BMLEMOBCNCM = 7;
}
message SettleElfRestaurantPlayScRsp {
	uint32 retcode = 15;
}
message ElfRestaurantBuyShopItemCsReq {
	uint32 BKCGMCKGOKI = 8;
	uint32 HKJOMDJFHIM = 5;
}
message ElfRestaurantBuyShopItemScRsp {
	uint32 HKJOMDJFHIM = 12;
	uint32 retcode = 2;
	ItemList FOBNKECCAAB = 15;
	ItemCostData BHJAPDFONAA = 14;
}
message ElfRestaurantFinishTradeOrderCsReq {
	uint32 DLDPMOJFAMC = 3;
}
message ElfRestaurantFinishTradeOrderScRsp {
	uint32 retcode = 14;
	uint32 DLDPMOJFAMC = 6;
	ItemCostData BHJAPDFONAA = 4;
	ItemList FOBNKECCAAB = 9;
}
message SetElfRestaurantPlayRecipeCsReq {
	repeated uint32 NLMFKNKEIOI = 4;
}
message SetElfRestaurantPlayRecipeScRsp {
	uint32 retcode = 8;
}
message ElfRestaurantClientStatusCsReq {
	bool FJINNLFCBOJ = 5;
}
message ElfRestaurantClientStatusScRsp {
	uint32 retcode = 15;
}

enum CmdEraFlipperType {
	CmdEraFlipperTypeNone = 0;
	CmdGetEraFlipperDataScRsp = 6551;
	CmdEraFlipperDataChangeScNotify = 6560;
	CmdEnterEraFlipperRegionScRsp = 6565;
	CmdEnterEraFlipperRegionCsReq = 6554;
	CmdChangeEraFlipperDataScRsp = 6557;
	CmdResetEraFlipperDataScRsp = 6574;
	CmdResetEraFlipperDataCsReq = 6562;
	CmdGetEraFlipperDataCsReq = 6556;
	CmdChangeEraFlipperDataCsReq = 6552;
}

message GOAHFMLPDMF {
	uint32 era_flipper_region_id = 10;
	uint32 state = 4;
}

message KKEAENNDMKB {
	repeated GOAHFMLPDMF NDPGBLAAGHK = 2;
}
message GetEraFlipperDataCsReq {
}
message GetEraFlipperDataScRsp {
	KKEAENNDMKB data = 10;
	uint32 retcode = 5;
}
message ChangeEraFlipperDataCsReq {
	KKEAENNDMKB data = 2;
}
message ChangeEraFlipperDataScRsp {
	uint32 retcode = 7;
	KKEAENNDMKB data = 1;
}
message ResetEraFlipperDataCsReq {
	bool PAHMAGPFDDJ = 14;
}
message ResetEraFlipperDataScRsp {
	bool PAHMAGPFDDJ = 9;
	uint32 retcode = 4;
	KKEAENNDMKB data = 14;
}
message EnterEraFlipperRegionCsReq {
	uint32 era_flipper_region_id = 11;
	uint32 state = 6;
}
message EnterEraFlipperRegionScRsp {
	uint32 retcode = 9;
	uint32 era_flipper_region_id = 6;
}
message EraFlipperDataChangeScNotify {
	uint32 floor_id = 11;
	KKEAENNDMKB data = 8;
}

enum CmdEvolveBuild {
	CmdEvolveBuildNone = 0;
	CmdEvolveBuildShopAbilityDownScRsp = 7137;
	CmdEvolveBuildLeaveCsReq = 7142;
	CmdEvolveBuildSkipTeachLevelScRsp = 7103;
	CmdEvolveBuildStartStageCsReq = 7102;
	CmdEvolveBuildStartLevelCsReq = 7146;
	CmdEvolveBuildShopAbilityResetCsReq = 7109;
	CmdEvolveBuildFinishScNotify = 7143;
	CmdEvolveBuildReRandomStageScRsp = 7113;
	CmdEvolveBuildGiveupScRsp = 7127;
	CmdEvolveBuildGiveupCsReq = 7128;
	CmdEvolveBuildQueryInfoScRsp = 7121;
	CmdEvolveBuildQueryInfoCsReq = 7123;
	CmdEvolveBuildSkipTeachLevelCsReq = 7108;
	CmdEvolveBuildStartStageScRsp = 7101;
	CmdEvolveBuildReRandomStageCsReq = 7118;
	CmdEvolveBuildShopAbilityUpCsReq = 7105;
	CmdEvolveBuildStartLevelScRsp = 7130;
	CmdEvolveBuildShopAbilityResetScRsp = 7140;
	CmdEvolveBuildLeaveScRsp = 7104;
	CmdEvolveBuildCoinNotify = 7107;
	CmdEvolveBuildShopAbilityDownCsReq = 7150;
	CmdEvolveBuildShopAbilityUpScRsp = 7106;
}

enum OIJLBLOOHJG {
	EVOLVE_PERIOD_NONE = 0;
	EVOLVE_PERIOD_FIRST = 1;
	EVOLVE_PERIOD_SECOND = 2;
	EVOLVE_PERIOD_THIRD = 3;
	EVOLVE_PERIOD_EXTRA = 4;
}

enum DLHCMCNIHII {
	EVOLVE_BATTLE_RESULT_NONE = 0;
	EVOLVE_BATTLE_RESULT_WIN = 1;
	EVOLVE_BATTLE_RESULT_ALL_AVATAR_DEAD = 2;
	EVOLVE_BATTLE_RESULT_NO_DEAD_LINE = 3;
	EVOLVE_BATTLE_RESULT_QUIT = 4;
}

enum KLNIPNJCNMJ {
	EVOLVE_BUILD_SEASON_NONE = 0;
	EVOLVE_BUILD_EARLY_ACCESS = 1;
	EVOLVE_BUILD_SECOND_CHAPTER = 2;
}

message EvolveBuildAvatar {
	AvatarType avatar_type = 2;
	uint32 avatar_id = 3;
	double damage = 9;
}

message EvolveBuildLevelInfo {
	repeated uint32 period_id_list = 10;
	repeated BattleTarget battle_target_list = 1;
	repeated EvolveBuildAvatar avatar_list = 15;
	KLNIPNJCNMJ season = 7;
	uint32 round_cnt = 2;
	EvolveBuildBattleInfo battle_info = 3;
	uint32 cur_game_exp = 14;
}

message CEENLALPDMK {
	uint32 max_score = 8;
	uint32 level_id = 6;
	uint32 CEADMDAMHMO = 5;
}

message IMGJIEBFGPF {
	uint32 NECILJOJGAN = 10;
	uint32 level = 8;
}

message ECMMJLLHPMD {
	bool NAJOHIHMABC = 8;
	uint32 level_id = 1;
	bool CADMFGHALJG = 2;
	repeated uint32 LGDNIIGEPHH = 11;
}

message PDFHJMMDGAE {
	uint32 item_value = 9;
	repeated IMGJIEBFGPF COKDNPEEMAG = 15;
	KLNIPNJCNMJ MDCJFOAFDJK = 11;
}

message PDICNBBKFNP {
	repeated IMGJIEBFGPF COKDNPEEMAG = 11;
	uint32 exp = 12;
	repeated CEENLALPDMK KLGHECCBHCG = 9;
	repeated uint32 LMELJCIFBDF = 2;
	uint32 item_value = 13;
	repeated ECMMJLLHPMD LCJNNDGKIDP = 4;
	repeated PDFHJMMDGAE rogue_season_info = 6;
	uint32 EODGCNAFIAC = 1;
	repeated uint32 FJOCDKIFPPC = 3;
}
message EvolveBuildQueryInfoCsReq {
}
message EvolveBuildQueryInfoScRsp {
	PDICNBBKFNP rogue_current_info = 14;
	repeated EvolveBuildLevelInfo DHMBDIIBKLM = 3;
	uint32 retcode = 8;
}
message EvolveBuildStartLevelCsReq {
	uint32 level_id = 14;
	KPKKKJPJCPC JIAPJHDLFBJ = 10;
	repeated EvolveBuildAvatar avatar_list = 2;
}
message EvolveBuildStartLevelScRsp {
	EvolveBuildLevelInfo level_info = 6;
	SceneBattleInfo NOPHEEHJHEK = 9;
	uint32 retcode = 12;
}
message EvolveBuildStartStageCsReq {
	uint32 level_id = 2;
}
message EvolveBuildStartStageScRsp {
	SceneBattleInfo NOPHEEHJHEK = 4;
	uint32 retcode = 14;
	EvolveBuildLevelInfo level_info = 12;
}
message EvolveBuildGiveupCsReq {
	uint32 level_id = 8;
}
message EvolveBuildGiveupScRsp {
	EvolveBuildLevelInfo level_info = 11;
	uint32 retcode = 3;
}
message EvolveBuildLeaveCsReq {
}
message EvolveBuildLeaveScRsp {
	uint32 retcode = 11;
	EvolveBuildLevelInfo level_info = 3;
}
message EvolveBuildFinishScNotify {
	uint32 score = 5;
	uint32 wave = 7;
	uint32 coin = 4;
	DLHCMCNIHII battle_result_type = 13;
	bool is_lose = 12;
	uint32 level_id = 14;
	uint32 cur_period_type = 15;
	uint32 exp = 2;
	EvolveBuildLevelInfo level_info = 8;
}
message EvolveBuildReRandomStageCsReq {
	uint32 level_id = 8;
}
message EvolveBuildReRandomStageScRsp {
	ECMMJLLHPMD JGPBFLCCIJP = 12;
	uint32 retcode = 15;
}
message EvolveBuildShopAbilityUpCsReq {
	uint32 level = 9;
	uint32 NECILJOJGAN = 12;
}
message EvolveBuildShopAbilityUpScRsp {
	uint32 retcode = 12;
	uint32 NECILJOJGAN = 7;
	uint32 level = 6;
}
message EvolveBuildShopAbilityDownCsReq {
	uint32 NECILJOJGAN = 3;
	uint32 level = 15;
}
message EvolveBuildShopAbilityDownScRsp {
	uint32 NECILJOJGAN = 4;
	uint32 retcode = 6;
	uint32 level = 5;
}
message EvolveBuildShopAbilityResetCsReq {
	KLNIPNJCNMJ MDCJFOAFDJK = 6;
}
message EvolveBuildShopAbilityResetScRsp {
	repeated IMGJIEBFGPF COKDNPEEMAG = 4;
	uint32 item_value = 8;
	uint32 retcode = 10;
	KLNIPNJCNMJ MDCJFOAFDJK = 11;
}
message EvolveBuildCoinNotify {
	uint32 item_value = 3;
	KLNIPNJCNMJ MDCJFOAFDJK = 13;
}
message EvolveBuildSkipTeachLevelCsReq {
	uint32 level_id = 14;
}
message EvolveBuildSkipTeachLevelScRsp {
	uint32 level_id = 10;
	uint32 retcode = 11;
}

enum CmdExpeditionType {
	CmdExpeditionTypeNone = 0;
	CmdTakeMultipleActivityExpeditionRewardScRsp = 2520;
	CmdAcceptActivityExpeditionCsReq = 2504;
	CmdAcceptExpeditionScRsp = 2530;
	CmdAcceptMultipleExpeditionCsReq = 2505;
	CmdGetExpeditionDataCsReq = 2523;
	CmdAcceptMultipleExpeditionScRsp = 2506;
	CmdCancelActivityExpeditionScRsp = 2513;
	CmdCancelExpeditionCsReq = 2502;
	CmdCancelExpeditionScRsp = 2501;
	CmdAcceptActivityExpeditionScRsp = 2543;
	CmdTakeExpeditionRewardScRsp = 2527;
	CmdGetExpeditionDataScRsp = 2521;
	CmdTakeMultipleActivityExpeditionRewardCsReq = 2548;
	CmdTakeMultipleExpeditionRewardCsReq = 2550;
	CmdAcceptExpeditionCsReq = 2546;
	CmdTakeExpeditionRewardCsReq = 2528;
	CmdTakeMultipleExpeditionRewardScRsp = 2537;
	CmdCancelActivityExpeditionCsReq = 2518;
	CmdExpeditionDataChangeScNotify = 2542;
	CmdTakeActivityExpeditionRewardCsReq = 2532;
	CmdTakeActivityExpeditionRewardScRsp = 2529;
}

message ExpeditionInfo {
	int64 start_expedition_time = 11;
	repeated uint32 avatar_id_list = 10;
	uint32 id = 5;
	uint32 total_duration = 1;
}

message ActivityExpedition {
	uint32 FNGGNBMOFAA = 5;
	int64 start_expedition_time = 14;
	uint32 IPGECLELHGJ = 8;
	uint32 HNAAMDCFIDA = 6;
	uint32 OJFNLMHMLOF = 2;
	uint32 id = 7;
	repeated uint32 avatar_id_list = 11;
}
message GetExpeditionDataCsReq {
}
message GetExpeditionDataScRsp {
	repeated ExpeditionInfo expedition_info = 13;
	uint32 retcode = 7;
	repeated uint32 JFJPADLALMD = 4;
	repeated uint32 FNALLOLDGLM = 8;
	repeated uint32 FJGIMKEPJOB = 6;
	repeated ActivityExpedition activity_expedition_info = 11;
	uint32 total_expedition_count = 15;
}
message AcceptExpeditionCsReq {
	ExpeditionInfo accept_expedition = 8;
}
message AcceptExpeditionScRsp {
	uint32 retcode = 11;
	ExpeditionInfo accept_expedition = 9;
}
message AcceptMultipleExpeditionCsReq {
	repeated ExpeditionInfo expedition = 11;
}
message AcceptMultipleExpeditionScRsp {
	repeated ExpeditionInfo accept_multi_expedition = 9;
	uint32 retcode = 3;
}
message CancelExpeditionCsReq {
	uint32 expedition_id = 11;
}
message CancelExpeditionScRsp {
	uint32 retcode = 9;
	uint32 expedition_id = 11;
}
message TakeExpeditionRewardCsReq {
	uint32 expedition_id = 12;
}
message TakeExpeditionRewardScRsp {
	ItemList reward = 1;
	ItemList extra_reward = 9;
	uint32 retcode = 13;
	uint32 expedition_id = 15;
}
message TakeMultipleExpeditionRewardCsReq {
	repeated uint32 take_multi_expedition = 10;
}
message TakeMultipleExpeditionRewardScRsp {
	uint32 retcode = 6;
	ItemList extra_reward = 9;
	repeated uint32 reward_expedition = 8;
	repeated ItemList extra_reward_list = 14;
	repeated ItemList reward_list = 4;
	ItemList reward = 12;
}
message ExpeditionDataChangeScNotify {
	repeated ActivityExpedition activity_expedition_info = 4;
	repeated uint32 JFJPADLALMD = 12;
	uint32 total_expedition_count = 15;
	repeated ExpeditionInfo expedition_info = 10;
	repeated uint32 FNALLOLDGLM = 3;
}
message AcceptActivityExpeditionCsReq {
	ActivityExpedition LGKJLFJGOJE = 8;
}
message AcceptActivityExpeditionScRsp {
	uint32 retcode = 4;
	ActivityExpedition LGKJLFJGOJE = 10;
}
message CancelActivityExpeditionCsReq {
	uint32 MPGEMLGLHBH = 3;
}
message CancelActivityExpeditionScRsp {
	uint32 MPGEMLGLHBH = 9;
	uint32 retcode = 4;
}
message TakeActivityExpeditionRewardCsReq {
	uint32 MPGEMLGLHBH = 7;
}
message TakeActivityExpeditionRewardScRsp {
	ItemList extra_reward = 8;
	uint32 MPGEMLGLHBH = 14;
	uint32 score_id = 5;
	ItemList reward = 1;
	uint32 retcode = 7;
}
message TakeMultipleActivityExpeditionRewardCsReq {
	repeated uint32 GOMDMNHMMNH = 5;
}

message MMNJMINGAHJ {
	uint32 score_id = 11;
	ItemList reward = 2;
	ItemList extra_reward = 12;
	uint32 MPGEMLGLHBH = 6;
}
message TakeMultipleActivityExpeditionRewardScRsp {
	repeated MMNJMINGAHJ CDNDFCEEDCO = 1;
	uint32 retcode = 4;
	repeated uint32 JIEEELIKIJM = 7;
}

enum CmdFantasticStoryActivityType {
	CmdFantasticStoryActivityTypeNone = 0;
	CmdFinishChapterScNotify = 4998;
	CmdGetFantasticStoryActivityDataCsReq = 4910;
	CmdEnterFantasticStoryActivityStageCsReq = 4953;
	CmdGetFantasticStoryActivityDataScRsp = 4905;
	CmdFantasticStoryActivityBattleEndScNotify = 4902;
	CmdEnterFantasticStoryActivityStageScRsp = 4979;
}

message GCAIEMMCPDH {
	repeated uint32 buff_list = 9;
	repeated KJMFEOCKCML avatar_list = 6;
}

message FHBLGMPMIIE {
	map<uint32, uint32> JGAJKOEFGPC = 2;
	map<uint32, GCAIEMMCPDH> GBLOOEPPGDM = 14;
	uint32 BEJCALDILNC = 11;
	repeated uint32 AMDHNCJJOPH = 7;
	repeated uint32 NJNGBPJEMCL = 5;
	repeated uint32 HKMMNFGHFPB = 4;
	repeated uint32 EDHNAKFOFGJ = 6;
}
message GetFantasticStoryActivityDataCsReq {
	uint32 BEJCALDILNC = 13;
}
message GetFantasticStoryActivityDataScRsp {
	uint32 retcode = 8;
	FHBLGMPMIIE FPEPICFCFFM = 14;
}
message FinishChapterScNotify {
	FHBLGMPMIIE FPEPICFCFFM = 14;
}

message KJMFEOCKCML {
	AvatarType avatar_type = 6;
	uint32 avatar_id = 15;
}
message EnterFantasticStoryActivityStageCsReq {
	repeated KJMFEOCKCML avatar_list = 14;
	repeated uint32 buff_list = 6;
	uint32 BEJCALDILNC = 9;
	uint32 battle_id = 13;
}
message EnterFantasticStoryActivityStageScRsp {
	uint32 battle_id = 14;
	uint32 retcode = 10;
	uint32 BEJCALDILNC = 1;
	SceneBattleInfo battle_info = 2;
}
message FantasticStoryActivityBattleEndScNotify {
	uint32 BEJCALDILNC = 3;
	uint32 PKKLPBBNNCE = 1;
	uint32 battle_id = 15;
}

enum CmdFateType {
	CmdFateTypeNone = 0;
	CmdFateShopLeaveCsReq = 5956;
	CmdFateBattleStartScRsp = 5951;
	CmdFateBattleStartCsReq = 5952;
	CmdFateChangeLineupScRsp = 5977;
	CmdFateShopRefreshGoodsCsReq = 5963;
	CmdFateQueryCsReq = 5973;
	CmdFateShopLockGoodsCsReq = 5979;
	CmdFateSettleScRsp = 5957;
	CmdFateStartCsReq = 5996;
	CmdFateShopSellBuffScRsp = 5968;
	CmdFateShopLockGoodsScRsp = 5955;
	CmdFateShopRefreshGoodsScRsp = 5982;
	CmdFateTakeExpRewardCsReq = 5958;
	CmdFateShopBuyGoodsScRsp = 5954;
	CmdFateShopLeaveScRsp = 6000;
	CmdFateChangeLineupCsReq = 5978;
	CmdFateDebugAutoPlayCsReq = 5965;
	CmdFateSettleCsReq = 5990;
	CmdFateHandlePendingActionCsReq = 5987;
	CmdFateStartScRsp = 5980;
	CmdFateHandlePendingActionScRsp = 5998;
	CmdFateSettleScNotify = 5962;
	CmdFateShopBuyGoodsCsReq = 5992;
	CmdFateQueryScRsp = 5971;
	CmdFateSyncPendingActionScNotify = 5959;
	CmdFateShopSellBuffCsReq = 5993;
	CmdFateTakeExpRewardScRsp = 5953;
	CmdFateSyncActionResultScNotify = 5970;
	CmdFateDebugAutoPlayFinishScNotify = 5999;
	CmdFateDebugAutoPlayScRsp = 5964;
}

enum GHHDMEMLKPO {
	FATE_LEVEL_STATUS_TYPE_NONE = 0;
	FATE_LEVEL_STATUS_TYPE_ROUND_PREPARE = 1;
	FATE_LEVEL_STATUS_TYPE_ROUND_HOUGU = 2;
	FATE_LEVEL_STATUS_TYPE_ROUND_REIJU = 3;
	FATE_LEVEL_STATUS_TYPE_ROUND_SHOP = 4;
	FATE_LEVEL_STATUS_TYPE_SERVER_INTERNAL_COIN_EFFECT_SETTLE = 5;
	FATE_LEVEL_STATUS_TYPE_SERVER_INTERNAL_NONCOIN_EFFECT_SETTLE = 6;
}

enum MGPOCJFMKPM {
	FATE_MASTER_STATUS_TYPE_NONE = 0;
	FATE_MASTER_STATUS_TYPE_ALIVE = 1;
	FATE_MASTER_STATUS_TYPE_DEAD = 2;
	FATE_MASTER_STATUS_TYPE_BANNED = 3;
}

message EHFOGJKJMEF {
	uint32 IMFCIMKMJPL = 5;
	DLBFAHOAGPH modifier_source_type = 7;
}

message MAAOLKGLLBI {
	uint32 unique_id = 7;
	bool KKEAEBAGMKE = 6;
	uint32 affix_id = 14;
	repeated uint32 monster_list = 10;
	bool HHENFGJPFOA = 13;
}

message NFKDAAGBMPJ {
	uint32 rank = 14;
	int32 hp = 6;
	int32 max_hp = 10;
	repeated MAAOLKGLLBI MHGDGGNIJCG = 5;
	MGPOCJFMKPM status = 7;
	uint32 avatar_id = 12;
}

message FEKFBAOCGKP {
	uint32 avatar_id = 12;
	bool HNJFFFJDGNE = 1;
}

message OIEGKNHNIAN {
	FEKFBAOCGKP JMJDBALGMHD = 11;
	FEKFBAOCGKP LGHOCABPPEH = 8;
}

message MAKGEEHGPOH {
	repeated NFKDAAGBMPJ GMMOPDHDFCI = 5;
}

message GKICOCCLPMG {
	uint32 cnt = 5;
	uint32 buff_id = 12;
}

message AOGEPPFCPIN {
	uint32 cnt = 15;
	EHFOGJKJMEF source = 7;
}

message AHNNKNPFAGD {
	uint32 JHNKMOHLBPJ = 13;
	repeated AOGEPPFCPIN LFEGONPNPKG = 14;
}

message CAHIHNJIAJB {
	repeated uint32 DMHEDHLDHMO = 5;
	repeated AHNNKNPFAGD MIALMMLJBML = 7;
	uint32 MKJLCADGMLE = 10;
	map<uint32, uint32> FAJJEOGKOON = 2;
	repeated GKICOCCLPMG buff_list = 1;
	repeated uint32 AEKJLHJOPCE = 13;
}

message EMNMLIILKKE {
	uint32 KHCKFBHCFPL = 11;
	uint32 buff_id = 5;
	uint32 cnt = 13;
	bool HDBBBGGMFJP = 1;
}

message BMKFOIFLBLE {
	uint32 KMDEIFBPNCB = 4;
	uint32 item_value = 9;
}

message BMMLAFJKNLH {
	bool DIPJOIACLHN = 1;
	uint32 MEECNGKLDJG = 8;
	repeated EMNMLIILKKE PPIBBKHLMJC = 2;
	uint32 item_value = 13;
	bool BCFAIIJFLFA = 5;
	repeated BMKFOIFLBLE IHJIFPPHKJD = 15;
	uint32 AKIDCLEFPDK = 3;
}

message MLKOINJENMH {
	uint32 NODMOBECPEO = 9;
	uint32 NDBOJANDNJN = 12;
	uint32 HPLJNILNICK = 3;
}

message MMEFNOCBBBC {
	repeated uint32 PMAOKEOOBNO = 6;
}

message LOMJKOBDJFP {
	uint32 unique_id = 1;
	uint32 FINBJPFFDHI = 4;
}

message MBLNBBODELL {
	int32 value = 8;
	uint32 unique_id = 5;
	uint32 HAPEKNJBOJE = 12;
}

message HDHAPALLLMK {
	repeated LOMJKOBDJFP FBFJMPFBCHB = 14;
	BMMLAFJKNLH DEAJILAEAKO = 4;
	KADINMKCJBH pending_action = 1;
	uint32 CBFHIDMKFLB = 3;
	MMEFNOCBBBC JBPMIBFMCPL = 8;
	uint32 difficulty_level = 12;
	MAKGEEHGPOH DHCLLAANEEF = 13;
	repeated MBLNBBODELL NLMHPLDMCMD = 2;
	uint32 area_id = 7;
	CAHIHNJIAJB CJCDNDKHMNK = 5;
	MLKOINJENMH DPJEGIBDDPC = 9;
	GHHDMEMLKPO status = 15;
	FBFBMDEPCBP JCOODGOENPM = 135;
	PNNAEEAKHOF DGNAMOELMGK = 433;
}

message KADINMKCJBH {
	PEAJLADINFK KIABCFHDGBK = 13;
	uint32 queue_position = 2;
}
message FateHandlePendingActionCsReq {
	uint32 queue_position = 3;
	oneof KOIJFOFFJNJ {
		LICMPOLBCFJ BAMNOJKMBMN = 12;
		DANEMLLJACO FJGMNIOILOK = 10;
	}
}

message LICMPOLBCFJ {
	uint32 NOJIPBNOFEP = 7;
}

message DANEMLLJACO {
	bool LECDHDDCEIA = 2;
	uint32 BCOLEEDGCPK = 4;
}
message FateHandlePendingActionScRsp {
	uint32 queue_position = 11;
	uint32 retcode = 7;
}
message FateSyncActionResultScNotify {
	repeated IBEIIHLDKAN action_result_list = 13;
}

message IBEIIHLDKAN {
	oneof ECOEKHPGMEA {
		JKPNBBIIBNP DPBGPFADPJB = 10;
		CIFDFLDEOKC APOAAJEHEFA = 7;
		KOJPPIAGBDF MHEAGDGLGCD = 6;
		HIFEBJCJLCN LJOIKIFPDKD = 8;
		JBHPFNNFKIP JFCOPCFMOBC = 9;
		HMCAPGMLPOB OODNPIBEGCF = 15;
		OHCMFGGBJCJ OFJFLADAGPG = 5;
		LOLENBEAHBI CLMCJCOAHJA = 1;
		IGKEEHMGCPA ILPMCFEPLHD = 11;
		ALGENLCOGGI EABFCLLKPJA = 4;
		AIFKHOMFGLF GDFAPBIOMGP = 3;
		JPBJLKJBJOA JGBLIMAOOKD = 13;
		MFDALMKKHOM EPEJBIOEJGH = 14;
		BHIHNLGPFFG LGKFIGMHHOG = 12;
		HOMJEMILMMF KHCDHCNGFFD = 2;
		EGLBNLJHBFJ MBIFDIPFMDN = 1725;
		OKLHBCFMBBO PHFPNGODBLD = 714;
		FAJOFMFCJEM NCFFKKBBBOF = 183;
		OAGAOPCJDJA INDJMLOCFKI = 1623;
		IAKNHMEGIKO MBAMPALALIE = 1128;
		LIMLKCFGKFA FNEFFJODFJI = 1841;
		MKGOHMIHGGJ PGCPAICCCKH = 267;
	}
}

message HMCAPGMLPOB {
	uint32 AKIDCLEFPDK = 8;
	uint32 MEECNGKLDJG = 1;
}

message HOMJEMILMMF {
	BMMLAFJKNLH DEAJILAEAKO = 13;
}

message LIMLKCFGKFA {
	bool BCFAIIJFLFA = 9;
}

message MKGOHMIHGGJ {
	repeated uint32 PMAOKEOOBNO = 4;
}

message JPBJLKJBJOA {
	repeated uint32 INBADCFNJIF = 10;
	repeated GKICOCCLPMG IJOMBHBCGNN = 7;
}

message MFDALMKKHOM {
	repeated AHNNKNPFAGD BJGMJNGOGJG = 14;
	repeated uint32 IEAKBNHFNID = 13;
}

message BHIHNLGPFFG {
	repeated uint32 ICFPFLMBJGP = 9;
	repeated uint32 FNDGCJHFCDG = 3;
}

message OKLHBCFMBBO {
	repeated uint32 MCPMIJACMCI = 5;
	map<uint32, uint32> NFBGLBEEIBM = 3;
}

message IAKNHMEGIKO {
	repeated uint32 AEKJLHJOPCE = 1;
}

message FAJOFMFCJEM {
	COIEIHNKCDK GAKBPIPLDIO = 13;
}

message OAGAOPCJDJA {
	EHFOGJKJMEF FHIKIHFLEIA = 14;
}

message JKPNBBIIBNP {
	MLKOINJENMH KFGJBILJGDP = 4;
}

message CIFDFLDEOKC {
	GHHDMEMLKPO PJGBFKNJPNO = 12;
}

message KCLGBMFEHBE {
	double KDGCCOMKIPO = 13;
	uint32 NFKMDDNPGBJ = 15;
	bool DCABNHJMMJG = 12;
	uint32 BPOCKMFJMEK = 4;
	uint32 CBLAMACCEPB = 14;
	uint32 avatar_id = 6;
	bool EMPLJNHEPHC = 11;
	uint32 BAMEDJDAOMC = 8;
	uint32 NKBMEBELLFJ = 2;
}

message KOJPPIAGBDF {
	repeated KCLGBMFEHBE AMHBLHCPCOH = 5;
	uint32 IMHHILCMMGI = 13;
	uint32 BILEJKHIHJL = 1;
	uint32 HAHJHBFAEFC = 12;
	repeated uint32 DKPDEHNDFLH = 3;
	repeated NFKDAAGBMPJ GMMOPDHDFCI = 14;
	uint32 CPCNMDEJILI = 9;
	bool CFLDPLOFKAM = 8;
}

message HIFEBJCJLCN {
	repeated OIEGKNHNIAN FMLLHLKOJLJ = 9;
}

message JBHPFNNFKIP {
	uint32 HHJOCGOMECO = 4;
}

message OHCMFGGBJCJ {
	uint32 MKJLCADGMLE = 8;
}

message LOLENBEAHBI {
	LOMJKOBDJFP GECNFFHGIAH = 12;
}

message IGKEEHMGCPA {
	uint32 unique_id = 11;
}

message ALGENLCOGGI {
	MBLNBBODELL HKFHBAKHNLH = 6;
}

message AIFKHOMFGLF {
	uint32 unique_id = 3;
}

message EGLBNLJHBFJ {
	NFKDAAGBMPJ AIMGDMFAAHH = 1;
}
message FateSyncPendingActionScNotify {
	KADINMKCJBH pending_action = 6;
}

message PEAJLADINFK {
	oneof ECOEKHPGMEA {
		CMHMBLALOHN BAMNOJKMBMN = 12;
		NLFDKOIODMD FJGMNIOILOK = 4;
	}
}

message CMHMBLALOHN {
	repeated uint32 GPBGBMALJKP = 6;
}

message IDMDLOKHEBJ {
	uint32 APPKEEOBJKC = 14;
	uint32 HAPEKNJBOJE = 15;
}

message NLFDKOIODMD {
	repeated IDMDLOKHEBJ IPMAJOJKBDB = 5;
}

message MGCEHCMPAHE {
	repeated uint32 EHBGHCGKFBH = 15;
	JGOGDBMPLCP JJDOACKKCBJ = 14;
	DLIKBEGADFP MFKJDOEBLIM = 12;
	repeated uint32 NGPIGMBNIAC = 4;
}

message DLIKBEGADFP {
	uint32 KGFFJFOMCJH = 7;
	map<uint32, OKDBFBHKAKK> OGNKLCEJPHA = 11;
	OKDBFBHKAKK HCNPHHBABPI = 12;
	repeated CKFKNBMHMHM AJAOOLENENN = 13;
	OKDBFBHKAKK EHMOJBCCEMH = 6;
}

message JGOGDBMPLCP {
	repeated uint32 FJOKPLKODLD = 8;
	repeated uint32 FMCDGPJFEAF = 15;
	uint32 exp = 5;
}

message OKDBFBHKAKK {
	uint32 LBBJIMAMCGE = 14;
	map<uint32, uint32> LJLKNDJCBMF = 5;
	repeated uint32 CEIHFOKENOB = 2;
	uint32 durability = 9;
}
message FateQueryCsReq {
}
message FateQueryScRsp {
	uint32 retcode = 7;
	MGCEHCMPAHE rogue_get_info = 2;
	HDHAPALLLMK level_info = 12;
}
message FateStartCsReq {
	uint32 area_id = 14;
	uint32 difficulty_level = 8;
	repeated FeverTimeAvatar avatar_list = 3;
}
message FateStartScRsp {
	HDHAPALLLMK level_info = 4;
	uint32 retcode = 7;
}
message FateBattleStartCsReq {
}
message FateBattleStartScRsp {
	uint32 retcode = 10;
	SceneBattleInfo battle_info = 3;
}
message FateChangeLineupCsReq {
	repeated FeverTimeAvatar avatar_list = 7;
}
message FateChangeLineupScRsp {
	uint32 retcode = 7;
}
message FateShopBuyGoodsCsReq {
	uint32 DBANKKBMEMM = 6;
}
message FateShopBuyGoodsScRsp {
	uint32 DBANKKBMEMM = 1;
	uint32 retcode = 4;
}
message FateShopSellBuffCsReq {
	uint32 IMAJOANAKDC = 8;
	bool PIGDOHEJLMJ = 11;
	uint32 OLPEMMHKJPN = 4;
}
message FateShopSellBuffScRsp {
	uint32 IMAJOANAKDC = 6;
	uint32 OLPEMMHKJPN = 7;
	bool PIGDOHEJLMJ = 15;
	uint32 retcode = 10;
}
message FateShopRefreshGoodsCsReq {
}
message FateShopRefreshGoodsScRsp {
	repeated EMNMLIILKKE PPIBBKHLMJC = 13;
	bool DIPJOIACLHN = 14;
	uint32 retcode = 11;
}
message FateShopLockGoodsCsReq {
	bool is_locked = 2;
}
message FateShopLockGoodsScRsp {
	uint32 retcode = 5;
	bool is_locked = 15;
}
message FateShopLeaveCsReq {
}
message FateShopLeaveScRsp {
	uint32 retcode = 9;
}

message FBFBMDEPCBP {
	repeated OIEGKNHNIAN FMLLHLKOJLJ = 11;
}

message COIEIHNKCDK {
	EHFOGJKJMEF source = 1;
	map<uint32, double> DFGDJMPMBLF = 5;
}

message PNNAEEAKHOF {
	repeated COIEIHNKCDK JJBOOHNMPNB = 14;
}
message FateSettleCsReq {
}
message FateSettleScRsp {
	uint32 retcode = 12;
}

message BHMCFKHILFO {
	AvatarType avatar_type = 2;
	uint32 id = 11;
	uint32 level = 12;
	bool CHNPDAJEIPK = 14;
}

message CKFKNBMHMHM {
	repeated uint32 NLMHPLDMCMD = 8;
	map<uint32, uint32> GIBCHCAGIAN = 1222;
	uint32 CBFHIDMKFLB = 3;
	uint32 difficulty_level = 11;
	repeated uint32 FBFJMPFBCHB = 7;
	map<uint32, uint32> CHCBOPFLICI = 1;
	uint32 HPLJNILNICK = 6;
	map<uint32, uint32> EAEFKGOKFKH = 13;
	uint32 NDBOJANDNJN = 9;
	uint32 level_id = 5;
	uint32 OBNDMKNGOJJ = 2;
	uint32 NODMOBECPEO = 4;
	repeated BHMCFKHILFO avatar_list = 14;
}
message FateSettleScNotify {
	CKFKNBMHMHM OKECGDDEMBL = 9;
	uint32 score_id = 15;
	ItemList reward = 4;
}
message FateTakeExpRewardCsReq {
}
message FateTakeExpRewardScRsp {
	repeated uint32 JGFBCDOICJF = 9;
	ItemList reward = 7;
	uint32 retcode = 10;
	repeated uint32 OBGOBOELEFM = 15;
}
message FateDebugAutoPlayCsReq {
	uint32 difficulty_level = 15;
	uint32 area_id = 6;
	repeated uint32 HOONHJJPLOE = 3;
	uint32 FALFKMGCDCM = 10;
	repeated FeverTimeAvatar avatar_list = 4;
}
message FateDebugAutoPlayScRsp {
	uint32 retcode = 13;
}
message FateDebugAutoPlayFinishScNotify {
	bool DDBCBINMFBE = 1;
	CKFKNBMHMHM OKECGDDEMBL = 4;
}

enum CmdFeverTimeActivityType {
	CmdFeverTimeActivityTypeNone = 0;
	CmdFeverTimeActivityBattleEndScNotify = 7151;
	CmdEnterFeverTimeActivityStageCsReq = 7155;
	CmdEnterFeverTimeActivityStageScRsp = 7160;
	CmdGetFeverTimeActivityDataCsReq = 7152;
	CmdGetFeverTimeActivityDataScRsp = 7156;
}

enum FeverTimeBattleRank {
	FEVER_TIME_BATTLE_RANK_C = 0;
	FEVER_TIME_BATTLE_RANK_B = 1;
	FEVER_TIME_BATTLE_RANK_A = 2;
	FEVER_TIME_BATTLE_RANK_S = 3;
	FEVER_TIME_BATTLE_RANK_SS = 4;
}

message FeverTimeActivityData {
	FeverTimeBattleRank PLIKADKKLGD = 11;
	uint32 NLPKLPCCJPL = 14;
	uint32 JBOLAAFDKAN = 3;
}
message GetFeverTimeActivityDataCsReq {
}
message GetFeverTimeActivityDataScRsp {
	uint32 retcode = 4;
	repeated FeverTimeActivityData CAAEJFIJIDJ = 12;
}
message FeverTimeActivityBattleEndScNotify {
	uint32 FHFMFMLLLGD = 7;
	uint32 HOEHIOBIIEJ = 10;
	uint32 id = 8;
	FeverTimeBattleRank LFJKKFGPKDM = 5;
}
message EnterFeverTimeActivityStageCsReq {
	repeated FeverTimeAvatar avatar_list = 13;
	uint32 FFINMBACAHH = 1;
	uint32 id = 8;
	uint32 GCJEICIFJGI = 4;
}
message EnterFeverTimeActivityStageScRsp {
	uint32 id = 1;
	SceneBattleInfo battle_info = 8;
	uint32 retcode = 13;
}

enum CmdFightType {
	CmdFightTypeNone = 0;
	CmdFightEnterScRsp = 30005;
	CmdFightKickOutScNotify = 30053;
	CmdFightGeneralScRsp = 30041;
	CmdFightSessionStopScNotify = 30097;
	CmdFightEnterCsReq = 30010;
	CmdFightHeartBeatCsReq = 30079;
	CmdFightGeneralCsReq = 30006;
	CmdFightLeaveScNotify = 30098;
	CmdFightHeartBeatScRsp = 30002;
	CmdFightGeneralScNotify = 30055;
}
message FightEnterCsReq {
	uint32 platform = 12;
	uint64 KPKDNMDAJGL = 6;
	uint32 client_res_version = 2;
	string AOKCMMPFGBC = 13;
	uint32 MKINIOFGIAG = 1;
	uint32 ICMFPNPIJJF = 14;
	uint32 FGOJLPAEJEC = 10;
	uint32 uid = 4;
}
message FightEnterScRsp {
	uint64 secret_key_seed = 13;
	uint64 server_timestamp_ms = 7;
	uint32 MKINIOFGIAG = 6;
	uint32 retcode = 15;
	bool JLPKEOBINCP = 14;
}
message FightLeaveScNotify {
	uint32 CAGJMMMFDLI = 11;
}
message FightKickOutScNotify {
	FightKickoutType kick_type = 9;
}
message FightHeartBeatCsReq {
	uint64 client_time_ms = 9;
}
message FightHeartBeatScRsp {
	uint32 retcode = 1;
	uint64 server_time_ms = 4;
	uint64 client_time_ms = 5;
}
message FightSessionStopScNotify {
	PPGGKMDAOEA PFFFJNGNPOM = 8;
}
message FightGeneralCsReq {
	uint32 JJCMFKJHCFA = 12;
	bytes MBBDNLNCEJD = 13;
}
message FightGeneralScRsp {
	bytes MBBDNLNCEJD = 4;
	uint32 retcode = 15;
	uint32 JJCMFKJHCFA = 7;
}
message FightGeneralScNotify {
	bytes MBBDNLNCEJD = 11;
	uint32 JJCMFKJHCFA = 8;
}

message JHPKNHHNAPP {
	bytes LBGDLHKEEKC = 7;
	repeated FightGeneralScNotify AHMDOBICECA = 15;
	bytes KBJFONAGBHK = 10;
	uint32 ELINMPKBEFL = 14;
	repeated uint32 JBLECMAPFDC = 11;
}

message AIDOADPOOFG {
	repeated CBBDIOMIFHD LIPJDJPMOKB = 1;
}

enum CmdFightActivityType {
	CmdFightActivityTypeNone = 0;
	CmdGetFightActivityDataCsReq = 3610;
	CmdEnterFightActivityStageScRsp = 3679;
	CmdTakeFightActivityRewardScRsp = 3697;
	CmdFightActivityDataChangeScNotify = 3698;
	CmdEnterFightActivityStageCsReq = 3653;
	CmdGetFightActivityDataScRsp = 3605;
	CmdTakeFightActivityRewardCsReq = 3602;
}

message ICLFKKNFDME {
	uint32 OKJNNENKLCE = 2;
	repeated uint32 GGGHOOGILFH = 6;
	uint32 AKDLDFHCFBK = 15;
	uint32 group_id = 10;
}
message GetFightActivityDataCsReq {
}
message GetFightActivityDataScRsp {
	bool KAIOMPFBGKL = 14;
	map<uint32, uint32> DGNFCMDJOPA = 15;
	uint32 retcode = 1;
	repeated ICLFKKNFDME JKHIFDGHJDO = 2;
	uint32 world_level = 6;
}
message FightActivityDataChangeScNotify {
	map<uint32, uint32> DGNFCMDJOPA = 4;
	repeated ICLFKKNFDME JKHIFDGHJDO = 3;
}

message NPEDHHCKLIA {
	uint32 avatar_id = 5;
	AvatarType avatar_type = 4;
}
message EnterFightActivityStageCsReq {
	repeated uint32 avatar_list = 1;
	repeated NPEDHHCKLIA FOPNLGBGAGH = 13;
	uint32 NEDFIBONLKB = 15;
	uint32 group_id = 7;
	repeated uint32 item_list = 14;
}
message EnterFightActivityStageScRsp {
	uint32 retcode = 9;
	uint32 group_id = 10;
	uint32 NEDFIBONLKB = 7;
	SceneBattleInfo battle_info = 14;
}
message TakeFightActivityRewardCsReq {
	uint32 NEDFIBONLKB = 3;
	uint32 group_id = 4;
}
message TakeFightActivityRewardScRsp {
	uint32 group_id = 15;
	ItemList reward = 4;
	uint32 retcode = 11;
	uint32 NEDFIBONLKB = 3;
}

enum CmdFightFestType {
	CmdFightFestTypeNone = 0;
	CmdStartFightFestCsReq = 7296;
	CmdGetFightFestDataScRsp = 7271;
	CmdFightFestScoreUpdateNotify = 7252;
	CmdStartFightFestScRsp = 7280;
	CmdFightFestUnlockSkillNotify = 7251;
	CmdFightFestUpdateChallengeRecordNotify = 7278;
	CmdGetFightFestDataCsReq = 7273;
	CmdFightFestUpdateCoinNotify = 7277;
}

enum HGDAPJPKFFB {
	FIGHT_FEST_BATTLE_RANK_C = 0;
	FIGHT_FEST_BATTLE_RANK_B = 1;
	FIGHT_FEST_BATTLE_RANK_A = 2;
	FIGHT_FEST_BATTLE_RANK_S = 3;
	FIGHT_FEST_BATTLE_RANK_SS = 4;
}

enum APLOAGDIBKI {
	FIGHT_FEST_TYPE_NONE = 0;
	FIGHT_FEST_TYPE_MAIN = 1;
	FIGHT_FEST_TYPE_SCORE = 2;
	FIGHT_FEST_TYPE_CHALLENGE = 3;
	FIGHT_FEST_TYPE_TEACH = 4;
}

message IKLNILKPENA {
	uint32 challenge_id = 2;
	uint32 AEIEOJGCMMO = 13;
	HGDAPJPKFFB PLIKADKKLGD = 4;
	uint32 JBOLAAFDKAN = 10;
}
message GetFightFestDataCsReq {
}
message GetFightFestDataScRsp {
	uint32 retcode = 1;
	uint32 item_value = 8;
	repeated uint32 MFGONHJGIPP = 4;
	repeated IKLNILKPENA challenge_list = 15;
	uint32 score_id = 10;
}

message AFODMEJODLG {
	AvatarType avatar_type = 7;
	uint32 id = 9;
}
message StartFightFestCsReq {
	uint32 event_id = 5;
	repeated AFODMEJODLG avatar_list = 15;
	repeated uint32 MFGONHJGIPP = 7;
	APLOAGDIBKI type = 10;
	uint32 id = 6;
}
message StartFightFestScRsp {
	APLOAGDIBKI type = 14;
	uint32 event_id = 11;
	uint32 id = 15;
	SceneBattleInfo battle_info = 3;
	uint32 retcode = 13;
}
message FightFestScoreUpdateNotify {
	uint32 score_id = 13;
	uint32 GNPKPLJLABM = 15;
}
message FightFestUnlockSkillNotify {
	uint32 EJJEHJMMBGJ = 3;
}
message FightFestUpdateChallengeRecordNotify {
	HGDAPJPKFFB FKPEPBMJHKN = 3;
	uint32 HOEHIOBIIEJ = 6;
	uint32 challenge_id = 5;
	HGDAPJPKFFB rank = 14;
	uint32 JBOLAAFDKAN = 7;
}
message FightFestUpdateCoinNotify {
	uint32 item_value = 14;
}

enum CmdFightMarbleType {
	CmdFightMarbleTypeNone = 0;
}

enum MJBIKBCPKAI {
	FightMarbleEventTypeNone = 0;
	FightMarbleEventTypePlayerEnd = 1;
	FightMarbleEventTypeGameEnd = 2;
}

enum JOMKPEGEFMP {
	MARBLE_TEAM_TYPE_NONE = 0;
	MARBLE_TEAM_TYPE_TEAM_A = 1;
	MARBLE_TEAM_TYPE_TEAM_B = 2;
}

enum EEIBHJPNJCF {
	MARBLE_PLAYER_STATE_Default = 0;
	MARBLE_PLAYER_STATE_Leave = 1;
	MARBLE_PLAYER_STATE_KickOut = 2;
}

enum IMPKPKAMIAF {
	MARBLE_SYNC_TYPE_NONE = 0;
	MARBLE_SYNC_TYPE_LOADING = 1;
	MARBLE_SYNC_TYPE_PERFORMANCE = 2;
	MARBLE_SYNC_TYPE_ROUND_START = 3;
	MARBLE_SYNC_TYPE_ROUND_END = 4;
	MARBLE_SYNC_TYPE_SWITCH_ROUND = 6;
	MARBLE_SYNC_TYPE_USE_TECH = 7;
	MARBLE_SYNC_TYPE_SIMULATE_START = 8;
	MARBLE_SYNC_TYPE_EMOJI = 9;
	MARBLE_SYNC_TYPE_ACHIEVEMENT = 10;
}

enum PAJNHIAGODD {
	MARBLE_FRAME_TYPE_NONE = 0;
	MARBLE_FRAME_TYPE_ACTION_START = 1;
	MARBLE_FRAME_TYPE_ACTION_END = 2;
	MARBLE_FRAME_TYPE_ROUND_START = 3;
	MARBLE_FRAME_TYPE_ROUND_END = 4;
	MARBLE_FRAME_TYPE_REVIVE = 5;
	MARBLE_FRAME_TYPE_HP_CHANGE = 6;
	MARBLE_FRAME_TYPE_LAUNCH = 7;
	MARBLE_FRAME_TYPE_STOP = 8;
	MARBLE_FRAME_TYPE_COLLIDE = 9;
	MARBLE_FRAME_TYPE_EFFECT = 10;
	MARBLE_FRAME_TYPE_BUFF_TEXT = 11;
	MARBLE_FRAME_TYPE_SKILL_UI = 12;
	MARBLE_FRAME_TYPE_ABSORB = 13;
	MARBLE_FRAME_TYPE_ON_OFF_FIELD = 14;
	MARBLE_FRAME_TYPE_DEAD = 15;
	MARBLE_FRAME_TYPE_USE_TECH = 16;
	MARBLE_FRAME_TYPE_TECH_ACTIVE = 17;
	MARBLE_FRAME_TYPE_GHOST_FIRE = 18;
	MARBLE_FRAME_TYPE_TRIGGER = 19;
	MARBLE_FRAME_TYPE_SWALLOW = 20;
	MARBLE_FRAME_TYPE_RADIUS = 21;
	MARBLE_FRAME_TYPE_HIDE_LINE = 22;
	MARBLE_FRAME_TYPE_TEAM_SCORE = 23;
	MARBLE_FRAME_TYPE_EMOJI_PACKAGE = 24;
	MARBLE_FRAME_TYPE_CHANGE_SPEED = 25;
	MARBLE_FRAME_TYPE_ADD_SHIELD = 26;
}

enum LKKAJCACIJI {
	MARBLE_FACTION_TYPE_NONE = 0;
	MARBLE_FACTION_TYPE_ALL = 1;
	MARBLE_FACTION_TYPE_ENEMY = 2;
	MARBLE_FACTION_TYPE_ALLY = 3;
	MARBLE_FACTION_TYPE_FIELD = 4;
}

enum FIPPKLCOEGJ {
	MARBLE_HP_CHANGE_TYPE_NONE = 0;
	MARBLE_HP_CHANGE_TYPE_CRITICAL = 1;
	MARBLE_HP_CHANGE_TYPE_SPINE = 2;
}

enum PPIFFKJEJJA {
	Marble_Game_Phase_None = 0;
	Marble_Game_Phase_Ready = 1;
	Marble_Game_Phase_Delay = 2;
	Marble_Game_Phase_Loading = 3;
	Marble_Game_Phase_LoadFinish = 4;
	Marble_Game_Phase_Performance = 5;
	Marble_Game_Phase_PerformanceFinish = 6;
	Marble_Game_Phase_RoundA = 7;
	Marble_Game_Phase_RoundB = 8;
	Marble_Game_Phase_Simulate = 9;
	Marble_Game_Phase_SimulateFinish = 10;
	Marble_Game_Phase_Tech = 11;
	Marble_Game_Phase_TechUI = 12;
	Marble_Game_Phase_TechFinish = 13;
	Marble_Game_Phase_Finish = 14;
	Marble_Game_Phase_PreRound = 15;
}

message KPBFCKNEEIA {
	int32 BLGNMALBOLO = 1;
	uint64 LDNBEIDJBHI = 3;
	FFJPPNGGLFF OILPCHBIJNO = 8;
}

message GLDHEPJPMFM {
	repeated KPBFCKNEEIA action_result_list = 14;
}

message PFGAIEBGHCP {
	float x = 15;
	float y = 9;
}
message FightMatch3UseItemCsReq {
	PFGAIEBGHCP KBCEJINFNNJ = 9;
	uint32 item_id = 2;
}

message AKOKICDPFMP {
	uint32 AHEHKCILDFA = 9;
	oneof HBFOFPDAFPD {
		LBAOGIBPJOP LGPIEMDLHJM = 1111;
		GLDNBPFCNHD PHMCJEJIDJA = 672;
		ICAOOPPMJDJ rogue_finish_info = 1833;
		MAOGFDKDCKM MEJDMJIKIMO = 1983;
		GOCKGIGBDCG JHFGDIJPFCG = 1886;
	}
}
message FightMatch3SwapCsReq {
	repeated AKOKICDPFMP LNDIGHEIHLN = 8;
}

message LBAOGIBPJOP {
	repeated uint32 JJEFBPKPKBK = 2;
	JOMKPEGEFMP CEIFKJIEAJE = 6;
	uint32 NLIBKABFGCC = 11;
	repeated CBBDIOMIFHD LIPJDJPMOKB = 1206;
	uint32 DKPNENBHELH = 7;
	uint32 JIJHAAIHNCN = 13;
	bool LIKHCLPMHJK = 1;
	uint32 MODDKLNDAMK = 14;
	uint32 PBFAIOJJGNL = 10;
	bool JIKEIGBCABB = 9;
	JOMKPEGEFMP HJEFOLKGAEI = 5;
	repeated uint32 PCMGAGAHBLK = 12;
	uint32 level_id = 4;
	uint32 EIGABCKEDNP = 3;
	uint32 KHCMOFPFOAK = 15;
	uint32 BBDOPLEKIAC = 8;
}

message GKLOALDHNEF {
	uint32 item_id = 13;
	int32 JPHEDNECAGD = 11;
	int32 FALBKIMMPIH = 2;
	uint32 JOJAHIAFNLK = 9;
	int32 total_damage = 5;
}

message ICAOOPPMJDJ {
	repeated GKLOALDHNEF BPIPOBHCMFD = 6;
	bool DJEEEABMDDK = 3;
	uint32 BLKFGAJHMLK = 1;
	uint32 CHLLMFJGPPA = 2;
	bool is_win = 4;
	int32 CLBNHPEABFK = 7;
	EEIBHJPNJCF KJPMOHFIILO = 15;
}

message DCDNIAJCEHN {
	uint32 JLCIKBLNENH = 285;
	PFGAIEBGHCP LKEFOLCGFGD = 1;
	PFGAIEBGHCP GODNAALNOKL = 14;
	LKKAJCACIJI KAMIHNEJMFG = 5;
	int32 HDBLELEBKHO = 50;
	PFGAIEBGHCP IAAGGMKGODC = 10;
	uint32 id = 13;
	uint32 PNLDLMNKJMK = 148;
	bool PLFKOCCDBAG = 1989;
	uint32 IDABOFPKOKN = 1197;
	uint32 skill_id = 4;
	uint32 JLJIGEPLPMH = 9;
	int32 max_hp = 11;
	uint32 buff_id = 1504;
	uint32 DHELBCIMLGA = 192;
	FIPPKLCOEGJ CCLMFABDENA = 1900;
	uint32 level = 1443;
	PFGAIEBGHCP FNIHJJJGOEE = 2;
	float MNBEMGNNFOD = 426;
	bool NBKELCHILGG = 1127;
	uint32 CIPICLLLIJH = 8;
	PAJNHIAGODD DJOADECJPOB = 6;
	uint32 text_id = 1004;
	uint32 DKPNENBHELH = 87;
	uint32 JIJHAAIHNCN = 1095;
	PFGAIEBGHCP FDNDMHJOHMO = 12;
	float GGBFKENAHOE = 418;
	float time = 15;
	int32 hp = 3;
	int32 attack = 7;
	bool DMBBMFFEJGI = 623;
}

message GLDNBPFCNHD {
	uint32 FMKDIFNJAJC = 6;
	repeated uint32 KNCHEHIIJNN = 12;
	uint32 FOMBHJKDHGO = 1185;
	uint32 NKHPCKEGPCL = 582;
	bool FJKBAIMDPEP = 11;
	IMPKPKAMIAF DNDJKDFHEPE = 4;
	repeated DCDNIAJCEHN HLIEAMPLIPP = 3;
	bool OMKKPGFJHFE = 513;
	repeated DCDNIAJCEHN AINLMGDNHIB = 1593;
	float EEFCBBKKFLC = 8;
	repeated uint32 JLDCFLKCBLD = 7;
	uint32 queue_position = 9;
	uint32 HMFFHGBKOGL = 10;
	uint32 EHCJCILCNOP = 14;
	uint32 KJGDKNJFCPG = 15;
	uint32 extra_id = 1;
	uint32 DHELBCIMLGA = 2;
	uint32 IEPGCLGKHEG = 1166;
	repeated uint32 DPOOAPKPCHF = 5;
	bool PMANBPLFLKL = 13;
}

message MAOGFDKDCKM {
	LBAOGIBPJOP LGPIEMDLHJM = 15;
	repeated HBGHAOPBKJP OLKMCBJFLEJ = 3;
	uint32 CHLLMFJGPPA = 11;
	uint32 IEHFHKMDAGC = 13;
	EOJLNGDDLNN KHCMOFPFOAK = 10;
	float DPLGCEKJACK = 8;
	bool OMKKPGFJHFE = 1;
	uint32 HMFFHGBKOGL = 9;
	repeated HBGHAOPBKJP DIBPGGOOGPK = 2;
	PPIFFKJEJJA phase = 14;
	repeated uint32 KNCHEHIIJNN = 4;
	EOJLNGDDLNN BBDOPLEKIAC = 12;
}

message GOCKGIGBDCG {
	PFGAIEBGHCP KBCEJINFNNJ = 7;
	uint32 CHLLMFJGPPA = 5;
	uint32 item_id = 9;
}

message EOJLNGDDLNN {
	repeated HBGHAOPBKJP NBKHPJHJMHO = 2;
	repeated JALLAPPCPFE MDBGGBLEGEM = 4;
	repeated uint32 JFEDJMKMLFO = 11;
	bool NBKELCHILGG = 13;
	uint32 PANBCNICOHJ = 10;
	uint32 CGNBHKBHICG = 6;
	bool BLALJMMHIFP = 5;
}

message HBGHAOPBKJP {
	float MNBEMGNNFOD = 10;
	int32 hp = 4;
	uint32 level = 7;
	uint32 JLCIKBLNENH = 5;
	bool PMANBPLFLKL = 6;
	bool PLFKOCCDBAG = 14;
	int32 attack = 8;
	uint32 id = 15;
	int32 max_hp = 1;
	uint32 buff_id = 9;
	bool DMBBMFFEJGI = 11;
	bool BMNECPIOPDN = 13;
	PFGAIEBGHCP LKEFOLCGFGD = 3;
	PFGAIEBGHCP FNIHJJJGOEE = 12;
}

message JALLAPPCPFE {
	bool FHOKFDMFNKG = 8;
	uint32 DHELBCIMLGA = 13;
}

enum CmdFightMathc3Type {
	CmdFightMathc3TypeNone = 0;
	CmdFightMatch3SoloAnimEndScRsp = 30194;
	CmdFightMatch3SoloPreTurnEndCsReq = 30190;
	CmdFightMatch3SwapScRsp = 30197;
	CmdFightMatch3StartCountDownScNotify = 30198;
	CmdFightMatch3UseItemScRsp = 30126;
	CmdFightMatch3ChatScNotify = 30107;
	CmdFightMatch3DataScRsp = 30105;
	CmdFightMatch3SoloPreTurnEndScRsp = 30154;
	CmdFightMatch3SoloDataCsReq = 30163;
	CmdFightMatch3SoloDataScRsp = 30167;
	CmdFightMatch3ChatScRsp = 30155;
	CmdFightMatch3SoloUseItemNotify = 30174;
	CmdFightMatch3SwapCsReq = 30102;
	CmdFightMatch3ChatCsReq = 30141;
	CmdFightMatch3TurnEndScNotify = 30179;
	CmdFightMatch3OpponentDataScNotify = 30106;
	CmdFightMatch3SoloSwapNotify = 30178;
	CmdFightMatch3SoloDataUpdateNotify = 30136;
	CmdFightMatch3DataCsReq = 30110;
	CmdFightMatch3TurnStartScNotify = 30153;
	CmdFightMatch3UseItemCsReq = 30116;
	CmdFightMatch3ForceUpdateNotify = 30139;
	CmdFightMatch3SoloAnimEndCsReq = 30172;
}

enum DGFCBOFAOIA {
	MATCH3_STATE_IDLE = 0;
	MATCH3_STATE_START = 1;
	MATCH3_STATE_MATCH = 2;
	MATCH3_STATE_GAME = 3;
	MATCH3_STATE_HALFTIME = 4;
	MATCH3_STATE_OVER = 5;
}

enum NPPNFPPENMC {
	MATCH3_PLAYER_STATE_ALIVE = 0;
	MATCH3_PLAYER_STATE_DYING = 1;
	MATCH3_PLAYER_STATE_DEAD = 2;
	MATCH3_PLAYER_STATE_LEAVE = 3;
}

enum BFILLIOBMFN {
	EVENT_BEGIN = 0;
	EVENT_BREAK = 1;
	EVENT_FALL = 2;
	EVENT_REFRESH = 3;
	EVENT_BIRD_SKILL = 4;
	EVENT_SHUFFLE = 5;
}

enum KJJLDIMBGMM {
	MATCH3_SOLO_STATE_IDLE = 0;
	MATCH3_SOLO_STATE_START = 1;
	MATCH3_SOLO_STATE_GAME = 2;
	MATCH3_SOLO_STATE_ANIM = 3;
	MATCH3_SOLO_STATE_OVER = 4;
	MATCH3_SOLO_STATE_DEL = 5;
}

enum NLAAMOGOOBE {
	MATCH3_BATTLE_OP_TYPE_NONE = 0;
	MATCH3_BATTLE_OP_TYPE_SWAP = 1;
	MATCH3_BATTLE_OP_TYPE_USE_ITEM = 2;
}

enum GANMCIJCOKI {
	MATCH3_BATTLE_BUFF_TYPE_NONE = 0;
	MATCH3_BATTLE_BUFF_TYPE_DETONATE_BOMB_RECUR = 1;
	MATCH3_BATTLE_BUFF_TYPE_ACTIVIZATION = 2;
	MATCH3_BATTLE_BUFF_TYPE_SCORE_BONUS = 3;
}

enum ABBDJBMIIBE {
	MATCH3_SOLO_UPDATE_REASON_DEFAULT = 0;
	MATCH3_SOLO_UPDATE_REASON_TURN_START = 1;
	MATCH3_SOLO_UPDATE_REASON_TURN_END = 2;
	MATCH3_SOLO_UPDATE_REASON_GAME_START = 3;
	MATCH3_SOLO_UPDATE_REASON_GAME_END = 4;
	MATCH3_SOLO_UPDATE_REASON_GM = 5;
}

message MEKDNIKFDNA {
	uint32 OGNEPBFPILH = 5;
	uint32 hp = 10;
	uint32 score_id = 14;
	uint32 NMLFFOGBPOC = 1;
	uint32 LDNBEIDJBHI = 4;
	repeated BHGPHKLEHEC item_list = 13;
	NPPNFPPENMC state = 15;
	uint32 rank = 8;
	bool HNJFFFJDGNE = 11;
}

message KLDMJEMIMCN {
	uint64 MCOKHHFPBPJ = 7;
	DGFCBOFAOIA JGIBHFJMOBE = 15;
	int32 HCBBHCKJNJI = 8;
	repeated MEKDNIKFDNA CPKPINCCEIP = 4;
	MDOHAFBEEPK MEJDMJIKIMO = 13;
	repeated uint32 HBANCCOKOFC = 14;
	uint32 DANCCAOJLJN = 5;
}

message JJAEPDIHCNL {
	uint32 FPBEDNCOCHO = 14;
	uint32 HECKMDLOLAG = 2;
}

message MDOHAFBEEPK {
	NPPNFPPENMC KJPMOHFIILO = 3;
	repeated KNDBNNPIDPB buff_list = 5;
	uint32 MIDEJNJCAIA = 9;
	uint32 GDFNDPMJDAF = 1;
	uint32 score_id = 2;
	repeated BHGPHKLEHEC item_list = 8;
	uint32 cur_hp = 14;
	uint32 energy_info = 12;
	CDIMEMFJJFP NIAEGHJLNMB = 10;
	repeated ODDKKAHNMHK op_list = 13;
	uint32 ANHFJKEPCGF = 6;
	repeated uint32 AIHMGHAJGKJ = 7;
	uint32 NAJLPNLNOJE = 4;
	uint32 PKDPIEMGIBE = 11;
}

message EGCDDLKHFEB {
	MDOHAFBEEPK MLPCFGDAFND = 4;
	BFILLIOBMFN OLKNDFJBDGJ = 2;
}
message FightMatch3DataCsReq {
	int32 player_data = 13;
}
message FightMatch3DataScRsp {
	KLDMJEMIMCN data = 5;
	uint32 retcode = 3;
	repeated CBBDIOMIFHD LIPJDJPMOKB = 2;
}
message FightMatch3StartCountDownScNotify {
	KLDMJEMIMCN data = 3;
}
message FightMatch3TurnStartScNotify {
	KLDMJEMIMCN HKPODFLGCDJ = 4;
}
message FightMatch3TurnEndScNotify {
	KLDMJEMIMCN CINLCMHHKKO = 11;
	KLDMJEMIMCN HIKLOBGICMP = 9;
}

message GALEOPDOMKG {
	JJAEPDIHCNL FECLGLBFIDH = 13;
	uint32 cur_index = 5;
	repeated EGCDDLKHFEB ECKKBLNELBM = 7;
	JJAEPDIHCNL PHNLDPOKBKL = 15;
}
message FightMatch3SwapScRsp {
	bool PGMGMJDILCL = 13;
	uint32 retcode = 3;
	uint32 cur_index = 5;
	MDOHAFBEEPK CHMAONMMEGM = 2;
}
message FightMatch3OpponentDataScNotify {
	uint32 DANCCAOJLJN = 4;
	NPPNFPPENMC state = 2;
	uint32 hp = 1;
	uint32 NMLFFOGBPOC = 5;
	uint32 score_id = 3;
	repeated BHGPHKLEHEC item_list = 9;
}
message FightMatch3ChatCsReq {
	uint32 HABDKBFMKEE = 10;
}
message FightMatch3ChatScRsp {
	uint32 retcode = 9;
	uint32 HABDKBFMKEE = 14;
}
message FightMatch3ChatScNotify {
	uint32 HABDKBFMKEE = 14;
	uint32 EGKPFGNJAHN = 4;
}
message FightMatch3ForceUpdateNotify {
	KLDMJEMIMCN data = 3;
}

message BHGPHKLEHEC {
	uint32 FOJCMHIMAFN = 9;
	uint32 NFFNNEFCMOI = 12;
	uint32 cur_times = 10;
	uint32 DMKFFFPDLDI = 2;
}

message ODDKKAHNMHK {
	uint32 HEFMJAHOHKG = 13;
	NLAAMOGOOBE op_type = 9;
}

message KNDBNNPIDPB {
	uint32 display_value = 8;
	GANMCIJCOKI PEPLINOGEGC = 15;
}

message BFDLHIDCNMF {
	bool COCONGACIFJ = 2;
	repeated BHGPHKLEHEC item_list = 4;
	uint32 MIDEJNJCAIA = 13;
	NPPNFPPENMC KJPMOHFIILO = 6;
	uint32 LDNBEIDJBHI = 8;
	uint32 energy_info = 5;
	uint32 ANHFJKEPCGF = 14;
	CDIMEMFJJFP NIAEGHJLNMB = 9;
	uint32 OGNEPBFPILH = 1;
	bool JDNGFBOAJAP = 7;
	uint32 score_id = 10;
}

message IOIJEPGMJAF {
	MDOHAFBEEPK MEJDMJIKIMO = 15;
	int32 HCBBHCKJNJI = 10;
	repeated BFDLHIDCNMF CPKPINCCEIP = 9;
	uint32 HLOACJFDNGN = 4;
	KJJLDIMBGMM JGIBHFJMOBE = 14;
	uint32 EBKPMEOBNPO = 6;
	uint64 MCOKHHFPBPJ = 1;
}

message BCEKDIDFLCM {
	repeated JJAEPDIHCNL GDIMMFMFPJA = 1;
	uint32 use_item_id = 3;
	repeated EGCDDLKHFEB ECKKBLNELBM = 13;
}
message FightMatch3UseItemScRsp {
	MDOHAFBEEPK EHELGAOABJJ = 14;
	uint32 use_item_id = 10;
	uint32 retcode = 4;
}
message FightMatch3SoloDataCsReq {
}
message FightMatch3SoloDataScRsp {
	repeated CBBDIOMIFHD LIPJDJPMOKB = 8;
	IOIJEPGMJAF data = 5;
	uint32 retcode = 3;
}
message FightMatch3SoloAnimEndCsReq {
	uint32 HLOACJFDNGN = 8;
	uint32 GDCHLIBMFKM = 1;
	uint32 BKGGNMBBGNL = 15;
}
message FightMatch3SoloAnimEndScRsp {
	uint32 retcode = 14;
}
message FightMatch3SoloDataUpdateNotify {
	IOIJEPGMJAF data = 13;
	ABBDJBMIIBE reason = 4;
}
message FightMatch3SoloSwapNotify {
	GALEOPDOMKG MEDBONHALOD = 11;
	MDOHAFBEEPK EHELGAOABJJ = 5;
}
message FightMatch3SoloUseItemNotify {
	BCEKDIDFLCM MEDBONHALOD = 8;
	MDOHAFBEEPK EHELGAOABJJ = 12;
}
message FightMatch3SoloPreTurnEndCsReq {
}
message FightMatch3SoloPreTurnEndScRsp {
	uint32 retcode = 10;
}

enum CmdFriendType {
	CmdFriendTypeNone = 0;
	CmdSetAssistScRsp = 2901;
	CmdDeleteFriendCsReq = 2916;
	CmdApplyFriendCsReq = 2997;
	CmdSetForbidOtherApplyFriendScRsp = 2985;
	CmdCurAssistChangedNotify = 2966;
	CmdGetFriendApplyListInfoScRsp = 2902;
	CmdGetFriendRecommendLineupCsReq = 2923;
	CmdGetCurAssistScRsp = 2925;
	CmdHandleFriendScRsp = 2907;
	CmdSyncAddBlacklistScNotify = 2994;
	CmdGetAssistListCsReq = 2924;
	CmdGetFriendDevelopmentInfoCsReq = 2912;
	CmdGetFriendChallengeLineupScRsp = 2983;
	CmdTakeAssistRewardScRsp = 2960;
	CmdGetFriendAssistListScRsp = 2958;
	CmdSearchPlayerScRsp = 2992;
	CmdDeleteFriendScRsp = 2926;
	CmdSyncHandleFriendScNotify = 2939;
	CmdGetFriendBattleRecordDetailCsReq = 2904;
	CmdDeleteBlacklistCsReq = 2909;
	CmdSyncDeleteFriendScNotify = 2963;
	CmdAddBlacklistCsReq = 2967;
	CmdGetFriendRecommendLineupDetailCsReq = 2995;
	CmdHandleFriendCsReq = 2955;
	CmdGetFriendBattleRecordDetailScRsp = 2986;
	CmdGetFriendDevelopmentInfoScRsp = 2964;
	CmdGetFriendLoginInfoScRsp = 2913;
	CmdGetFriendRecommendLineupScRsp = 2914;
	CmdGetPlatformPlayerInfoCsReq = 2928;
	CmdGetAssistListScRsp = 2973;
	CmdGetFriendRecommendLineupDetailScRsp = 2918;
	CmdSetFriendMarkCsReq = 2929;
	CmdSetAssistCsReq = 2942;
	CmdGetFriendChallengeDetailCsReq = 2903;
	CmdSearchPlayerCsReq = 2969;
	CmdGetAssistHistoryCsReq = 2935;
	CmdReportPlayerCsReq = 2954;
	CmdGetCurAssistCsReq = 2951;
	CmdGetPlayerDetailInfoScRsp = 2953;
	CmdSetForbidOtherApplyFriendCsReq = 2946;
	CmdTakeAssistRewardCsReq = 2915;
	CmdGetFriendApplyListInfoCsReq = 2979;
	CmdSetFriendRemarkNameCsReq = 2974;
	CmdApplyFriendScRsp = 2906;
	CmdGetFriendChallengeLineupCsReq = 2982;
	CmdGetFriendLoginInfoCsReq = 2908;
	CmdReportPlayerScRsp = 2962;
	CmdGetPlayerDetailInfoCsReq = 2998;
	CmdGetFriendAssistListCsReq = 2945;
	CmdGetFriendChallengeDetailScRsp = 2957;
	CmdGetFriendRecommendListInfoScRsp = 2978;
	CmdSyncApplyFriendScNotify = 2941;
	CmdSetFriendRemarkNameScRsp = 2990;
	CmdGetFriendListInfoScRsp = 2905;
	CmdGetFriendListInfoCsReq = 2910;
	CmdNewAssistHistoryNotify = 2988;
	CmdAddBlacklistScRsp = 2972;
	CmdGetPlatformPlayerInfoScRsp = 2989;
	CmdSetFriendMarkScRsp = 2971;
	CmdGetFriendRecommendListInfoCsReq = 2936;
	CmdDeleteBlacklistScRsp = 2920;
	CmdGetAssistHistoryScRsp = 2937;
}

enum FriendOnlineStatus {
	FRIEND_ONLINE_STATUS_OFFLINE = 0;
	FRIEND_ONLINE_STATUS_ONLINE = 1;
}

enum FriendApplySource {
	FRIEND_APPLY_SOURCE_NONE = 0;
	FRIEND_APPLY_SOURCE_SEARCH = 1;
	FRIEND_APPLY_SOURCE_RECOMMEND = 2;
	FRIEND_APPLY_SOURCE_ASSIST = 3;
	FRIEND_APPLY_SOURCE_RECOMMEND_ASSIST = 4;
	FRIEND_APPLY_SOURCE_PSN_FRIEND = 5;
	FRIEND_APPLY_SOURCE_ASSIST_REWARD = 6;
}

message AssistSimpleInfo {
	uint32 dressed_skin_id = 13;
	uint32 avatar_id = 1;
	uint32 level = 10;
	uint32 pos = 3;
}

message IHKGNJDNALJ {
	uint32 group_id = 13;
	uint32 FCCDILGGOCI = 14;
	uint32 JGMIPMDPPIJ = 1;
	uint32 KHCNAJOKJHJ = 15;
}

message KPIGLOPEMCF {
	uint32 IJHLOJEFCPM = 7;
}

message PHHLIOGFDEK {
	repeated uint32 CAPICCCIEBO = 13;
	uint32 OFGBJCCCIKE = 14;
	uint32 IJHLOJEFCPM = 15;
}

message BCPDFIPOMAP {
	PHHLIOGFDEK LBHJEHFJLNF = 14;
}

message OBIHNGMNKEK {
	oneof JEHDFHLGCNL {
		KPIGLOPEMCF LOONEHFNAPC = 9;
		BCPDFIPOMAP DAOPOHAMOMF = 6;
	}
}

message HIEJJBDNCNH {
	BattleRecordType display_type = 2;
	IHKGNJDNALJ EBOOMGDGNEP = 9;
	OBIHNGMNKEK JFPCPDCFLMD = 8;
}

message PlayerSimpleInfo {
	uint32 ANPLLAOBFJI = 9;
	string AKCEJFCFBAN = 11;
	string nickname = 10;
	int64 last_active_time = 8;
	uint32 chat_bubble_id = 6;
	uint32 head_icon = 14;
	string signature = 5;
	string GMALCPNOHBF = 12;
	uint32 uid = 1;
	PlatformType platform = 4;
	bool is_banned = 15;
	uint32 level = 7;
	FriendOnlineStatus online_status = 3;
	repeated AssistSimpleInfo assist_simple_info_list = 13;
}

message DisplayEquipmentInfo {
	uint32 level = 3;
	uint32 rank = 2;
	uint32 tid = 7;
	uint32 promotion = 5;
	uint32 exp = 6;
}

message DisplayRelicInfo {
	uint32 tid = 6;
	uint32 main_affix_id = 13;
	uint32 level = 1;
	uint32 exp = 2;
	uint32 type = 14;
	repeated RelicAffix sub_affix_list = 11;
}

message DisplayAvatarDetailInfo {
	DisplayEquipmentInfo equipment = 2;
	uint32 avatar_id = 14;
	uint32 dressed_skin_id = 11;
	uint32 exp = 8;
	uint32 rank = 3;
	uint32 promotion = 5;
	repeated AvatarSkillTree skilltree_list = 10;
	uint32 enhanced_id = 12;
	uint32 pos = 7;
	repeated DisplayRelicInfo relic_list = 1;
	uint32 level = 15;
}

message PlayerCollectionInfo {
	uint32 NLJIFEKDPHN = 12;
	uint32 PGCDMMNNCJC = 5;
	uint32 PJCJNKBEIMK = 6;
	uint32 BDBMIKDJLKO = 15;
	uint32 LJPEKEDICML = 7;
}

message PlayerRecordInfo {
	uint32 HKNOAKGCJBK = 1;
	uint32 CFDFMGLLICO = 12;
	uint32 GEKKNDONHLJ = 7;
	uint32 EHBDEIJJOHK = 6;
	uint32 JFPGBKBPBNF = 11;
	uint32 EMJDEBDMHLL = 13;
	uint32 BHFEFEODNIM = 9;
	uint32 FHKKMPDDMGO = 4;
	PlayerCollectionInfo collection_info = 10;
}

message PrivacySettings {
	bool KJNCCKHJFHE = 7;
	bool AICNFAOBCPI = 6;
	bool NJFMILJOFOK = 12;
	bool APONEIDMPHL = 4;
	bool PBKBGLHHKPE = 8;
}

message PlayerDisplaySettings {
	OBIHNGMNKEK JFPCPDCFLMD = 12;
	repeated IHKGNJDNALJ challenge_list = 13;
}

message PlayerDetailInfo {
	string AKCEJFCFBAN = 4;
	string signature = 6;
	uint32 ANPLLAOBFJI = 1212;
	bool EMOBIJBDKEI = 13;
	PlatformType platform = 9;
	PlayerDisplaySettings ONKHLHOJHGN = 395;
	uint32 OOOPBHIMNFD = 1;
	uint32 world_level = 7;
	bool is_banned = 12;
	repeated DisplayAvatarDetailInfo assist_avatar_list = 440;
	PlayerRecordInfo record_info = 8;
	string GMALCPNOHBF = 14;
	uint32 head_icon = 3;
	PrivacySettings privacy_settings = 890;
	uint32 uid = 10;
	uint32 KBMGBNINFBK = 5;
	repeated DisplayAvatarDetailInfo display_avatar_list = 11;
	uint32 level = 15;
	string nickname = 2;
}

message FriendSimpleInfo {
	bool is_marked = 15;
	PlayingState playing_state = 13;
	PlayerSimpleInfo player_info = 10;
	int64 create_time = 3;
	string remark_name = 4;
	HIEJJBDNCNH ILCHAJCFFBF = 7;
}

message FriendApplyInfo {
	PlayerSimpleInfo player_info = 9;
	int64 apply_time = 2;
}

message FriendRecommendInfo {
	bool JHOLBLPEGLJ = 12;
	PlayerSimpleInfo player_info = 2;
}

message PlayerAssistInfo {
	DisplayAvatarDetailInfo MDHFANLHNMA = 2;
	PlayerSimpleInfo player_info = 12;
}

message FLCMJAHGKFK {
	string GMALCPNOHBF = 8;
	uint32 uid = 6;
	PlatformType platform = 12;
	uint32 level = 3;
	uint32 NPPPHGFENPH = 15;
	uint32 INNANICLCAE = 13;
	string remark_name = 11;
	string nickname = 10;
	uint32 head_icon = 4;
}

message FCNOLLFGPCK {
	uint32 buff_two = 9;
	uint32 INHDDNNPBDB = 15;
	uint32 score_id = 3;
	uint32 buff_one = 14;
	string remark_name = 8;
	PlayerSimpleInfo player_info = 1;
	repeated ChallengeLineupList lineup_list = 5;
}

message CHKIICNAPHA {
	uint32 group_id = 1;
	uint32 KHCNAJOKJHJ = 14;
	oneof JDICGGKKOOI {
		ChallengeStatistics challenge_default = 224;
		ChallengeStoryStatistics challenge_story = 1486;
		ChallengeBossStatistics challenge_boss = 81;
	}
}

message OGNLDADPJFO {
	RogueFinishInfo rogue_finish_info = 9;
	uint32 map_id = 6;
}
message EAIMKOMHKHD {
	uint32 avatar_id = 14;
	uint32 GGDIIBCDOBB = 5;
}

message ANGOAMADOMA {
	RogueTournFinishInfo tourn_finish_info = 14;
	uint32 JBLOKLCPAFN = 3;
	uint32 IJHLOJEFCPM = 12;
	uint32 OFGBJCCCIKE = 6;
}

message GGKBHALPIDK {
	uint32 IMLHFGEPCAN = 4;
	uint32 LHBDONJIICC = 2;
	uint32 area_id = 15;
}

message LFJPDDCNBKC {
	uint32 EPLJMCAPMPC = 4;
	uint32 FNMGAOHMLIM = 3;
	uint32 FJHIGBBMJDM = 5;
	uint32 area_id = 7;
}

message NHAGPMMCDCF {
	uint32 OIAJANCBABP = 4;
	uint32 area_id = 9;
	uint32 AGIJKFBCJOC = 8;
	uint32 ONAHHAMHFDB = 11;
}

message OKDBOGBABNI {
	GGKBHALPIDK PLCCEHDNAFL = 8;
	NHAGPMMCDCF HDLJBADEKFI = 6;
	LFJPDDCNBKC APMJFGKIFON = 4;
	oneof GNKACKHFHHD {
		OGNLDADPJFO EDGFEDJBAHF = 551;
		ANGOAMADOMA OPFPOLCGMED = 128;
	}
}

message IOJHJAHIMHM {
	uint32 area_id = 12;
}

message JIENKFADCHE {
	uint32 NJOICIOPBNH = 14;
	uint32 area_id = 15;
}

message MEEHCBGDBEA {
	uint32 challenge_id = 12;
}

message DHAHAKMPNAF {
	int64 time = 1;
	DevelopmentType EJHMNKHEPFA = 7;
	oneof EBBMJDKKFIB {
		IOJHJAHIMHM LIIBBGGEHFP = 926;
		MEEHCBGDBEA IKFFOBAMGHJ = 1058;
		uint32 avatar_id = 932;
		uint32 MDMGKHLHIIN = 367;
		uint32 CKKNNHMDCOG = 1029;
		JIENKFADCHE IELHLBFFAGK = 824;
		uint32 panel_id = 195;
	}
}
message GetFriendListInfoCsReq {
}
message GetFriendListInfoScRsp {
	uint32 retcode = 14;
	repeated FriendSimpleInfo friend_list = 6;
	repeated PlayerSimpleInfo black_list = 12;
}
message GetPlayerDetailInfoCsReq {
	uint32 uid = 5;
}
message GetPlayerDetailInfoScRsp {
	uint32 retcode = 15;
	PlayerDetailInfo detail_info = 10;
}
message GetFriendApplyListInfoCsReq {
}
message GetFriendApplyListInfoScRsp {
	uint32 retcode = 14;
	repeated uint32 send_apply_list = 12;
	repeated FriendApplyInfo receive_apply_list = 15;
}
message ApplyFriendCsReq {
	FriendApplySource source = 3;
	uint32 uid = 6;
}
message ApplyFriendScRsp {
	uint32 uid = 6;
	uint32 retcode = 2;
}
message SyncApplyFriendScNotify {
	FriendApplyInfo apply_info = 12;
}
message HandleFriendCsReq {
	uint32 uid = 1;
	bool is_accept = 8;
}
message HandleFriendScRsp {
	FriendSimpleInfo friend_info = 15;
	bool is_accept = 9;
	uint32 uid = 2;
	uint32 retcode = 11;
}
message SyncHandleFriendScNotify {
	bool is_accept = 8;
	uint32 uid = 13;
	FriendSimpleInfo friend_info = 1;
}
message DeleteFriendCsReq {
	uint32 uid = 6;
	uint32 FIOCDBIPCGB = 14;
}
message DeleteFriendScRsp {
	uint32 retcode = 6;
	uint32 uid = 12;
}
message SyncDeleteFriendScNotify {
	uint32 uid = 11;
}
message AddBlacklistCsReq {
	uint32 uid = 8;
}
message AddBlacklistScRsp {
	uint32 retcode = 11;
	PlayerSimpleInfo black_info = 6;
}
message SyncAddBlacklistScNotify {
	uint32 uid = 13;
}
message GetFriendRecommendListInfoCsReq {
	bool AHOILNFIIEG = 12;
}
message GetFriendRecommendListInfoScRsp {
	repeated FriendRecommendInfo player_info_list = 14;
	uint32 retcode = 4;
}
message SetFriendRemarkNameCsReq {
	uint32 uid = 12;
	string remark_name = 6;
	uint32 reason = 3;
}
message SetFriendRemarkNameScRsp {
	string remark_name = 8;
	uint32 retcode = 9;
	uint32 uid = 2;
}
message ReportPlayerCsReq {
	string MIMAKHAABAH = 13;
	uint32 EHBCLJFPOOE = 12;
	uint32 uid = 10;
}
message ReportPlayerScRsp {
	uint32 retcode = 10;
}
message DeleteBlacklistCsReq {
	uint32 uid = 4;
}
message DeleteBlacklistScRsp {
	uint32 uid = 2;
	uint32 retcode = 6;
}
message SearchPlayerCsReq {
	repeated uint32 uid_list = 9;
	bool AHOILNFIIEG = 14;
}
message SearchPlayerScRsp {
	repeated uint32 result_uid_list = 8;
	repeated PlayerSimpleInfo simple_info_list = 3;
	uint32 retcode = 13;
}
message GetAssistListCsReq {
	bool AHOILNFIIEG = 7;
	bool KIBOAGMOJCP = 15;
}
message GetAssistListScRsp {
	uint32 retcode = 10;
	repeated PlayerAssistInfo assist_list = 8;
}
message SetAssistCsReq {
	uint32 uid = 11;
	uint32 avatar_id = 15;
}
message SetAssistScRsp {
	uint32 retcode = 5;
	uint32 uid = 11;
	uint32 avatar_id = 7;
}
message GetCurAssistCsReq {
}
message GetCurAssistScRsp {
	PlayerAssistInfo assist_info = 11;
	uint32 retcode = 4;
}
message GetAssistHistoryCsReq {
}
message GetAssistHistoryScRsp {
	repeated uint32 today_use_uid_list = 8;
	uint32 OMHCHJLLIIF = 5;
	uint32 NFJJAPNPPKP = 12;
	uint32 PBFNEIGOPMP = 1;
	uint32 retcode = 6;
}
message NewAssistHistoryNotify {
	uint32 NFJJAPNPPKP = 9;
}
message TakeAssistRewardCsReq {
}
message TakeAssistRewardScRsp {
	ItemList reward = 6;
	repeated FLCMJAHGKFK NLCNBIEHCOH = 12;
	uint32 retcode = 8;
}
message CurAssistChangedNotify {
	PlayerAssistInfo assist_info = 1;
}
message GetPlatformPlayerInfoCsReq {
	PlatformType platform = 2;
	repeated string DNENLCHJEKG = 3;
}
message GetPlatformPlayerInfoScRsp {
	uint32 retcode = 1;
	repeated PlayerSimpleInfo player_info_list = 15;
}
message GetFriendLoginInfoCsReq {
}
message GetFriendLoginInfoScRsp {
	repeated uint32 DBNDOMDMMGF = 15;
	bool BOHNBJMMKBO = 10;
	repeated uint32 IIHDBINOPMG = 6;
	bool LIFCEHLFDNM = 14;
	uint32 retcode = 5;
}
message SetForbidOtherApplyFriendCsReq {
	bool MJPFLIKAFEJ = 13;
}
message SetForbidOtherApplyFriendScRsp {
	bool MJPFLIKAFEJ = 10;
	uint32 retcode = 6;
}
message SetFriendMarkCsReq {
	uint32 reason = 10;
	bool ADJGKCOKOLN = 15;
	uint32 uid = 3;
}
message SetFriendMarkScRsp {
	uint32 uid = 5;
	uint32 retcode = 1;
	bool ADJGKCOKOLN = 2;
}
message GetFriendAssistListCsReq {
	AssistAvatarType MLOOGABMIHP = 1;
	repeated uint32 KCPAODEBJDG = 4;
	repeated uint32 BIJGJECJMHM = 7;
	uint32 target_side = 8;
	bool AHOILNFIIEG = 10;
}
message GetFriendAssistListScRsp {
	repeated PlayerAssistInfo assist_list = 11;
	uint32 retcode = 12;
	uint32 target_side = 9;
}
message GetFriendChallengeLineupCsReq {
	uint32 challenge_id = 9;
}
message GetFriendChallengeLineupScRsp {
	bool ONOCJEEBFCI = 13;
	repeated FCNOLLFGPCK challenge_recommend_list = 3;
	uint32 retcode = 8;
}
message GetFriendChallengeDetailCsReq {
	uint32 challenge_id = 11;
	uint32 uid = 4;
}
message GetFriendChallengeDetailScRsp {
	uint32 challenge_id = 10;
	uint32 retcode = 14;
	repeated DisplayAvatarDetailInfo CCGDMOOLHHB = 4;
	uint32 uid = 3;
}

message KAMCIOPBPGA {
	repeated uint32 JHIAKMCHPLB = 12;
	string remark_name = 3;
	repeated OILPIACENNH avatar_list = 13;
	PlayerSimpleInfo player_info = 1;
}

message KEHMGKIHEFN {
	oneof NFGNBBJGANG {
		FCNOLLFGPCK GIEIDJEEPAC = 11;
		KAMCIOPBPGA ADDCJEJPFEF = 3;
	}
}
message GetFriendRecommendLineupCsReq {
	DLLLEANDAIH type = 1;
	uint32 key = 15;
}
message GetFriendRecommendLineupScRsp {
	repeated KEHMGKIHEFN challenge_recommend_list = 11;
	DLLLEANDAIH type = 12;
	bool ONOCJEEBFCI = 9;
	uint32 key = 10;
	uint32 retcode = 14;
}
message GetFriendRecommendLineupDetailCsReq {
	uint32 key = 3;
	DLLLEANDAIH type = 6;
	uint32 uid = 11;
}
message GetFriendRecommendLineupDetailScRsp {
	repeated DisplayAvatarDetailInfo CCGDMOOLHHB = 12;
	uint32 retcode = 1;
	DLLLEANDAIH type = 14;
	uint32 uid = 6;
	uint32 key = 11;
}
message GetFriendBattleRecordDetailCsReq {
	uint32 uid = 14;
}
message GetFriendBattleRecordDetailScRsp {
	uint32 uid = 4;
	uint32 retcode = 2;
	OKDBOGBABNI PGBBEPKAHBH = 11;
	repeated CHKIICNAPHA JDIDIHOBAOD = 14;
}
message GetFriendDevelopmentInfoCsReq {
	uint32 uid = 3;
}
message GetFriendDevelopmentInfoScRsp {
	uint32 retcode = 1;
	repeated DHAHAKMPNAF JBHBFBJGBPH = 3;
	uint32 uid = 13;
}

enum CmdGachaType {
	CmdGachaTypeNone = 0;
	CmdDoGachaCsReq = 1998;
	CmdGetGachaCeilingCsReq = 1979;
	CmdGetGachaCeilingScRsp = 1902;
	CmdExchangeGachaCeilingScRsp = 1906;
	CmdExchangeGachaCeilingCsReq = 1997;
	CmdSetGachaDecideItemCsReq = 1941;
	CmdGachaDecideItemChangeScNotify = 1907;
	CmdGetGachaInfoScRsp = 1905;
	CmdSetGachaDecideItemScRsp = 1955;
	CmdGetGachaInfoCsReq = 1910;
	CmdDoGachaScRsp = 1953;
}
message GetGachaInfoCsReq {
}

message GachaCeilingAvatar {
	uint32 repeated_cnt = 3;
	uint32 avatar_id = 12;
}

message GachaCeiling {
	bool is_claimed = 12;
	uint32 ceiling_num = 13;
	repeated GachaCeilingAvatar avatar_list = 11;
}

message LOPDJAHFPHN {
	uint32 CHDOIBFEHLP = 4;
	uint32 IINCDJPOOMC = 6;
	repeated uint32 DLABDNPIHFF = 14;
	repeated uint32 JIGONEALCPC = 9;
}

message GachaInfo {
	string detail_webview = 3;
	repeated uint32 prize_item_list = 1;
	uint32 gacha_id = 4;
	repeated uint32 ANNGPMHPNIM = 9;
	uint32 GDIFAAHIFBH = 12;
	uint32 KMNJNMJFGBG = 14;
	int64 begin_time = 11;
	string drop_history_webview = 13;
	int64 end_time = 7;
	repeated uint32 item_detail_list = 2;
	uint32 IINCDJPOOMC = 10;
	GachaCeiling gacha_ceiling = 15;
}
message GetGachaInfoScRsp {
	uint32 NOPBEBKHIKA = 6;
	repeated LOPDJAHFPHN IDEHAJMEMAK = 11;
	uint32 retcode = 1;
	uint32 gacha_random = 15;
	uint32 NBELNOIPOEK = 9;
	uint32 DJNDMNPEBKA = 7;
	repeated GachaInfo gacha_info_list = 3;
}
message DoGachaCsReq {
	uint32 gacha_random = 15;
	uint32 gacha_id = 1;
	uint32 simulate_magic = 11;
	uint32 gacha_num = 3;
}

message GachaItem {
	bool is_new = 9;
	ItemList transfer_item_list = 7;
	Item gacha_item = 2;
	ItemList token_item = 15;
}
message DoGachaScRsp {
	uint32 retcode = 13;
	uint32 PENILHGLHHM = 7;
	uint32 KMNJNMJFGBG = 4;
	repeated GachaItem gacha_item_list = 5;
	uint32 GDIFAAHIFBH = 2;
	uint32 gacha_id = 9;
	uint32 ceiling_num = 1;
	uint32 gacha_num = 10;
	uint32 NOPBEBKHIKA = 8;
}
message GetGachaCeilingCsReq {
	uint32 gacha_type = 6;
}
message GetGachaCeilingScRsp {
	uint32 gacha_type = 11;
	uint32 retcode = 12;
	GachaCeiling gacha_ceiling = 3;
}
message ExchangeGachaCeilingCsReq {
	uint32 gacha_type = 13;
	uint32 avatar_id = 9;
}
message ExchangeGachaCeilingScRsp {
	uint32 gacha_type = 2;
	ItemList transfer_item_list = 5;
	uint32 retcode = 11;
	GachaCeiling gacha_ceiling = 8;
	uint32 avatar_id = 14;
}
message SetGachaDecideItemCsReq {
	uint32 gacha_id = 2;
	repeated uint32 DLABDNPIHFF = 11;
	uint32 CHDOIBFEHLP = 3;
}
message SetGachaDecideItemScRsp {
	uint32 retcode = 12;
	LOPDJAHFPHN GDPOEEJNMHN = 2;
}

enum CmdHeartdialType {
	CmdHeartdialTypeNone = 0;
	CmdSubmitEmotionItemScRsp = 6302;
	CmdGetHeartDialInfoCsReq = 6310;
	CmdFinishEmotionDialoguePerformanceScRsp = 6306;
	CmdChangeScriptEmotionCsReq = 6398;
	CmdFinishEmotionDialoguePerformanceCsReq = 6397;
	CmdSubmitEmotionItemCsReq = 6379;
	CmdChangeScriptEmotionScRsp = 6353;
	CmdHeartDialTraceScriptScRsp = 6307;
	CmdHeartDialScriptChangeScNotify = 6341;
	CmdGetHeartDialInfoScRsp = 6305;
	CmdHeartDialTraceScriptCsReq = 6355;
}

enum HeartDialEmotionType {
	HEART_DIAL_EMOTION_TYPE_PEACE = 0;
	HEART_DIAL_EMOTION_TYPE_ANGER = 1;
	HEART_DIAL_EMOTION_TYPE_HAPPY = 2;
	HEART_DIAL_EMOTION_TYPE_SAD = 3;
}

enum HeartDialStepType {
	HEART_DIAL_STEP_TYPE_MISSING = 0;
	HEART_DIAL_STEP_TYPE_FULL = 1;
	HEART_DIAL_STEP_TYPE_LOCK = 2;
	HEART_DIAL_STEP_TYPE_UNLOCK = 3;
	HEART_DIAL_STEP_TYPE_NORMAL = 4;
	HEART_DIAL_STEP_TYPE_CONTROL = 5;
}

enum HeartDialUnlockStatus {
	HEART_DIAL_UNLOCK_STATUS_LOCK = 0;
	HEART_DIAL_UNLOCK_STATUS_UNLOCK_SINGLE = 1;
	HEART_DIAL_UNLOCK_STATUS_UNLOCK_ALL = 2;
}

message HeartDialDialogueInfo {
	uint32 dialogue_id = 10;
	bool FBKEKCGELBE = 13;
}

message HeartDialScriptInfo {
	HeartDialStepType step = 14;
	uint32 script_id = 13;
	bool KKGFIGCHKIB = 2;
	bool JMPEJFICKJO = 3;
	HeartDialEmotionType cur_emotion_type = 1;
}

message MMEINFMDJFG {
	uint32 script_id = 13;
	uint32 KBMMMMCKJNI = 9;
}
message GetHeartDialInfoCsReq {
}
message GetHeartDialInfoScRsp {
	repeated HeartDialScriptInfo script_info_list = 3;
	repeated MMEINFMDJFG OCMOEJIDLAM = 6;
	HeartDialUnlockStatus unlock_status = 8;
	uint32 retcode = 13;
	repeated HeartDialDialogueInfo dialogue_info_list = 4;
}
message ChangeScriptEmotionCsReq {
	HeartDialEmotionType target_emotion_type = 1;
	uint32 script_id = 2;
	uint32 FIHNCOABELA = 9;
}
message ChangeScriptEmotionScRsp {
	uint32 script_id = 15;
	HeartDialEmotionType emotion_type = 2;
	uint32 retcode = 6;
}
message SubmitEmotionItemCsReq {
	uint32 script_id = 1;
	uint32 FIHNCOABELA = 10;
	ItemList item_list = 12;
}
message SubmitEmotionItemScRsp {
	uint32 script_id = 14;
	uint32 retcode = 12;
}
message FinishEmotionDialoguePerformanceCsReq {
	uint32 FIHNCOABELA = 8;
	uint32 dialogue_id = 5;
	uint32 script_id = 1;
}
message FinishEmotionDialoguePerformanceScRsp {
	uint32 retcode = 4;
	uint32 script_id = 7;
	ItemList reward_list = 6;
	uint32 dialogue_id = 12;
}
message HeartDialScriptChangeScNotify {
	repeated HeartDialDialogueInfo changed_dialogue_info_list = 11;
	repeated HeartDialScriptInfo changed_script_info_list = 4;
	repeated MMEINFMDJFG OCMOEJIDLAM = 8;
	HeartDialUnlockStatus unlock_status = 6;
}
message HeartDialTraceScriptCsReq {
	MMEINFMDJFG AGOIPFBDDPO = 3;
}
message HeartDialTraceScriptScRsp {
	MMEINFMDJFG AGOIPFBDDPO = 8;
	uint32 retcode = 6;
}

enum CmdHeliobusType {
	CmdHeliobusTypeNone = 0;
	CmdHeliobusSnsCommentCsReq = 5841;
	CmdHeliobusSnsReadScRsp = 5853;
	CmdHeliobusSelectSkillScRsp = 5872;
	CmdHeliobusStartRaidScRsp = 5854;
	CmdHeliobusSnsPostCsReq = 5879;
	CmdHeliobusInfoChangedScNotify = 5839;
	CmdHeliobusEnterBattleScRsp = 5874;
	CmdHeliobusEnterBattleCsReq = 5878;
	CmdHeliobusLineupUpdateScNotify = 5809;
	CmdHeliobusSelectSkillCsReq = 5867;
	CmdHeliobusStartRaidCsReq = 5890;
	CmdHeliobusSnsLikeScRsp = 5806;
	CmdHeliobusUpgradeLevelCsReq = 5816;
	CmdHeliobusSnsLikeCsReq = 5897;
	CmdHeliobusChallengeUpdateScNotify = 5862;
	CmdHeliobusUpgradeLevelScRsp = 5826;
	CmdHeliobusSnsUpdateScNotify = 5807;
	CmdHeliobusSnsCommentScRsp = 5855;
	CmdHeliobusActivityDataCsReq = 5810;
	CmdHeliobusSnsPostScRsp = 5802;
	CmdHeliobusSnsReadCsReq = 5898;
	CmdHeliobusActivityDataScRsp = 5805;
	CmdHeliobusUnlockSkillScNotify = 5863;
}

message DEJAKPOEPKN {
	uint32 CGFGFMGDPNJ = 8;
	repeated uint32 LFPMAOBGNEN = 3;
}

message JMIJJHKIBLB {
	uint32 challenge_id = 14;
	uint32 star = 7;
	bool GJIEAHDBNNI = 10;
}

message HeliobusChallengeLineup {
	uint32 group_id = 7;
	uint32 skill_id = 12;
	repeated uint32 avatar_id_list = 5;
}
message HeliobusActivityDataCsReq {
}
message HeliobusActivityDataScRsp {
	uint32 IBHAAEJEEHC = 4;
	uint32 EENJBPMNDOL = 11;
	DEJAKPOEPKN skill_info = 3;
	uint32 retcode = 1;
	uint32 level = 13;
	uint32 IPHKDELMOIH = 6;
	repeated HeliobusChallengeLineup GCLJENGJICM = 12;
	repeated GBJKKFHPFFN NFDBMHPPFIP = 8;
	uint32 phase = 5;
	repeated JMIJJHKIBLB challenge_list = 14;
}

message GOAMMAGCIJJ {
	repeated GOAMMAGCIJJ JNDKOOEJCFC = 14;
	uint32 ELIADKDAECO = 4;
	uint32 KMAEMPMOCCC = 6;
}

message GBJKKFHPFFN {
	uint32 IHKEJEBCEIB = 2;
	bool DEKHDIBCFAB = 13;
	repeated GOAMMAGCIJJ NDJFNHFPCGD = 7;
	uint32 JFMOFIIDCNP = 1;
	uint32 AKNKPKPLJHF = 4;
	bool AJCIODKLLML = 3;
	uint32 FCLNOOGEHMC = 9;
	uint32 CMHGBBHKNCI = 11;
}
message HeliobusSnsReadCsReq {
	uint32 IHKEJEBCEIB = 8;
}
message HeliobusSnsReadScRsp {
	uint32 IHKEJEBCEIB = 14;
	uint32 retcode = 7;
}
message HeliobusSnsPostCsReq {
	uint32 IHKEJEBCEIB = 6;
	uint32 JFMOFIIDCNP = 7;
	uint32 FCLNOOGEHMC = 9;
}
message HeliobusSnsPostScRsp {
	uint32 retcode = 8;
	GBJKKFHPFFN EIMCNIFMLBL = 10;
}
message HeliobusSnsLikeCsReq {
	uint32 IHKEJEBCEIB = 8;
}
message HeliobusSnsLikeScRsp {
	uint32 IHKEJEBCEIB = 4;
	bool DEKHDIBCFAB = 9;
	uint32 retcode = 7;
}
message HeliobusSnsCommentCsReq {
	uint32 KMAEMPMOCCC = 8;
	uint32 KALJKFKJFFA = 13;
	uint32 IHKEJEBCEIB = 10;
}
message HeliobusSnsCommentScRsp {
	GBJKKFHPFFN EIMCNIFMLBL = 8;
	uint32 retcode = 11;
}
message HeliobusSnsUpdateScNotify {
	repeated GBJKKFHPFFN GKFHMGMBIKA = 2;
}
message HeliobusInfoChangedScNotify {
	uint32 IPHKDELMOIH = 9;
	repeated GBJKKFHPFFN GKFHMGMBIKA = 2;
	uint32 phase = 10;
	uint32 EENJBPMNDOL = 3;
}
message HeliobusUpgradeLevelCsReq {
}
message HeliobusUpgradeLevelScRsp {
	uint32 retcode = 7;
	uint32 level = 6;
}
message HeliobusUnlockSkillScNotify {
	uint32 CGFGFMGDPNJ = 13;
	uint32 skill_id = 8;
}
message HeliobusEnterBattleCsReq {
	repeated uint32 avatar_id_list = 2;
	uint32 event_id = 8;
	uint32 skill_id = 6;
}
message HeliobusEnterBattleScRsp {
	uint32 retcode = 2;
	SceneBattleInfo battle_info = 11;
	uint32 event_id = 3;
}
message HeliobusSelectSkillCsReq {
	uint32 skill_id = 8;
}
message HeliobusSelectSkillScRsp {
	uint32 skill_id = 15;
	uint32 retcode = 14;
}
message HeliobusChallengeUpdateScNotify {
	JMIJJHKIBLB challenge = 2;
}
message HeliobusLineupUpdateScNotify {
	HeliobusChallengeLineup lineup = 8;
}
message HeliobusStartRaidCsReq {
	bool is_save = 1;
	repeated uint32 avatar_list = 15;
	uint32 skill_id = 4;
	uint32 raid_id = 11;
	uint32 prop_entity_id = 14;
	uint32 ENLKNPIBLIO = 9;
}
message HeliobusStartRaidScRsp {
	FNLGPLNCPCL scene = 7;
	uint32 retcode = 8;
}

enum CmdItemType {
	CmdItemTypeNone = 0;
	CmdComposeLimitNumUpdateNotify = 573;
	CmdDestroyItemCsReq = 542;
	CmdRelicReforgeScRsp = 514;
	CmdSellItemScRsp = 578;
	CmdPromoteEquipmentCsReq = 598;
	CmdRankUpEquipmentScRsp = 555;
	CmdComposeSelectedRelicCsReq = 562;
	CmdSyncTurnFoodNotify = 515;
	CmdAddRelicFilterPlanCsReq = 558;
	CmdLockRelicCsReq = 572;
	CmdPromoteEquipmentScRsp = 553;
	CmdGetBagCsReq = 510;
	CmdDiscardRelicCsReq = 589;
	CmdLockRelicScRsp = 594;
	CmdRankUpEquipmentCsReq = 541;
	CmdMarkRelicFilterPlanCsReq = 586;
	CmdMarkItemCsReq = 535;
	CmdGetRelicFilterPlanCsReq = 571;
	CmdGeneralVirtualItemDataNotify = 528;
	CmdExpUpRelicScRsp = 567;
	CmdGetRecyleTimeCsReq = 569;
	CmdBatchRankUpEquipmentScRsp = 596;
	CmdComposeItemCsReq = 516;
	CmdSetTurnFoodSwitchCsReq = 560;
	CmdAddEquipmentScNotify = 520;
	CmdGetMarkItemListScRsp = 525;
	CmdExchangeHcoinScRsp = 554;
	CmdUseItemScRsp = 506;
	CmdDiscardRelicScRsp = 508;
	CmdModifyRelicFilterPlanCsReq = 583;
	CmdDeleteRelicFilterPlanScRsp = 504;
	CmdModifyRelicFilterPlanScRsp = 503;
	CmdExpUpEquipmentCsReq = 507;
	CmdBatchRankUpEquipmentCsReq = 549;
	CmdRelicReforgeConfirmCsReq = 595;
	CmdSetTurnFoodSwitchScRsp = 566;
	CmdExchangeHcoinCsReq = 590;
	CmdDeleteRelicFilterPlanCsReq = 557;
	CmdCancelMarkItemNotify = 588;
	CmdComposeItemScRsp = 526;
	CmdRelicReforgeCsReq = 523;
	CmdRelicReforgeConfirmScRsp = 518;
	CmdComposeLimitNumCompleteNotify = 524;
	CmdMarkItemScRsp = 537;
	CmdExpUpEquipmentScRsp = 539;
	CmdGetBagScRsp = 505;
	CmdAddRelicFilterPlanScRsp = 582;
	CmdRelicFilterPlanClearNameScNotify = 564;
	CmdRechargeSuccNotify = 574;
	CmdUseItemCsReq = 597;
	CmdComposeSelectedRelicScRsp = 509;
	CmdLockEquipmentCsReq = 579;
	CmdExpUpRelicCsReq = 563;
	CmdDestroyItemScRsp = 501;
	CmdGetMarkItemListCsReq = 551;
	CmdGetRelicFilterPlanScRsp = 545;
	CmdGetRecyleTimeScRsp = 592;
	CmdLockEquipmentScRsp = 502;
	CmdMarkRelicFilterPlanScRsp = 512;
	CmdSellItemCsReq = 536;
}

enum ICPINEHOLML {
	RELIC_DISCARD_TYPE_SINGLE = 0;
	RELIC_DISCARD_TYPE_BATCH = 1;
	RELIC_DISCARD_TYPE_SMART = 2;
}

enum TurnFoodSwitch {
	TURN_FOOD_SWITCH_NONE = 0;
	TURN_FOOD_SWITCH_ATTACK = 1;
	TURN_FOOD_SWITCH_DEFINE = 2;
}
message GetBagCsReq {
}

message Equipment {
	uint32 promotion = 2;
	uint32 rank = 7;
	uint32 dress_avatar_id = 3;
	bool is_protected = 15;
	uint32 tid = 1;
	uint32 unique_id = 14;
	uint32 exp = 6;
	uint32 level = 9;
}

message Relic {
	uint32 level = 12;
	uint32 exp = 7;
	uint32 unique_id = 5;
	repeated RelicAffix reforge_sub_affix_list = 10;
	bool is_protected = 9;
	bool is_discarded = 13;
	uint32 main_affix_id = 3;
	uint32 dress_avatar_id = 8;
	repeated RelicAffix sub_affix_list = 4;
	uint32 tid = 2;
}

message Material {
	uint32 tid = 4;
	uint64 expire_time = 12;
	uint32 num = 13;
}

message WaitDelResource {
	uint32 tid = 2;
	uint32 num = 15;
}

message Material0 {
	uint64 expire_time = 6;
	uint32 tid = 7;
	uint32 num = 1;
}

message NKDOHHODNNH {
	PileItem ICFLIHHBPMG = 11;
	repeated PileItem FIPHHBDEIDF = 6;
}

message JLEHFBOHNIE {
	repeated NKDOHHODNNH MCBCNKCNOIB = 4;
	uint64 time = 3;
}
message GetBagScRsp {
	repeated JLEHFBOHNIE GNALANJPEGO = 13;
	repeated uint32 FDBJLGDHCDO = 2;
	uint32 retcode = 6;
	repeated uint32 AOIIHCFMFPH = 10;
	repeated Material0 PHNGMELJKBE = 12;
	repeated PileItem BAFEBHDOBFJ = 7;
	repeated TurnFoodSwitch KMJEFMFBLLI = 3;
	repeated uint32 GEMCACJLPIJ = 8;
	repeated Material IFENMDPBNKG = 11;
	repeated WaitDelResource wait_del_resource_list = 9;
	repeated Material0 FCOKFFEAPMI = 14;
	uint32 AEPNIDPONKC = 1;
	repeated Material material_list = 15;
	repeated Equipment equipment_list = 5;
	repeated Relic relic_list = 4;
}
message PromoteEquipmentCsReq {
	uint32 equipment_unique_id = 9;
	ItemCostData cost_data = 10;
}
message PromoteEquipmentScRsp {
	uint32 retcode = 1;
}
message LockEquipmentCsReq {
	bool is_locked = 14;
	repeated uint32 ODLDPKIOEOM = 15;
}
message LockEquipmentScRsp {
	uint32 retcode = 10;
}
message UseItemCsReq {
	uint32 use_item_id = 5;
	AvatarType use_avatar_type = 6;
	uint32 base_avatar_id = 15;
	uint32 use_item_count = 10;
	uint32 optional_reward_id = 9;
	bool FELCIEMKCGF = 1;
}
message UseItemScRsp {
	uint32 use_item_count = 1;
	uint32 use_item_id = 14;
	uint32 formula_id = 10;
	uint32 retcode = 7;
	uint64 month_card_out_date_time = 9;
	ItemList return_data = 13;
}
message RankUpEquipmentCsReq {
	ItemCostData cost_data = 13;
	uint32 equipment_unique_id = 3;
}
message RankUpEquipmentScRsp {
	uint32 retcode = 6;
}

message BEPAHBKLJNN {
	ItemCostData cost_data = 15;
	uint32 equipment_unique_id = 4;
}
message BatchRankUpEquipmentCsReq {
	repeated BEPAHBKLJNN switch_list = 12;
}
message BatchRankUpEquipmentScRsp {
	uint32 retcode = 6;
}
message ExpUpEquipmentCsReq {
	uint32 equipment_unique_id = 12;
	ItemCostData cost_data = 13;
}
message ExpUpEquipmentScRsp {
	repeated PileItem return_item_list = 10;
	uint32 retcode = 4;
}
message ComposeItemCsReq {
	uint32 compose_id = 10;
	uint32 count = 1;
	ItemCostData compose_item_list = 5;
	ItemCostData convert_item_list = 4;
}
message ComposeItemScRsp {
	uint32 retcode = 12;
	uint32 count = 2;
	uint32 compose_id = 7;
	ItemList return_item_list = 8;
}
message ComposeSelectedRelicCsReq {
	ItemCostData wr_item_list = 5;
	uint32 compose_relic_id = 4;
	uint32 count = 1;
	uint32 compose_id = 13;
	ItemCostData compose_item_list = 11;
	uint32 main_affix_id = 12;
	repeated uint32 sub_affix_id_list = 15;
}
message ComposeSelectedRelicScRsp {
	uint32 compose_id = 8;
	uint32 retcode = 14;
	ItemList return_item_list = 12;
}
message ExpUpRelicCsReq {
	uint32 relic_unique_id = 2;
	ItemCostData cost_data = 7;
}
message ExpUpRelicScRsp {
	repeated PileItem return_item_list = 4;
	uint32 retcode = 9;
}
message LockRelicCsReq {
	repeated uint32 relic_ids = 6;
	bool IEMNPGOMJCO = 7;
	bool is_locked = 14;
}
message LockRelicScRsp {
	uint32 retcode = 13;
}
message DiscardRelicCsReq {
	bool JNKHGFILJPB = 2;
	ICPINEHOLML NLPCONNJONF = 10;
	uint64 HNHFDMDIBIO = 6;
	repeated uint32 relic_ids = 12;
}
message DiscardRelicScRsp {
	uint32 retcode = 6;
	repeated uint32 relic_ids = 12;
	bool JNKHGFILJPB = 8;
	ICPINEHOLML NLPCONNJONF = 9;
}
message SellItemCsReq {
	ItemCostData cost_data = 8;
	bool OLFKACKGOFK = 9;
}
message SellItemScRsp {
	uint32 retcode = 7;
	ItemList return_item_list = 14;
}
message RechargeSuccNotify {
	ItemList item_list = 8;
	string ChannelOrderNo = 9;
	uint64 month_card_out_date_time = 15;
	string product_id = 11;
}
message ExchangeHcoinCsReq {
	uint32 num = 15;
}
message ExchangeHcoinScRsp {
	uint32 retcode = 11;
	uint32 num = 15;
}
message AddEquipmentScNotify {
	uint32 MDMGKHLHIIN = 6;
}
message GetRecyleTimeCsReq {
	repeated uint32 CJLNDNILGMF = 3;
}
message GetRecyleTimeScRsp {
	uint32 retcode = 9;
	repeated Material0 FCOKFFEAPMI = 12;
}

message FNHMMMKJGPB {
	uint32 formula_id = 10;
	uint32 OJEMELHCMPJ = 9;
}
message ComposeLimitNumCompleteNotify {
	repeated FNHMMMKJGPB DCHNAEDINMM = 6;
}
message ComposeLimitNumUpdateNotify {
	FNHMMMKJGPB FGLFGJDPJPD = 12;
}
message DestroyItemCsReq {
	uint32 item_count = 3;
	uint32 item_id = 9;
	uint32 cur_item_count = 14;
}
message DestroyItemScRsp {
	uint32 retcode = 12;
	uint32 cur_item_count = 15;
}
message GetMarkItemListCsReq {
}
message GetMarkItemListScRsp {
	uint32 retcode = 12;
	repeated uint32 PDBIHONOLFJ = 8;
}
message MarkItemCsReq {
	uint32 item_id = 3;
	bool NAEHPHHDGEK = 4;
}
message MarkItemScRsp {
	bool NAEHPHHDGEK = 15;
	uint32 retcode = 13;
	uint32 item_id = 11;
}
message CancelMarkItemNotify {
	uint32 item_id = 11;
}
message SyncTurnFoodNotify {
	repeated uint32 FDBJLGDHCDO = 11;
	repeated TurnFoodSwitch KMJEFMFBLLI = 9;
}
message SetTurnFoodSwitchCsReq {
	TurnFoodSwitch JCAKHHKFDFN = 9;
	bool BNDLHJHALMB = 14;
}
message SetTurnFoodSwitchScRsp {
	TurnFoodSwitch JCAKHHKFDFN = 15;
	bool BNDLHJHALMB = 8;
	uint32 retcode = 4;
}
message GeneralVirtualItemDataNotify {
	repeated PileItem FDJKCCGDNKA = 9;
	bool PKBAHPFJGDB = 3;
}

message PACFHNEJADB {
	uint32 PBKOLNFGJDL = 2;
	bool HNMGPIIILON = 12;
}

message KFPJGGIFIEN {
	PACFHNEJADB GFIDNAANAFH = 8;
	uint32 EHKJHCOAKBK = 4;
	IIPKANNMLFN IBPDGNOHFPM = 6;
	string name = 5;
	int64 CABIGIPLIHB = 13;
	uint32 max_times = 7;
	bool is_marked = 12;
}
message GetRelicFilterPlanCsReq {
}
message GetRelicFilterPlanScRsp {
	uint32 retcode = 7;
	repeated KFPJGGIFIEN ECNAFDIBCKF = 2;
}
message AddRelicFilterPlanCsReq {
	PACFHNEJADB GFIDNAANAFH = 4;
	string name = 11;
	bool is_marked = 6;
	uint32 EHKJHCOAKBK = 12;
	IIPKANNMLFN IBPDGNOHFPM = 15;
}
message AddRelicFilterPlanScRsp {
	KFPJGGIFIEN relic_plan = 2;
	uint32 retcode = 10;
}
message ModifyRelicFilterPlanCsReq {
	uint32 max_times = 4;
	oneof KFELKJLDKEH {
		string name = 8;
		PACFHNEJADB GFIDNAANAFH = 10;
		IIPKANNMLFN IBPDGNOHFPM = 11;
	}
}
message ModifyRelicFilterPlanScRsp {
	uint32 retcode = 8;
	uint32 max_times = 14;
	int64 CABIGIPLIHB = 7;
	oneof KFELKJLDKEH {
		string name = 12;
		PACFHNEJADB GFIDNAANAFH = 3;
		IIPKANNMLFN IBPDGNOHFPM = 6;
	}
}
message DeleteRelicFilterPlanCsReq {
	bool IEMNPGOMJCO = 5;
	repeated uint32 NDOBMAJMLNK = 12;
}
message DeleteRelicFilterPlanScRsp {
	bool IEMNPGOMJCO = 13;
	repeated uint32 NDOBMAJMLNK = 4;
	uint32 retcode = 3;
}
message MarkRelicFilterPlanCsReq {
	repeated uint32 NDOBMAJMLNK = 4;
	bool IEMNPGOMJCO = 5;
	bool ADJGKCOKOLN = 3;
}
message MarkRelicFilterPlanScRsp {
	bool ADJGKCOKOLN = 12;
	repeated uint32 NDOBMAJMLNK = 4;
	bool IEMNPGOMJCO = 1;
	uint32 retcode = 9;
}
message RelicFilterPlanClearNameScNotify {
	uint32 max_times = 15;
}
message RelicReforgeCsReq {
	uint32 relic_unique_id = 10;
}
message RelicReforgeScRsp {
	uint32 retcode = 11;
}
message RelicReforgeConfirmCsReq {
	bool is_cancel = 2;
	uint32 relic_unique_id = 10;
}
message RelicReforgeConfirmScRsp {
	uint32 retcode = 4;
}

enum CmdJukeboxType {
	CmdJukeboxTypeNone = 0;
	CmdTrialBackGroundMusicScRsp = 3106;
	CmdTrialBackGroundMusicCsReq = 3197;
	CmdUnlockBackGroundMusicCsReq = 3179;
	CmdPlayBackGroundMusicScRsp = 3153;
	CmdPlayBackGroundMusicCsReq = 3198;
	CmdUnlockBackGroundMusicScRsp = 3102;
	CmdGetJukeboxDataCsReq = 3110;
	CmdGetJukeboxDataScRsp = 3105;
}

message MusicData {
	uint32 group_id = 10;
	bool is_played = 2;
	uint32 id = 12;
}
message GetJukeboxDataCsReq {
}
message GetJukeboxDataScRsp {
	repeated MusicData unlocked_music_list = 5;
	uint32 current_music_id = 15;
	uint32 retcode = 6;
}
message PlayBackGroundMusicCsReq {
	uint32 play_music_id = 12;
}
message PlayBackGroundMusicScRsp {
	uint32 current_music_id = 2;
	uint32 play_music_id = 10;
	uint32 retcode = 13;
}
message UnlockBackGroundMusicCsReq {
	repeated uint32 unlock_ids = 7;
}
message UnlockBackGroundMusicScRsp {
	repeated MusicData unlocked_music_list = 10;
	repeated uint32 OGHDILHDLEB = 7;
	uint32 retcode = 11;
}
message TrialBackGroundMusicCsReq {
	uint32 PIGBBGCLAMJ = 4;
}
message TrialBackGroundMusicScRsp {
	uint32 retcode = 11;
	uint32 PIGBBGCLAMJ = 7;
}

enum CmdLineupType {
	CmdLineupTypeNone = 0;
	CmdGetAllLineupDataCsReq = 778;
	CmdGetStageLineupScRsp = 705;
	CmdChangeLineupLeaderCsReq = 726;
	CmdSwapLineupCsReq = 741;
	CmdSwitchLineupIndexCsReq = 767;
	CmdReplaceLineupCsReq = 754;
	CmdSetLineupNameScRsp = 736;
	CmdQuitLineupCsReq = 797;
	CmdGetLineupAvatarDataCsReq = 739;
	CmdSwapLineupScRsp = 755;
	CmdGetCurLineupDataScRsp = 753;
	CmdSetLineupNameCsReq = 794;
	CmdChangeLineupLeaderScRsp = 763;
	CmdSwitchLineupIndexScRsp = 772;
	CmdVirtualLineupTrialAvatarChangeScNotify = 720;
	CmdGetLineupAvatarDataScRsp = 716;
	CmdJoinLineupCsReq = 779;
	CmdQuitLineupScRsp = 706;
	CmdGetAllLineupDataScRsp = 774;
	CmdExtraLineupDestroyNotify = 709;
	CmdGetStageLineupCsReq = 710;
	CmdSyncLineupNotify = 707;
	CmdJoinLineupScRsp = 702;
	CmdGetCurLineupDataCsReq = 798;
	CmdVirtualLineupDestroyNotify = 790;
	CmdReplaceLineupScRsp = 762;
}

enum PBPAHLPFNDA {
	LINEUP_TYPE_NONE = 0;
	LINEUP_TYPE_PRESET = 1;
	LINEUP_TYPE_VIRTUAL = 2;
	LINEUP_TYPE_EXTRA = 3;
	LINEUP_TYPE_STORY_LINE = 4;
}

enum ExtraLineupType {
	LINEUP_NONE = 0;
	LINEUP_CHALLENGE = 1;
	LINEUP_ROGUE = 2;
	LINEUP_CHALLENGE_2 = 3;
	LINEUP_CHALLENGE_3 = 4;
	LINEUP_ROGUE_CHALLENGE = 5;
	LINEUP_STAGE_TRIAL = 6;
	LINEUP_ROGUE_TRIAL = 7;
	LINEUP_ACTIVITY = 8;
	LINEUP_BOXING_CLUB = 9;
	LINEUP_TREASURE_DUNGEON = 11;
	LINEUP_CHESS_ROGUE = 12;
	LINEUP_HELIOBUS = 13;
	LINEUP_TOURN_ROGUE = 14;
	LINEUP_RELIC_ROGUE = 15;
	LINEUP_ARCADE_ROGUE = 16;
	LINEUP_MAGIC_ROGUE = 17;
	LINEUP_FATE = 18;
}

enum SyncLineupReason {
	SYNC_REASON_NONE = 0;
	SYNC_REASON_MP_ADD = 1;
	SYNC_REASON_MP_ADD_PROP_HIT = 2;
	SYNC_REASON_HP_ADD = 3;
	SYNC_REASON_HP_ADD_PROP_HIT = 4;
	SYNC_REASON_MP_MAX_CHANGED_PERMANENT = 5;
	SYNC_REASON_MP_MAX_CHANGED_BY_MODIFIER = 6;
}
message GetStageLineupCsReq {
}

message JLCHBKKFANL {
	uint32 stage_type = 11;
	uint32 DOGDACFLBOE = 4;
}
message GetStageLineupScRsp {
	repeated JLCHBKKFANL NMKPEKMMNBP = 5;
	uint32 retcode = 7;
}

message LineupAvatar {
	AvatarType avatar_type = 10;
	uint32 id = 6;
	SpBarInfo sp_bar = 15;
	uint32 slot = 13;
	uint32 hp = 3;
	uint32 satiety = 1;
}

message LineupInfo {
	uint32 index = 9;
	bool BFNBKLMAMKB = 2;
	uint32 mp = 10;
	repeated uint32 MANKKFPBFCB = 5;
	uint32 max_mp = 14;
	uint32 plane_id = 6;
	ExtraLineupType extra_lineup_type = 1;
	uint32 game_story_line_id = 4;
	uint32 leader_slot = 15;
	string name = 12;
	repeated uint32 KOMPCJPAPKM = 3;
	repeated LineupAvatar avatar_list = 8;
	repeated uint32 story_line_avatar_id_list = 11;
	bool is_virtual = 7;
}
message GetCurLineupDataCsReq {
}
message GetCurLineupDataScRsp {
	LineupInfo lineup = 7;
	uint32 retcode = 8;
}
message JoinLineupCsReq {
	uint32 slot = 9;
	uint32 base_avatar_id = 12;
	ExtraLineupType extra_lineup_type = 3;
	uint32 index = 7;
	bool is_virtual = 5;
	AvatarType avatar_type = 1;
	uint32 plane_id = 8;
}
message JoinLineupScRsp {
	uint32 retcode = 9;
}
message QuitLineupCsReq {
	ExtraLineupType extra_lineup_type = 9;
	uint32 plane_id = 13;
	uint32 base_avatar_id = 2;
	bool is_virtual = 11;
	uint32 index = 12;
	AvatarType avatar_type = 7;
}
message QuitLineupScRsp {
	uint32 plane_id = 3;
	uint32 retcode = 15;
	bool HIOFPDKDOFD = 5;
	uint32 base_avatar_id = 10;
	bool is_virtual = 9;
}
message SwapLineupCsReq {
	ExtraLineupType extra_lineup_type = 15;
	bool is_virtual = 10;
	uint32 index = 6;
	uint32 ELLIDANJNOB = 2;
	uint32 NEDIKHNGMBH = 7;
	uint32 plane_id = 1;
}
message SwapLineupScRsp {
	uint32 retcode = 13;
}
message SyncLineupNotify {
	LineupInfo lineup = 14;
	repeated SyncLineupReason ReasonList = 4;
}
message GetLineupAvatarDataCsReq {
}

message LineupAvatarData {
	uint32 id = 9;
	AvatarType avatar_type = 4;
	uint32 hp = 1;
}
message GetLineupAvatarDataScRsp {
	uint32 retcode = 14;
	repeated LineupAvatarData avatar_data_list = 4;
}
message ChangeLineupLeaderCsReq {
	uint32 slot = 10;
}
message ChangeLineupLeaderScRsp {
	uint32 slot = 7;
	uint32 retcode = 9;
}
message SwitchLineupIndexCsReq {
	uint32 index = 12;
}
message SwitchLineupIndexScRsp {
	uint32 retcode = 4;
	uint32 index = 14;
}
message SetLineupNameCsReq {
	uint32 index = 4;
	string name = 6;
}
message SetLineupNameScRsp {
	uint32 retcode = 12;
	uint32 index = 3;
	string name = 8;
}
message GetAllLineupDataCsReq {
}
message GetAllLineupDataScRsp {
	uint32 retcode = 10;
	repeated LineupInfo lineup_list = 9;
	uint32 cur_index = 7;
}
message VirtualLineupDestroyNotify {
	uint32 plane_id = 7;
}

message LineupSlotData {
	uint32 id = 10;
	AvatarType avatar_type = 7;
	uint32 slot = 4;
}
message ReplaceLineupCsReq {
	bool is_virtual = 14;
	ExtraLineupType extra_lineup_type = 5;
	repeated LineupSlotData lineup_slot_list = 10;
	uint32 plane_id = 8;
	uint32 leader_slot = 1;
	uint32 game_story_line_id = 4;
	uint32 index = 11;
}
message ReplaceLineupScRsp {
	uint32 retcode = 1;
}
message ExtraLineupDestroyNotify {
	ExtraLineupType extra_lineup_type = 10;
}
message VirtualLineupTrialAvatarChangeScNotify {
	uint32 plane_id = 2;
	repeated uint32 IBLBNIANPHD = 8;
	bool CLIIGMNMHNA = 6;
	repeated uint32 KFMFFGGJMNE = 7;
}

enum CmdLobbyType {
	CmdLobbyTypeNone = 0;
	CmdLobbyInviteScRsp = 7363;
	CmdLobbyStartFightCsReq = 7352;
	CmdLobbyInviteCsReq = 7368;
	CmdLobbyModifyPlayerInfoScRsp = 7377;
	CmdLobbySyncInfoScNotify = 7393;
	CmdLobbyInviteScNotify = 7355;
	CmdLobbyKickOutCsReq = 7392;
	CmdLobbyInteractScRsp = 7398;
	CmdLobbyJoinCsReq = 7396;
	CmdLobbyGetInfoCsReq = 7356;
	CmdLobbyQuitCsReq = 7382;
	CmdLobbyModifyPlayerInfoCsReq = 7378;
	CmdLobbyCreateCsReq = 7373;
	CmdLobbyJoinScRsp = 7380;
	CmdLobbyInteractCsReq = 7387;
	CmdLobbyQuitScRsp = 7379;
	CmdLobbyKickOutScRsp = 7354;
	CmdLobbyGetInfoScRsp = 7400;
	CmdLobbyCreateScRsp = 7371;
	CmdLobbyStartFightScRsp = 7351;
	CmdLobbyInteractScNotify = 7370;
}
message LobbyCreateCsReq {
	uint32 NEPODDOJJFE = 4;
	FightGameMode NBDLPGBIDLC = 14;
	EPEGHCGCMHP EJOFCNAEDHK = 3;
}
message LobbyCreateScRsp {
	repeated CBBDIOMIFHD LIPJDJPMOKB = 7;
	uint32 NEPODDOJJFE = 13;
	FightGameMode NBDLPGBIDLC = 6;
	uint64 room_id = 10;
	uint32 retcode = 8;
}
message LobbyInviteCsReq {
	repeated uint32 uid_list = 9;
}
message LobbyInviteScRsp {
	repeated uint32 uid_list = 1;
	uint32 retcode = 12;
}
message LobbyJoinCsReq {
	EPEGHCGCMHP EJOFCNAEDHK = 9;
	uint64 room_id = 13;
}
message LobbyJoinScRsp {
	repeated CBBDIOMIFHD LIPJDJPMOKB = 8;
	FightGameMode NBDLPGBIDLC = 6;
	uint32 retcode = 4;
	uint32 NEPODDOJJFE = 13;
	uint64 room_id = 11;
}
message LobbyQuitCsReq {
}
message LobbyQuitScRsp {
	uint32 retcode = 8;
}
message LobbyStartFightCsReq {
}
message LobbyStartFightScRsp {
	uint32 retcode = 11;
}
message LobbyModifyPlayerInfoCsReq {
	uint32 HFDJAELBNGA = 15;
	EPEGHCGCMHP EJOFCNAEDHK = 8;
	LobbyModifyType type = 5;
}
message LobbyModifyPlayerInfoScRsp {
	uint32 retcode = 4;
}
message LobbySyncInfoScNotify {
	repeated CBBDIOMIFHD LIPJDJPMOKB = 3;
	uint32 uid = 12;
	LobbyModifyType type = 2;
}
message LobbyKickOutCsReq {
	uint32 uid = 2;
}
message LobbyKickOutScRsp {
	uint32 retcode = 15;
}
message LobbyInviteScNotify {
	uint32 sender_id = 12;
	FightGameMode NBDLPGBIDLC = 10;
	uint32 room_id = 8;
}
message LobbyGetInfoCsReq {
}
message LobbyGetInfoScRsp {
	uint32 retcode = 15;
	uint32 NEPODDOJJFE = 7;
	FightGameMode NBDLPGBIDLC = 12;
	repeated CBBDIOMIFHD LIPJDJPMOKB = 10;
	uint64 room_id = 8;
	uint64 NOGFEEMNHPC = 6;
}
message LobbyInteractCsReq {
	uint32 CBEGNBKMHCD = 12;
	IMAONMHILNE IHCILNHKLMC = 13;
}
message LobbyInteractScRsp {
	uint32 retcode = 9;
	uint32 CBEGNBKMHCD = 7;
}
message LobbyInteractScNotify {
	uint32 sender_id = 11;
	IMAONMHILNE IHCILNHKLMC = 8;
}

enum CmdMailType {
	CmdMailTypeNone = 0;
	CmdGetMailCsReq = 810;
	CmdDelMailCsReq = 879;
	CmdMarkReadMailCsReq = 898;
	CmdTakeMailAttachmentScRsp = 806;
	CmdTakeMailAttachmentCsReq = 897;
	CmdNewMailScNotify = 841;
	CmdMarkReadMailScRsp = 853;
	CmdGetMailScRsp = 805;
	CmdDelMailScRsp = 802;
}

enum MailType {
	MAIL_TYPE_NORMAL = 0;
	MAIL_TYPE_STAR = 1;
}
message GetMailCsReq {
	uint32 CIJEFNOOJJK = 7;
	uint32 DAPCDNELCMA = 10;
}

message ClientMail {
	int64 expire_time = 7;
	string content = 3;
	uint32 template_id = 1;
	uint32 id = 12;
	repeated string para_list = 5;
	ItemList attachment = 15;
	string title = 6;
	bool is_read = 10;
	MailType mail_type = 11;
	int64 time = 4;
	string sender = 8;
}
message GetMailScRsp {
	bool is_end = 4;
	uint32 total_num = 3;
	uint32 start = 11;
	uint32 retcode = 13;
	repeated ClientMail mail_list = 14;
	repeated ClientMail notice_mail_list = 7;
}
message MarkReadMailCsReq {
	uint32 id = 8;
}
message MarkReadMailScRsp {
	uint32 id = 7;
	uint32 retcode = 5;
}
message DelMailCsReq {
	repeated uint32 id_list = 1;
}
message DelMailScRsp {
	uint32 retcode = 11;
	repeated uint32 id_list = 2;
}
message TakeMailAttachmentCsReq {
	repeated uint32 mail_id_list = 9;
	uint32 optional_reward_id = 12;
}

message ClientMailAttachmentItem {
	uint32 item_id = 11;
	uint32 mail_id = 9;
}
message TakeMailAttachmentScRsp {
	uint32 retcode = 12;
	repeated uint32 succ_mail_id_list = 2;
	ItemList attachment = 9;
	repeated ClientMailAttachmentItem fail_mail_list = 11;
}
message NewMailScNotify {
	repeated uint32 mail_id_list = 5;
}

enum CmdMapRotationType {
	CmdMapRotationTypeNone = 0;
	CmdLeaveMapRotationRegionScNotify = 6863;
	CmdInteractChargerCsReq = 6898;
	CmdResetMapRotationRegionScRsp = 6826;
	CmdEnterMapRotationRegionScRsp = 6805;
	CmdUpdateRotaterScNotify = 6878;
	CmdRemoveRotaterCsReq = 6894;
	CmdInteractChargerScRsp = 6853;
	CmdGetMapRotationDataCsReq = 6807;
	CmdLeaveMapRotationRegionCsReq = 6841;
	CmdEnterMapRotationRegionCsReq = 6810;
	CmdGetMapRotationDataScRsp = 6839;
	CmdUpdateMapRotationDataScNotify = 6872;
	CmdRotateMapCsReq = 6897;
	CmdUpdateEnergyScNotify = 6867;
	CmdDeployRotaterCsReq = 6879;
	CmdLeaveMapRotationRegionScRsp = 6855;
	CmdDeployRotaterScRsp = 6802;
	CmdResetMapRotationRegionCsReq = 6816;
	CmdRotateMapScRsp = 6806;
	CmdRemoveRotaterScRsp = 6836;
}

message RogueMapRotateInfo {
	repeated RotaterData rotater_data_list = 10;
	repeated ChargerInfo charger_info = 11;
	int32 era_flipper_region_id = 4;
	bool is_rotate = 15;
	uint32 NFLBONDJAIE = 14;
	RotateMapInfo rogue_map = 2;
	RotaterEnergyInfo energy_info = 8;
}

message RotaterEnergyInfo {
	uint32 max_num = 11;
	uint32 cur_num = 9;
}

message RotateMapInfo {
	Vector4 rotate_vector = 6;
	Vector vector = 14;
}
message EnterMapRotationRegionCsReq {
	uint32 NFLBONDJAIE = 11;
	MotionInfo motion = 2;
	uint32 era_flipper_region_id = 4;
}
message EnterMapRotationRegionScRsp {
	uint32 era_flipper_region_id = 5;
	uint32 client_pos_version = 1;
	uint32 retcode = 15;
	RotaterEnergyInfo energy_info = 8;
	uint32 NFLBONDJAIE = 9;
	MotionInfo motion = 14;
}

message ChargerInfo {
	uint32 GLHAGJGAEHE = 5;
	uint32 group_id = 11;
}
message InteractChargerCsReq {
	ChargerInfo charger_info = 11;
}
message InteractChargerScRsp {
	ChargerInfo charger_info = 14;
	uint32 retcode = 3;
	RotaterEnergyInfo energy_info = 13;
}

message RotaterData {
	uint32 group_id = 13;
	uint32 GLHAGJGAEHE = 14;
	float LKEFOLCGFGD = 9;
}
message DeployRotaterCsReq {
	RotaterData rotater_data = 7;
}
message DeployRotaterScRsp {
	RotaterData rotater_data = 11;
	uint32 retcode = 6;
	RotaterEnergyInfo energy_info = 14;
}
message RotateMapCsReq {
	RotateMapInfo rogue_map = 2;
	uint32 group_id = 5;
	uint32 GLHAGJGAEHE = 9;
	MotionInfo motion = 1;
}
message RotateMapScRsp {
	uint32 retcode = 6;
	MotionInfo motion = 9;
	uint32 client_pos_version = 14;
}
message LeaveMapRotationRegionCsReq {
	MotionInfo motion = 1;
}
message LeaveMapRotationRegionScRsp {
	uint32 retcode = 1;
	uint32 client_pos_version = 14;
	MotionInfo motion = 10;
}
message GetMapRotationDataCsReq {
}
message GetMapRotationDataScRsp {
	bool OMEJLLMNPCN = 13;
	repeated ChargerInfo charger_info = 8;
	int32 era_flipper_region_id = 12;
	repeated RotaterData rotater_data_list = 15;
	RotateMapInfo rogue_map = 4;
	RotaterEnergyInfo energy_info = 14;
	uint32 retcode = 2;
	uint32 NFLBONDJAIE = 10;
}
message ResetMapRotationRegionCsReq {
	MotionInfo motion = 14;
	RotateMapInfo rogue_map = 5;
}
message ResetMapRotationRegionScRsp {
	uint32 client_pos_version = 6;
	MotionInfo motion = 13;
	uint32 retcode = 5;
}
message LeaveMapRotationRegionScNotify {
}
message UpdateEnergyScNotify {
	RotaterEnergyInfo energy_info = 11;
}
message UpdateMapRotationDataScNotify {
	uint32 NFLBONDJAIE = 13;
	repeated ChargerInfo charger_info = 15;
	bool OMEJLLMNPCN = 10;
	RotaterEnergyInfo energy_info = 7;
	repeated RotaterData rotater_data_list = 12;
	RotateMapInfo rogue_map = 5;
	int32 era_flipper_region_id = 9;
}
message RemoveRotaterCsReq {
	RotaterData rotater_data = 15;
}
message RemoveRotaterScRsp {
	RotaterEnergyInfo energy_info = 11;
	uint32 retcode = 8;
	RotaterData rotater_data = 14;
}
message UpdateRotaterScNotify {
	repeated RotaterData rotater_data_list = 7;
}

enum CmdMarbleType {
	CmdMarbleTypeNone = 0;
	CmdMarbleGetDataScRsp = 8285;
	CmdMarbleLevelFinishCsReq = 8287;
	CmdMarbleUpdateShownSealCsReq = 8280;
	CmdMarbleUpdateShownSealScRsp = 8281;
	CmdMarbleLevelFinishScRsp = 8289;
	CmdMarbleShopBuyCsReq = 8272;
	CmdMarbleUnlockSealScNotify = 8277;
	CmdMarbleShopBuyScRsp = 8282;
	CmdMarbleGetDataCsReq = 8271;
	CmdMarblePvpDataUpdateScNotify = 8284;
}
message MarbleGetDataCsReq {
}
message MarbleGetDataScRsp {
	repeated uint32 MPBMPFFGIBO = 12;
	repeated uint32 IOGDKGFDFPC = 14;
	repeated uint32 OJNPGILJIEN = 2;
	int32 score_id = 8;
	uint32 retcode = 5;
}
message MarbleLevelFinishCsReq {
	uint32 NLIBKABFGCC = 4;
	repeated uint32 PMKANGDFLKI = 7;
}
message MarbleLevelFinishScRsp {
	uint32 retcode = 2;
	uint32 NLIBKABFGCC = 1;
}
message MarbleShopBuyCsReq {
	repeated uint32 PMKANGDFLKI = 1;
}
message MarbleShopBuyScRsp {
	uint32 retcode = 15;
	repeated uint32 PMKANGDFLKI = 14;
}
message MarbleUnlockSealScNotify {
	repeated uint32 PMKANGDFLKI = 9;
}
message MarblePvpDataUpdateScNotify {
	int32 score_id = 5;
}
message MarbleUpdateShownSealCsReq {
	repeated uint32 EHENKPLCPCH = 6;
}
message MarbleUpdateShownSealScRsp {
	repeated uint32 EHENKPLCPCH = 10;
	uint32 retcode = 13;
}

enum CmdMarkChestType {
	CmdMarkChestTypeNone = 0;
	CmdGetMarkChestCsReq = 8181;
	CmdMarkChestChangedScNotify = 8182;
	CmdGetMarkChestScRsp = 8195;
	CmdUpdateMarkChestCsReq = 8197;
	CmdUpdateMarkChestScRsp = 8199;
}

message MarkChestInfo {
	uint32 group_id = 3;
	uint32 floor_id = 6;
	uint32 config_id = 7;
	uint32 plane_id = 8;
}

message MarkChestFuncInfo {
	int64 mark_time = 12;
	uint32 func_id = 7;
	repeated MarkChestInfo mark_chest_info_list = 5;
}
message GetMarkChestCsReq {
}
message GetMarkChestScRsp {
	uint32 retcode = 2;
	repeated MarkChestFuncInfo mark_chest_func_info = 12;
}
message UpdateMarkChestCsReq {
	repeated MarkChestInfo mark_chest_info_list = 8;
	uint32 func_id = 10;
	uint32 trigger_param_id = 3;
}
message UpdateMarkChestScRsp {
	repeated MarkChestFuncInfo mark_chest_func_info = 4;
	uint32 retcode = 12;
	uint32 func_id = 15;
	uint32 trigger_param_id = 11;
}
message MarkChestChangedScNotify {
	repeated MarkChestFuncInfo mark_chest_func_info = 13;
}

enum CmdMatchType {
	CmdMatchTypeNone = 0;
	CmdStartMatchScRsp = 7321;
	CmdCancelMatchCsReq = 7346;
	CmdGetCrossInfoScRsp = 7328;
	CmdStartMatchCsReq = 7323;
	CmdMatchResultScNotify = 7302;
	CmdCancelMatchScRsp = 7330;
	CmdGetCrossInfoCsReq = 7301;
}
message StartMatchCsReq {
	EPEGHCGCMHP EJOFCNAEDHK = 13;
	FightGameMode NBDLPGBIDLC = 2;
}
message StartMatchScRsp {
	EPEGHCGCMHP EJOFCNAEDHK = 8;
	uint32 retcode = 9;
}
message CancelMatchCsReq {
}
message CancelMatchScRsp {
	uint32 retcode = 12;
}
message MatchResultScNotify {
	uint32 retcode = 2;
	repeated CBBDIOMIFHD LIPJDJPMOKB = 6;
}
message GetCrossInfoCsReq {
}
message GetCrossInfoScRsp {
	uint64 room_id = 4;
	uint64 NOGFEEMNHPC = 8;
	uint32 retcode = 14;
	FightGameMode NBDLPGBIDLC = 2;
}

enum CmdMatchThreeModuleType {
	CmdMatchThreeModuleTypeNone = 0;
	CmdMatchThreeV2GetDataCsReq = 7427;
	CmdMatchThreeLevelEndCsReq = 7446;
	CmdMatchThreeGetDataCsReq = 7423;
	CmdMatchThreeV2LevelEndCsReq = 7418;
	CmdMatchThreeSyncDataScNotify = 7402;
	CmdMatchThreeGetDataScRsp = 7421;
	CmdMatchThreeV2BattleItemLevelUpScRsp = 7443;
	CmdMatchThreeV2LevelEndScRsp = 7413;
	CmdMatchThreeV2GetDataScRsp = 7442;
	CmdMatchThreeLevelEndScRsp = 7430;
	CmdMatchThreeV2BattleItemLevelUpCsReq = 7404;
	CmdMatchThreeSetBirdPosScRsp = 7428;
	CmdMatchThreeV2ScNotify = 7405;
	CmdMatchThreeSetBirdPosCsReq = 7401;
	CmdMatchThreeV2PvpFinishScNotify = 7406;
	CmdMatchThreeV2SetBirdPosScRsp = 7429;
	CmdMatchThreeV2SetBirdPosCsReq = 7432;
}

enum AJDDHBHMOOF {
	MatchThreeStatistics_None = 0;
	MatchThreeStatistics_First = 1;
	MatchThreeStatistics_Second = 2;
	MatchThreeStatistics_Third = 3;
	MatchThreeStatistics_Fruit = 4;
	MatchThreeStatistics_Skill = 5;
	MatchThreeStatistics_Defeat = 6;
	MatchThreeStatistics_Bomb = 7;
	MatchThreeStatistics_Damage = 8;
	MatchThreeStatistics_Energy = 9;
	MatchThreeStatistics_SwapBomb = 10;
	MatchThreeStatistics_UseItem = 11;
	MatchThreeStatistics_SoloMaxStep = 12;
	MatchThreeStatistics_SoloScore = 13;
}
message MatchThreeGetDataCsReq {
}

message LMPIECFMFOI {
	uint32 EBGMBDMPEGM = 5;
	uint32 level_id = 12;
}

message DHONNIHMACI {
	uint32 pos = 3;
	uint32 count = 12;
	uint32 FMKKABMDINJ = 6;
	uint32 BKMPFEOCFIB = 4;
}

message ABGEJNBCDJK {
	repeated DHONNIHMACI BGAFCOBNLPM = 5;
	map<uint32, uint32> ILBHDLMLMCK = 7;
	map<uint32, uint32> BEGMFIAPHLM = 14;
	repeated LMPIECFMFOI JMBCICLCHKD = 6;
}
message MatchThreeGetDataScRsp {
	uint32 retcode = 15;
	ABGEJNBCDJK MFKJDOEBLIM = 11;
}
message MatchThreeLevelEndCsReq {
	repeated uint32 JEPPFDINBNB = 1;
	uint32 BKMPFEOCFIB = 9;
	uint32 level_id = 10;
	uint32 EBGMBDMPEGM = 3;
	string uuid = 4;
	uint32 FMKKABMDINJ = 14;
	map<uint32, uint32> ILBHDLMLMCK = 13;
}
message MatchThreeLevelEndScRsp {
	uint32 EBGMBDMPEGM = 3;
	uint32 level_id = 4;
	uint32 retcode = 9;
}
message MatchThreeSyncDataScNotify {
	ABGEJNBCDJK MFKJDOEBLIM = 6;
}
message MatchThreeSetBirdPosCsReq {
	uint32 pos = 12;
	uint32 BKMPFEOCFIB = 1;
}
message MatchThreeSetBirdPosScRsp {
	uint32 pos = 5;
	uint32 retcode = 3;
	uint32 BKMPFEOCFIB = 6;
}
message MatchThreeV2GetDataCsReq {
}

message GNEBBAEIKGJ {
	repeated uint32 AKLOEIGKGAN = 4;
	uint32 level_id = 12;
}

message LNOIKGKJHLK {
	uint32 FMKKABMDINJ = 9;
	uint32 BKMPFEOCFIB = 7;
	uint32 pos = 10;
	uint32 count = 13;
}

message KFNJAKGEFLA {
	repeated KHOCCHABNMN HLPODGBCLKA = 6;
	repeated KHOCCHABNMN OMKFKGIGFPP = 13;
	repeated KHOCCHABNMN EDGJDDIEPAG = 2;
	repeated GNEBBAEIKGJ EHBGHCGKFBH = 3;
	uint32 DPBMLFFPOKH = 1;
	uint32 CDMPOGJJMJM = 8;
	repeated LNOIKGKJHLK BGAFCOBNLPM = 7;
}
message MatchThreeV2GetDataScRsp {
	uint32 retcode = 5;
	KFNJAKGEFLA EAHMJFLLGGK = 10;
}
message MatchThreeV2BattleItemLevelUpCsReq {
	uint32 LDNJEACFBJE = 12;
	uint32 DMKFFFPDLDI = 9;
}
message MatchThreeV2BattleItemLevelUpScRsp {
	uint32 retcode = 4;
	uint32 DMKFFFPDLDI = 7;
	uint32 LDNJEACFBJE = 5;
}
message MatchThreeV2LevelEndCsReq {
	string uuid = 11;
	repeated KHOCCHABNMN HLDNMIBKLKJ = 6;
	uint32 JKFPENGNJPI = 9;
	uint32 EHMPEMEONGE = 12;
	uint32 BKMPFEOCFIB = 5;
	uint32 level_id = 15;
	repeated uint32 BBGKAKHGOIO = 3;
	uint32 DKBJHPIJCAE = 2;
}
message MatchThreeV2LevelEndScRsp {
	uint32 retcode = 12;
	repeated ItemList MNBEJDHHOJN = 11;
	uint32 EBHAJENIKAF = 13;
	LNOIKGKJHLK AEKCPPIDNMD = 1;
	uint32 CDMPOGJJMJM = 9;
	GNEBBAEIKGJ level_info = 5;
	ItemList PECFJCDBCBN = 4;
	uint32 level_id = 10;
}
message MatchThreeV2SetBirdPosCsReq {
	uint32 pos = 9;
	uint32 BKMPFEOCFIB = 3;
}
message MatchThreeV2SetBirdPosScRsp {
	uint32 pos = 6;
	uint32 BKMPFEOCFIB = 3;
	uint32 retcode = 15;
	uint32 JMHPFPMAJFG = 5;
}
message MatchThreeV2ScNotify {
	KFNJAKGEFLA EAHMJFLLGGK = 9;
}
message MatchThreeV2PvpFinishScNotify {
	CDIMEMFJJFP NIAEGHJLNMB = 1;
	uint32 KOJIHJIHKIA = 8;
	FightGameMode BEIPBPKKDMI = 5;
	uint32 FDGDOKAFBDH = 14;
	Match3FinishReason reason = 12;
	KFNJAKGEFLA EAHMJFLLGGK = 9;
}

enum CmdMessageType {
	CmdMessageTypeNone = 0;
	CmdFinishSectionIdScRsp = 2706;
	CmdGetNpcStatusScRsp = 2753;
	CmdGetMissionMessageInfoCsReq = 2707;
	CmdGetMissionMessageInfoScRsp = 2739;
	CmdGetNpcMessageGroupScRsp = 2705;
	CmdFinishPerformSectionIdScRsp = 2755;
	CmdGetNpcMessageGroupCsReq = 2710;
	CmdGetNpcStatusCsReq = 2798;
	CmdFinishSectionIdCsReq = 2797;
	CmdFinishItemIdCsReq = 2779;
	CmdFinishItemIdScRsp = 2702;
	CmdFinishPerformSectionIdCsReq = 2741;
}
message GetNpcMessageGroupCsReq {
	repeated uint32 contact_id_list = 5;
}

message MessageItem {
	uint32 item_id = 10;
	uint32 text_id = 2;
}

message MessageSection {
	uint32 frozen_item_id = 15;
	repeated MessageItem item_list = 2;
	uint32 id = 1;
	repeated uint32 message_item_list = 5;
	MessageSectionStatus status = 11;
}

message MessageGroup {
	repeated MessageSection message_section_list = 13;
	MessageGroupStatus status = 3;
	uint32 id = 1;
	int64 refresh_time = 8;
	uint32 message_section_id = 6;
}
message GetNpcMessageGroupScRsp {
	uint32 retcode = 6;
	repeated MessageGroup message_group_list = 9;
}
message GetNpcStatusCsReq {
}

message NpcStatus {
	uint32 npc_id = 10;
	bool is_finish = 5;
}

message GroupStatus {
	int64 refresh_time = 6;
	MessageGroupStatus group_status = 7;
	uint32 group_id = 3;
}

message SectionStatus {
	uint32 section_id = 2;
	MessageSectionStatus section_status = 3;
}
message GetNpcStatusScRsp {
	repeated NpcStatus npc_status_list = 2;
	uint32 retcode = 8;
}
message FinishItemIdCsReq {
	uint32 text_id = 4;
	uint32 item_id = 12;
}
message FinishItemIdScRsp {
	uint32 item_id = 3;
	uint32 text_id = 12;
	uint32 retcode = 6;
}
message FinishSectionIdCsReq {
	uint32 section_id = 4;
}
message FinishSectionIdScRsp {
	uint32 section_id = 4;
	ItemList reward = 13;
	uint32 retcode = 2;
}
message FinishPerformSectionIdCsReq {
	repeated MessageItem item_list = 6;
	uint32 section_id = 7;
}
message FinishPerformSectionIdScRsp {
	ItemList reward = 8;
	uint32 retcode = 10;
	repeated MessageItem item_list = 5;
	uint32 section_id = 15;
}
message GetMissionMessageInfoCsReq {
}
message GetMissionMessageInfoScRsp {
	uint32 retcode = 12;
	map<uint32, uint32> APOLDLGPKOP = 4;
}

enum CmdMiscModuleType {
	CmdMiscModuleTypeNone = 0;
	CmdSubmitOrigamiItemScRsp = 4167;
	CmdTakePictureCsReq = 4179;
	CmdGetMovieRacingDataScRsp = 4190;
	CmdSubmitOrigamiItemCsReq = 4163;
	CmdUpdateMovieRacingDataScRsp = 4162;
	CmdShareCsReq = 4110;
	CmdUpdateGunPlayDataCsReq = 4169;
	CmdShareScRsp = 4105;
	CmdMazeKillDirectCsReq = 4151;
	CmdCancelCacheNotifyCsReq = 4141;
	CmdDifficultyAdjustmentUpdateDataScRsp = 4101;
	CmdDifficultyAdjustmentGetDataCsReq = 4124;
	CmdGetOrigamiPropInfoCsReq = 4172;
	CmdDirectDeliveryScNotify = 4135;
	CmdSecurityReportScRsp = 4139;
	CmdCancelDirectDeliveryNoticeScRsp = 4188;
	CmdCancelCacheNotifyScRsp = 4155;
	CmdTakePictureScRsp = 4102;
	CmdGetOrigamiPropInfoScRsp = 4194;
	CmdGetGunPlayDataCsReq = 4109;
	CmdGetMovieRacingDataCsReq = 4174;
	CmdDifficultyAdjustmentGetDataScRsp = 4173;
	CmdUpdateGunPlayDataScRsp = 4192;
	CmdMazeKillDirectScRsp = 4125;
	CmdTriggerVoiceScRsp = 4126;
	CmdCancelDirectDeliveryNoticeCsReq = 4137;
	CmdGetShareDataScRsp = 4153;
	CmdGetShareDataCsReq = 4198;
	CmdGetGunPlayDataScRsp = 4120;
	CmdUpdateMovieRacingDataCsReq = 4154;
	CmdSecurityReportCsReq = 4107;
	CmdDifficultyAdjustmentUpdateDataCsReq = 4142;
	CmdTriggerVoiceCsReq = 4116;
}

enum CancelCacheType {
	CACHE_NOTIFY_TYPE_NONE = 0;
	CACHE_NOTIFY_TYPE_RECYCLE = 1;
	CACHE_NOTIFY_TYPE_RECHARGE = 2;
	CACHE_NOTIFY_TYPE_ITEM_AUTO_TRANSFER = 3;
}

enum MovieRacingType {
	MOVIE_RACING_OVER_TAKE = 0;
	MOVIE_RACING_OVER_TAKE_ENDLESS = 1;
	MOVIE_RACING_SHOOTING = 2;
	MOVIE_RACING_SHOOTING_ENDLESS = 3;
}

enum DifficultyAdjustmentType {
	DIFFICULTY_AJUSTMENT_TYPE_DEFAULT = 0;
	DIFFICULTY_AJUSTMENT_TYPE_EASY = 1;
}

enum GIILENMKCAH {
	DIFFICULTY_AJUSTMENT_SOURCE_NONE = 0;
	DIFFICULTY_AJUSTMENT_SOURCE_RAID = 1;
	DIFFICULTY_AJUSTMENT_SOURCE_EVENT = 2;
}

enum MNIJHMEPGNN {
	MAZE_KILL_SOURCE_NONE = 0;
	MAZE_KILL_SOURCE_SWITCH_HAND = 1;
	MAZE_KILL_SOURCE_TIME_LINE = 2;
}
message ShareCsReq {
	uint32 ENFKGGNOMEO = 5;
}

message ADGNKECPOMA {
	uint32 ENFKGGNOMEO = 11;
	uint32 CCCDKGAMDLB = 6;
}
message ShareScRsp {
	ItemList reward = 4;
	uint32 retcode = 12;
	ADGNKECPOMA FGPLILEBKGL = 9;
}
message GetShareDataCsReq {
}
message GetShareDataScRsp {
	uint32 retcode = 6;
	repeated ADGNKECPOMA MFKJJBPNDAM = 13;
}
message TakePictureCsReq {
}
message TakePictureScRsp {
	uint32 retcode = 7;
}

message NLBMCGCAEIO {
	repeated uint32 PILDEFKPKLE = 3;
	uint32 AFLEAJIHNEB = 4;
	uint32 type = 6;
}
message TriggerVoiceCsReq {
	repeated NLBMCGCAEIO MNELHNHCKPJ = 14;
}
message TriggerVoiceScRsp {
	uint32 retcode = 4;
}
message CancelCacheNotifyCsReq {
	CancelCacheType type = 1;
	repeated string KCLJMCAKOJF = 8;
	repeated uint32 daily_index = 4;
}
message CancelCacheNotifyScRsp {
	uint32 retcode = 1;
}
message SecurityReportCsReq {
	string DGDLNIEFCPF = 5;
}
message SecurityReportScRsp {
	uint32 retcode = 13;
}

message GMAAJHDFACD {
	MovieRacingType type = 8;
	uint32 IFAIKOIOIDD = 10;
	uint32 PDOMACFEMGG = 3;
	uint32 level = 15;
}
message GetMovieRacingDataCsReq {
}
message GetMovieRacingDataScRsp {
	uint32 retcode = 15;
	repeated GMAAJHDFACD ODJIGEBEHGC = 9;
}
message UpdateMovieRacingDataCsReq {
	GMAAJHDFACD KIHCHDFFPOL = 6;
}
message UpdateMovieRacingDataScRsp {
	uint32 retcode = 11;
	GMAAJHDFACD KIHCHDFFPOL = 8;
}
message SubmitOrigamiItemCsReq {
	uint32 LCBOFMOPGKE = 5;
}
message SubmitOrigamiItemScRsp {
	uint32 LCBOFMOPGKE = 10;
	uint32 retcode = 12;
}
message GetOrigamiPropInfoCsReq {
	uint32 content_id = 15;
	uint32 entry_story_line_id = 6;
	repeated uint32 floor_id_list = 8;
}

message LAMMCHABAGH {
	uint32 config_id = 13;
	uint32 group_id = 12;
	uint32 state = 14;
}

message FCHOLNDIPKC {
	repeated LAMMCHABAGH CLJJAFGFKEL = 5;
	uint32 floor_id = 1;
}
message GetOrigamiPropInfoScRsp {
	uint32 retcode = 15;
	repeated FCHOLNDIPKC LMEBHNLDKDJ = 9;
	uint32 entry_story_line_id = 3;
	uint32 content_id = 13;
}

message KLBHFHJDBFI {
	uint32 level = 1;
	bool NCNAONIFPFM = 11;
	uint32 IFAIKOIOIDD = 15;
	uint32 BMCJHONBHJH = 10;
}
message GetGunPlayDataCsReq {
}
message GetGunPlayDataScRsp {
	uint32 retcode = 10;
	repeated KLBHFHJDBFI LNBFDJMNACN = 7;
}
message UpdateGunPlayDataCsReq {
	KLBHFHJDBFI ODFHNCHIEJN = 5;
	uint32 PNEIFBEGMDH = 14;
	uint32 group_id = 1;
	uint64 uuid = 15;
}
message UpdateGunPlayDataScRsp {
	KLBHFHJDBFI ODFHNCHIEJN = 10;
	uint32 retcode = 2;
}

message JCDNMBCKPLF {
	GIILENMKCAH modifier_source_type = 11;
	DifficultyAdjustmentType KCMJKGADPIP = 5;
	uint32 id = 3;
}
message DifficultyAdjustmentGetDataCsReq {
}
message DifficultyAdjustmentGetDataScRsp {
	uint32 retcode = 4;
	repeated JCDNMBCKPLF content_package_list = 5;
}
message DifficultyAdjustmentUpdateDataCsReq {
	JCDNMBCKPLF data = 5;
}
message DifficultyAdjustmentUpdateDataScRsp {
	uint32 retcode = 4;
	repeated JCDNMBCKPLF content_package_list = 8;
	JCDNMBCKPLF data = 10;
}
message MazeKillDirectCsReq {
	repeated uint32 entity_list = 5;
	uint32 MMKOGOKNPKL = 11;
	MNIJHMEPGNN modifier_source_type = 10;
}
message MazeKillDirectScRsp {
	uint32 retcode = 7;
	repeated uint32 entity_list = 15;
}
message DirectDeliveryScNotify {
	repeated ItemList reward_list = 4;
	uint32 MDDJNCKMJHG = 7;
}
message CancelDirectDeliveryNoticeCsReq {
	uint32 MDDJNCKMJHG = 12;
}
message CancelDirectDeliveryNoticeScRsp {
	uint32 retcode = 13;
	uint32 MDDJNCKMJHG = 14;
}

enum CmdMissionType {
	CmdMissionTypeNone = 0;
	CmdUpdateMainMissionCustomValueCsReq = 1266;
	CmdGetMissionDataCsReq = 1210;
	CmdMissionAcceptScNotify = 1235;
	CmdFinishTalkMissionCsReq = 1298;
	CmdFinishCosumeItemMissionCsReq = 1216;
	CmdAcceptMainMissionCsReq = 1242;
	CmdUpdateTrackMainMissionIdCsReq = 1288;
	CmdSyncTaskScRsp = 1297;
	CmdFinishedMissionScNotify = 1260;
	CmdUpdateTrackMainMissionIdScRsp = 1215;
	CmdMissionGroupWarnScNotify = 1239;
	CmdAcceptMainMissionScRsp = 1201;
	CmdSyncTaskCsReq = 1202;
	CmdStartFinishSubMissionScNotify = 1224;
	CmdGetMissionStatusScRsp = 1274;
	CmdGetMissionDataScRsp = 1205;
	CmdGetMainMissionCustomValueCsReq = 1251;
	CmdFinishTalkMissionScRsp = 1253;
	CmdMissionRewardScNotify = 1279;
	CmdSubMissionRewardScNotify = 1220;
	CmdUpdateMainMissionCustomValueScRsp = 1228;
	CmdStartFinishMainMissionScNotify = 1273;
	CmdFinishCosumeItemMissionScRsp = 1226;
	CmdTeleportToMissionResetPointScRsp = 1292;
	CmdGetMissionStatusCsReq = 1278;
	CmdTeleportToMissionResetPointCsReq = 1269;
	CmdGetMainMissionCustomValueScRsp = 1225;
}

enum MissionSyncRecord {
	MISSION_SYNC_RECORD_NONE = 0;
	MISSION_SYNC_RECORD_MAIN_MISSION_ACCEPT = 1;
	MISSION_SYNC_RECORD_MAIN_MISSION_START = 2;
	MISSION_SYNC_RECORD_MAIN_MISSION_FINISH = 3;
	MISSION_SYNC_RECORD_MAIN_MISSION_DELETE = 4;
	MISSION_SYNC_RECORD_MISSION_ACCEPT = 11;
	MISSION_SYNC_RECORD_MISSION_START = 12;
	MISSION_SYNC_RECORD_MISSION_FINISH = 13;
	MISSION_SYNC_RECORD_MISSION_DELETE = 14;
	MISSION_SYNC_RECORD_MISSION_PROGRESS = 15;
}

enum GJPKMNEFCFO {
	MAIN_MISSION_SYNC_NONE = 0;
	MAIN_MISSION_SYNC_MCV = 1;
}

enum TrackMainMissionUpdateReasonId {
	TRACK_MAIN_MISSION_UPDATE_NONE = 0;
	TRACK_MAIN_MISSION_UPDATE_AUTO = 1;
	TRACK_MAIN_MISSION_UPDATE_MANUAL = 2;
	TRACK_MAIN_MISSION_UPDATE_LOGIN_REPORT = 3;
}
message GetMissionDataCsReq {
}

message IKAMMKLBOCO {
	MissionSyncRecord type = 2;
	uint32 id = 10;
	uint32 display_value = 4;
}

message Mission {
	MissionStatus status = 13;
	uint32 id = 6;
	uint32 progress = 1;
}

message MissionCustomValue {
	uint32 custom_value = 12;
	uint32 index = 5;
	string DFDEKANJBLG = 1;
}

message MissionCustomValueList {
	repeated MissionCustomValue custom_value_list = 2;
}

message MainMission {
	uint32 id = 3;
	MissionStatus status = 10;
	repeated MissionCustomValue custom_value_list = 9;
}

message FHABEIKAFBO {
	uint32 id = 15;
	oneof IJCLEPCJBOA {
		MissionCustomValueList custom_value_list = 1935;
	}
}

message MainMissionCustomValue {
	uint32 main_mission_id = 6;
	MissionCustomValueList custom_value_list = 13;
}
message GetMissionDataScRsp {
	repeated Mission mission_list = 2;
	uint32 track_mission_id = 12;
	uint32 retcode = 9;
	repeated MainMission main_mission_list = 11;
	repeated uint32 OJOMOCGIAIC = 3;
}
message AcceptMainMissionCsReq {
	uint32 main_mission_id = 8;
}
message AcceptMainMissionScRsp {
	uint32 retcode = 10;
	uint32 main_mission_id = 1;
}
message FinishTalkMissionCsReq {
	string talk_str = 3;
	repeated MissionCustomValue custom_value_list = 2;
	uint32 sub_mission_id = 10;
}
message FinishTalkMissionScRsp {
	uint32 sub_mission_id = 1;
	uint32 retcode = 13;
	string talk_str = 5;
	repeated MissionCustomValue custom_value_list = 14;
}
message MissionRewardScNotify {
	uint32 main_mission_id = 2;
	ItemList reward = 6;
	uint32 sub_mission_id = 10;
}
message SubMissionRewardScNotify {
	uint32 sub_mission_id = 5;
	ItemList reward = 12;
}
message SyncTaskCsReq {
	string key = 10;
}
message SyncTaskScRsp {
	uint32 retcode = 2;
	string key = 14;
}
message MissionGroupWarnScNotify {
	repeated uint32 group_id_list = 11;
}
message FinishCosumeItemMissionCsReq {
	uint32 sub_mission_id = 3;
	ItemList item_list = 14;
}
message FinishCosumeItemMissionScRsp {
	uint32 sub_mission_id = 8;
	uint32 retcode = 3;
}
message GetMissionStatusCsReq {
	repeated uint32 sub_mission_id_list = 2;
	repeated uint32 main_mission_id_list = 13;
}
message GetMissionStatusScRsp {
	repeated uint32 unfinished_main_mission_id_list = 8;
	repeated Mission sub_mission_status_list = 6;
	repeated uint32 finished_main_mission_id_list = 4;
	repeated MainMissionCustomValue main_mission_mcv_list = 2;
	uint32 retcode = 12;
	repeated uint32 disabled_main_mission_id_list = 15;
	repeated uint32 curversion_finished_main_mission_id_list = 13;
}
message TeleportToMissionResetPointCsReq {
}
message TeleportToMissionResetPointScRsp {
	uint32 client_pos_version = 13;
	MotionInfo motion = 3;
	uint32 retcode = 6;
}
message StartFinishSubMissionScNotify {
	uint32 sub_mission_id = 1;
}
message StartFinishMainMissionScNotify {
	uint32 main_mission_id = 6;
}
message GetMainMissionCustomValueCsReq {
	repeated uint32 main_mission_id_list = 6;
}
message GetMainMissionCustomValueScRsp {
	repeated MainMission main_mission_list = 3;
	uint32 retcode = 8;
}
message MissionAcceptScNotify {
	repeated uint32 sub_mission_id_list = 2;
}
message UpdateTrackMainMissionIdCsReq {
	TrackMainMissionUpdateReasonId IJDJMNJBOBI = 9;
	uint32 LMBCEOPCIGC = 5;
	uint32 track_mission_id = 14;
}
message UpdateTrackMainMissionIdScRsp {
	uint32 track_mission_id = 8;
	uint32 prev_track_mission_id = 7;
	uint32 retcode = 12;
}
message FinishedMissionScNotify {
	repeated uint32 finished_main_mission_id_list = 9;
}
message UpdateMainMissionCustomValueCsReq {
	uint32 main_mission_id = 4;
	string DFDEKANJBLG = 9;
	uint32 value = 15;
}
message UpdateMainMissionCustomValueScRsp {
	MainMission LPJFBMJBEPP = 2;
	uint32 retcode = 9;
}

enum CmdMonopolyType {
	CmdMonopolyTypeNone = 0;
	CmdMonopolyGuessChooseCsReq = 7066;
	CmdMonopolyEventLoadUpdateScNotify = 7076;
	CmdMonopolyConditionUpdateScNotify = 7065;
	CmdMonopolyMoveScRsp = 7041;
	CmdMonopolyConfirmRandomCsReq = 7036;
	CmdMonopolyGameRaiseRatioScRsp = 7042;
	CmdMonopolySelectOptionScRsp = 7007;
	CmdMonopolyCheatDiceScRsp = 7092;
	CmdDailyFirstEnterMonopolyActivityCsReq = 7016;
	CmdMonopolyGetRafflePoolInfoScRsp = 7011;
	CmdMonopolyGuessDrawScNotify = 7013;
	CmdMonopolySttUpdateScNotify = 7075;
	CmdMonopolyAcceptQuizScRsp = 7015;
	CmdMonopolyLikeCsReq = 7003;
	CmdMonopolyGiveUpCurContentCsReq = 7009;
	CmdGetMbtiReportCsReq = 7086;
	CmdGetMbtiReportScRsp = 7012;
	CmdGetMonopolyFriendRankingListScRsp = 7083;
	CmdMonopolyRollRandomScRsp = 7067;
	CmdMonopolyBuyGoodsCsReq = 7074;
	CmdMonopolyGetRafflePoolInfoCsReq = 7030;
	CmdMonopolyGetRegionProgressScRsp = 7080;
	CmdGetMonopolyInfoCsReq = 7010;
	CmdMonopolyAcceptQuizCsReq = 7088;
	CmdDeleteSocialEventServerCacheCsReq = 7049;
	CmdMonopolySocialEventEffectScNotify = 7014;
	CmdMonopolyUpgradeAssetCsReq = 7054;
	CmdMonopolyActionResultScNotify = 7098;
	CmdMonopolyConfirmRandomScRsp = 7078;
	CmdMonopolyRollRandomCsReq = 7063;
	CmdMonopolyGetDailyInitItemCsReq = 7100;
	CmdMonopolyDailySettleScNotify = 7058;
	CmdMonopolyTakePhaseRewardCsReq = 7059;
	CmdMonopolyGameBingoFlipCardScRsp = 7037;
	CmdMonopolySelectOptionCsReq = 7055;
	CmdMonopolyTakeRaffleTicketRewardScRsp = 7048;
	CmdMonopolyRollDiceCsReq = 7002;
	CmdMonopolyRollDiceScRsp = 7097;
	CmdMonopolyGetRaffleTicketScRsp = 7099;
	CmdMonopolyGameSettleScNotify = 7001;
	CmdMonopolyClickCellScRsp = 7087;
	CmdMonopolyCellUpdateNotify = 7053;
	CmdMonopolyEventSelectFriendScRsp = 7023;
	CmdMonopolyGetRaffleTicketCsReq = 7022;
	CmdMonopolyContentUpdateScNotify = 7024;
	CmdMonopolyReRollRandomScRsp = 7094;
	CmdGetMonopolyDailyReportScRsp = 7084;
	CmdMonopolyScrachRaffleTicketScRsp = 7040;
	CmdGetMonopolyMbtiReportRewardCsReq = 7047;
	CmdMonopolyScrachRaffleTicketCsReq = 7093;
	CmdMonopolyClickMbtiReportScRsp = 7032;
	CmdMonopolyGetDailyInitItemScRsp = 7068;
	CmdMonopolyGameCreateScNotify = 7060;
	CmdGetMonopolyInfoScRsp = 7005;
	CmdMonopolyGameBingoFlipCardCsReq = 7035;
	CmdMonopolyClickMbtiReportCsReq = 7019;
	CmdMonopolyUpgradeAssetScRsp = 7062;
	CmdMonopolyGuessBuyInformationScRsp = 7008;
	CmdMonopolyTakeRaffleTicketRewardCsReq = 7044;
	CmdMonopolyQuizDurationChangeScNotify = 7046;
	CmdMonopolyEventSelectFriendCsReq = 7064;
	CmdGetMonopolyMbtiReportRewardScRsp = 7052;
	CmdMonopolyGameGachaScRsp = 7025;
	CmdMonopolyClickCellCsReq = 7038;
	CmdMonopolyGameGachaCsReq = 7051;
	CmdMonopolyBuyGoodsScRsp = 7090;
	CmdGetMonopolyFriendRankingListCsReq = 7082;
	CmdGetSocialEventServerCacheScRsp = 7018;
	CmdMonopolyGetRegionProgressCsReq = 7027;
	CmdMonopolyLikeScNotify = 7004;
	CmdDeleteSocialEventServerCacheScRsp = 7096;
	CmdMonopolyGiveUpCurContentScRsp = 7020;
	CmdMonopolyMoveCsReq = 7006;
	CmdDailyFirstEnterMonopolyActivityScRsp = 7026;
	CmdMonopolyReRollRandomCsReq = 7072;
	CmdMonopolyTakePhaseRewardScRsp = 7056;
	CmdMonopolyGuessChooseScRsp = 7028;
	CmdGetSocialEventServerCacheCsReq = 7095;
	CmdMonopolyCheatDiceCsReq = 7069;
	CmdMonopolyLikeScRsp = 7057;
	CmdMonopolyGuessBuyInformationCsReq = 7089;
	CmdMonopolyGameRaiseRatioCsReq = 7073;
	CmdGetMonopolyDailyReportCsReq = 7021;
}

enum GOJOINDBKIK {
	MONOPOLY_SOCIAL_EVENT_STATUS_NONE = 0;
	MONOPOLY_SOCIAL_EVENT_STATUS_WAITING_SELECT_FRIEND = 1;
}

enum IHGJLLNGDKL {
	MONOPOLY_CELL_STATE_IDLE = 0;
	MONOPOLY_CELL_STATE_BARRIER = 1;
	MONOPOLY_CELL_STATE_GROUND = 2;
	MONOPOLY_CELL_STATE_FINISH = 3;
}

enum GKEJFKAKENM {
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_NONE = 0;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_EFFECT = 1;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_BONUS = 2;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_TAX = 3;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_UPGRADE = 4;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_GAME_SETTLE = 5;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_BUY_GOODS = 6;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_CLICK = 7;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_SOCIAL_EVENT = 8;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_LIKE = 9;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_QUIZ_GAME_SETTLE = 10;
}
message GetMonopolyInfoCsReq {
}

message ODAIJIGEAJL {
	bool HGMMCHHBKPB = 5;
	bool LJFGIFBDANC = 15;
	uint32 ENGJFICHDML = 9;
	uint32 EJHDCNEEGMI = 8;
	uint32 FLJBJPAHJIF = 2;
	uint32 item_value = 3;
}

message LLGNIKNMCKE {
	repeated uint32 OFIODJNLBEA = 1;
	GOJOINDBKIK NMAMONLLALL = 14;
}

message OOEMIBFNLLD {
	uint32 progress = 2;
	uint32 EKPNCLPOENK = 7;
}

message LAILNIGFPOO {
	uint64 KHGPFHBOELE = 9;
	bool is_taken_reward = 1;
	bool AELPFEBGNOK = 5;
}

message BCMOKFHJMPM {
	repeated LAILNIGFPOO EBABBEJIPJN = 6;
	uint32 LJJMLEIOIFE = 12;
	uint32 DGALCMFIDFP = 10;
	uint32 JGNIHLJFJPP = 4;
	uint64 JOJNDGBEJEK = 9;
	uint64 OMGKJLJIHLH = 11;
	string DDIBEFMILMP = 1098;
	repeated OOEMIBFNLLD CJFMAIAKENL = 2;
	repeated OOEMIBFNLLD IFKFEPKHLGN = 5;
	string JLEGPNIHMJD = 1265;
	bool FHOLFDONOII = 13;
	repeated OOEMIBFNLLD KGBEJKNCLFK = 7;
	repeated OOEMIBFNLLD JCKNGFJEEGI = 3;
	uint32 HHJPBLEKAPN = 1;
	uint32 BNOLDNBMJHF = 14;
	uint64 EBOOLGNACJJ = 8;
	uint32 DGEPMKFFOAB = 15;
	string PJDFBPBMBBA = 2018;
}

message EDKGOMNEHOH {
	repeated BCMOKFHJMPM FJOAFFLLEOK = 13;
}
message GetMonopolyInfoScRsp {
	NFDGIJLOLGD HEHJKFILINN = 4;
	CANNIBGCLCL OELHKEIPIDJ = 3;
	JAJGKKDPALC rogue_map = 11;
	LLGNIKNMCKE JNHJEELJFHF = 5;
	ICIHABOLHPN GPFGDOKNGEL = 6;
	repeated uint32 COKCGFMEIBA = 7;
	KJBMLBGIBJF stt = 9;
	EDKGOMNEHOH IEDGKHDJJDC = 13;
	AEDKPBFCKGO LJAOGAPDFHA = 15;
	AFDALBGANPC rogue_buff_info = 1;
	ODAIJIGEAJL HLJMHNABFMC = 2;
	HFDGMJJFOHM FGHCIADCMNJ = 12;
	uint32 retcode = 8;
}

message NFDGIJLOLGD {
	repeated uint32 HFMDLHIFMPI = 5;
}
message MonopolyConditionUpdateScNotify {
	NFDGIJLOLGD HEHJKFILINN = 6;
}

message KJBMLBGIBJF {
	repeated uint32 OCCMNIDEBBJ = 7;
	repeated uint32 JIHCHILFJPI = 9;
}
message MonopolySttUpdateScNotify {
	KJBMLBGIBJF stt = 4;
}

message IAACCAFGEPI {
	bool JMDEFLAFICE = 3;
	uint32 map_id = 6;
	uint32 cell_id = 13;
	IHGJLLNGDKL MAFKCBODMMC = 2;
}

message JAJGKKDPALC {
	uint32 PGALBDIIEFG = 12;
	uint32 LBBONKACGEJ = 8;
	repeated IAACCAFGEPI NBMPBGPJONH = 6;
	IAACCAFGEPI HGBIGBFGBOM = 9;
	repeated IAACCAFGEPI IMOPIEJBHOD = 2;
}
message MonopolyEventLoadUpdateScNotify {
	repeated IAACCAFGEPI NBMPBGPJONH = 7;
	repeated IAACCAFGEPI IMOPIEJBHOD = 1;
}

message COMEOLGLNKO {
	uint32 event_id = 6;
}

message PBLCEJHPOPO {
	uint32 event_id = 10;
}

message LIHOCEHEPDB {
	uint32 event_id = 4;
	uint32 LFCMBGOAIBB = 11;
	repeated uint32 HFEJHLNIGGH = 2;
	uint32 option_id = 7;
}

message OHNBCHLOEBL {
	uint32 LFCMBGOAIBB = 15;
	uint32 OLFNJJKLGMK = 8;
	repeated uint32 HFEJHLNIGGH = 5;
	uint32 event_id = 9;
	uint32 ECCJBGLBIGM = 2;
}

message BLMJNFFPMCN {
	repeated LBENAAHCPEO KMKFOJAHELJ = 2;
	uint32 PIFPGKFFBPN = 8;
}

message AAIBAKECHCE {
	uint32 PAGCAMAGFLB = 3;
}

message FGONFNIDOHJ {
	uint32 shop_id = 14;
}

message IPONFKAJENJ {
	uint32 APAOBDGJMEG = 5;
}

message NALPJMLJPNP {
	uint32 get_item_list = 5;
	uint32 OEFHMBJBLGC = 4;
}

message LBENAAHCPEO {
	uint32 OKDLMEJPCHE = 8;
	oneof BMPFOIKMGBK {
		COMEOLGLNKO PECBIMKOOAH = 3;
		PBLCEJHPOPO EMLNNMLGNKH = 15;
		LIHOCEHEPDB JBJLDPPDBBC = 13;
		AAIBAKECHCE ECOIFNNJDAP = 14;
		FGONFNIDOHJ NBJICDAJDGF = 11;
		IPONFKAJENJ GAJBFPCPIGM = 6;
		NALPJMLJPNP JOPPAEMPPFH = 12;
		OHNBCHLOEBL JOADHBLDIMF = 7;
		BLMJNFFPMCN IEFOGHNGCMC = 9;
	}
}

message ICIHABOLHPN {
	LBENAAHCPEO FHNPAGIHINF = 7;
}
message MonopolyContentUpdateScNotify {
	LBENAAHCPEO FHNPAGIHINF = 9;
}
message MonopolyCellUpdateNotify {
	IAACCAFGEPI HGBIGBFGBOM = 10;
}
message MonopolyRollDiceCsReq {
}
message MonopolyRollDiceScRsp {
	uint32 BLHIABBKGPB = 6;
	uint32 retcode = 14;
}
message MonopolyCheatDiceCsReq {
	uint32 OCFHHDCBFBH = 3;
}
message MonopolyCheatDiceScRsp {
	uint32 OCFHHDCBFBH = 5;
	uint32 retcode = 4;
}
message MonopolyMoveCsReq {
	uint32 CNIFHNBIOFJ = 7;
	uint32 DGBMDPBIALG = 1;
}
message MonopolyMoveScRsp {
	uint32 retcode = 6;
	JAJGKKDPALC rogue_map = 9;
	repeated IAACCAFGEPI HECJNJNIAKK = 11;
}
message MonopolySelectOptionCsReq {
	uint32 option_id = 15;
	uint32 event_id = 13;
}

message DDCELCOJGNP {
	uint32 option_id = 11;
	uint32 LGIIAHIDLMG = 1;
	uint32 event_id = 5;
}
message MonopolySelectOptionScRsp {
	uint32 event_id = 1;
	uint32 option_id = 15;
	repeated DDCELCOJGNP ABNOINLOKLN = 5;
	LBENAAHCPEO GPFGDOKNGEL = 2;
	uint32 retcode = 13;
}
message MonopolyRollRandomCsReq {
	uint32 event_id = 7;
}
message MonopolyRollRandomScRsp {
	uint32 event_id = 8;
	LBENAAHCPEO GPFGDOKNGEL = 3;
	uint32 retcode = 12;
}
message MonopolyReRollRandomCsReq {
	uint32 event_id = 11;
}
message MonopolyReRollRandomScRsp {
	LBENAAHCPEO GPFGDOKNGEL = 4;
	uint32 retcode = 3;
	uint32 event_id = 5;
}
message MonopolyConfirmRandomCsReq {
	uint32 event_id = 2;
}
message MonopolyConfirmRandomScRsp {
	uint32 retcode = 8;
	uint32 event_id = 7;
	LBENAAHCPEO GPFGDOKNGEL = 1;
}
message MonopolyBuyGoodsCsReq {
	uint32 shop_id = 15;
	uint32 goods_id = 14;
}
message MonopolyBuyGoodsScRsp {
	uint32 goods_id = 11;
	uint32 retcode = 15;
	uint32 shop_id = 8;
}
message MonopolyUpgradeAssetCsReq {
	uint32 PAGCAMAGFLB = 6;
}
message MonopolyUpgradeAssetScRsp {
	uint32 PAGCAMAGFLB = 11;
	uint32 retcode = 12;
}
message MonopolyGiveUpCurContentCsReq {
	uint32 content_id = 7;
}
message MonopolyGiveUpCurContentScRsp {
	uint32 content_id = 1;
	uint32 retcode = 10;
}

message MonopolyActionResult {
	uint32 effect_type = 1;
	GKEJFKAKENM source_type = 9;
	uint32 click_cell_id = 14;
	NIBJAMFMEFD detail = 4;
	uint32 trigger_map_id = 11;
	uint32 trigger_cell_id = 8;
	uint32 click_map_id = 10;
}
message MonopolyActionResultScNotify {
	repeated MonopolyActionResult PFNOKNCDPGE = 1;
}

message LMMEBMBGLDN {
	uint32 HKMIHEJCAEM = 9;
	bool BLHDOHMACBM = 13;
}

message NIBJAMFMEFD {
	oneof FBKHKLGJMFH {
		LMKAAEFPFFO MECLLCDABNO = 10;
		LMKAAEFPFFO FFIPKMHCKHJ = 1;
		AIDFBBIAPEP NFBCGKNOPDA = 6;
		AIDFBBIAPEP DACHANHPPBG = 12;
		BMPLFJKEOLF get_buff_list = 11;
		BMPLFJKEOLF remove_buff_list = 13;
		LNKMKNBPIJH DMDPCOOAFJK = 9;
		LNKMKNBPIJH HHIBFNAGKFF = 7;
		LMMEBMBGLDN NKCMGBCPJGG = 8;
		LPBAMOKKJCM HANOGACJPKB = 2;
		BMPLFJKEOLF OMFECIMLADC = 15;
		LNKMKNBPIJH NGONCCBLAOL = 14;
		NMGHFOLKFAJ FJGHNLNJLPH = 3;
	}
}

message NMGHFOLKFAJ {
	uint32 GJLKOGGIIFO = 2;
}

message LMKAAEFPFFO {
	uint32 item_id = 9;
	uint32 BMALPKEKBEL = 11;
	uint32 OGJOFMCMFPG = 1;
}

message LNKMKNBPIJH {
	uint32 IGDBOFCDJOL = 9;
	uint32 OGNKMDNJGOG = 8;
}

message LPBAMOKKJCM {
	uint32 NJDGGJBEFCN = 14;
	uint32 MDFLFLLMGNA = 7;
	uint32 HNLFMJOKNBN = 2;
	uint32 KNGGPPIOGAE = 12;
}

message HAKNOFDPBOD {
	uint32 FPOGIALMCIP = 4;
	uint32 ACDOPCBMPNL = 13;
	uint32 config_id = 14;
	oneof NGIKDJMNGBG {
		GJKIAPIPGAN EJCOLGNJGDC = 1;
		EIMOBGLLEFO LKANIPLNKGC = 10;
		EOPFMPAOOJE BDEMPAKHGMJ = 8;
	}
}

message HFDGMJJFOHM {
	LMMEBMBGLDN NPOIGJPCGFB = 1;
	HAKNOFDPBOD AJCINKHBDJB = 2;
	repeated HAKNOFDPBOD PEFMDFKECOD = 12;
}
message MonopolyGameSettleScNotify {
	ItemList PEMIJIMJMIO = 14;
	HAKNOFDPBOD GAJBFPCPIGM = 11;
	ItemList item_list = 15;
}
message MonopolyGameCreateScNotify {
	LMMEBMBGLDN NPOIGJPCGFB = 2;
	HAKNOFDPBOD GAJBFPCPIGM = 8;
}
message MonopolyGameRaiseRatioCsReq {
	uint32 ACDOPCBMPNL = 6;
}
message MonopolyGameRaiseRatioScRsp {
	uint32 retcode = 8;
	uint32 ratio = 6;
}
message DailyFirstEnterMonopolyActivityCsReq {
}
message DailyFirstEnterMonopolyActivityScRsp {
	bool OICAGHGMMFP = 2;
	uint32 KEKJCDMIDDL = 14;
	uint32 retcode = 15;
	AEDKPBFCKGO LJAOGAPDFHA = 7;
	int64 IIHKIKLIOJI = 10;
}
message MonopolyGetDailyInitItemCsReq {
	bool IFHPJJBLNDL = 3;
}
message MonopolyGetDailyInitItemScRsp {
	int64 IIHKIKLIOJI = 13;
	uint32 IOABHFPABBE = 8;
	uint32 OFGNIGNOHAF = 7;
	uint32 HEOOFPGKDCD = 11;
	uint32 retcode = 4;
	uint32 HBFFFGPJKIC = 10;
	uint32 HCDBBFLPCFL = 6;
}

message GJKIAPIPGAN {
	uint32 OEFJMEFPIPL = 1;
	repeated uint32 POGEMMICILA = 4;
	repeated uint32 FHBOPEPJAEN = 2;
	bool NFEADMFNFLK = 12;
	repeated uint32 LEGHKNNKOMG = 15;
}
message MonopolyGameBingoFlipCardCsReq {
	uint32 HCFPOFMDGKN = 10;
}
message MonopolyGameBingoFlipCardScRsp {
	bool NFEADMFNFLK = 15;
	uint32 retcode = 10;
	repeated uint32 LEGHKNNKOMG = 5;
	uint32 NPJEECEDPOK = 14;
}
message MonopolyGameGachaCsReq {
}
message MonopolyGameGachaScRsp {
	uint32 retcode = 1;
	repeated uint32 result_list = 15;
}

message NKACIMEOAPD {
	uint32 IBADOBADHJH = 3;
	uint32 POGJHKFBMCH = 9;
}

message EIMOBGLLEFO {
	repeated NKACIMEOAPD NDGGACPICBF = 15;
	repeated uint32 HPNHHCMKJCB = 13;
	uint32 OHLEPKEKMNH = 4;
	uint32 EAEJLOFGAFO = 10;
	uint32 CHJNGDIOOME = 11;
	uint32 BHPFPEJBKEC = 3;
}
message MonopolyAcceptQuizCsReq {
	repeated NKACIMEOAPD NDGGACPICBF = 12;
}
message MonopolyAcceptQuizScRsp {
	EIMOBGLLEFO LKANIPLNKGC = 5;
	uint32 retcode = 3;
}

message OOCKALNFHNP {
	uint32 CHJNGDIOOME = 11;
	uint32 BGBIHIDHCON = 13;
	uint32 HMCJOBJBPKJ = 4;
}
message MonopolyQuizDurationChangeScNotify {
	repeated OOCKALNFHNP LEADMNEIMDP = 6;
}

message EOPFMPAOOJE {
	bool LOPDBAEGFKP = 6;
	uint32 PPCLBDBJLMO = 8;
	uint32 HMHJDBIFGDI = 2;
}
message MonopolyGuessChooseCsReq {
	uint32 HMHJDBIFGDI = 11;
}
message MonopolyGuessChooseScRsp {
	uint32 HMHJDBIFGDI = 5;
	uint32 retcode = 13;
}

message ACKNCAAAMJM {
	uint32 PPCLBDBJLMO = 15;
	ItemList item_list = 14;
	uint32 GIACFCDDJNM = 11;
}
message MonopolyGuessDrawScNotify {
	repeated ACKNCAAAMJM JHIIKPEJEIE = 6;
}
message MonopolyGuessBuyInformationCsReq {
}
message MonopolyGuessBuyInformationScRsp {
	uint32 retcode = 12;
}

message AIDFBBIAPEP {
	uint32 level = 13;
	uint32 MILKEACFLPO = 6;
	uint32 PAGCAMAGFLB = 5;
}

message CANNIBGCLCL {
	repeated AIDFBBIAPEP MAGEFLJGJND = 11;
}

message AEDKPBFCKGO {
	uint32 FNIGPGBGEHN = 13;
	uint32 IFKDGEBCDEG = 2;
	uint32 GIMDHBNJOOO = 3;
	uint32 EFINFPKKJLE = 8;
	uint32 PILAAGOKAOF = 6;
	bool IMOBLGOAJCB = 10;
	uint32 PKDLKCBKKPF = 5;
	uint32 PDDNGKNCPEB = 11;
	uint32 KMGIEMOFOGB = 7;
}
message MonopolyDailySettleScNotify {
	AEDKPBFCKGO LJAOGAPDFHA = 1;
	uint32 KEKJCDMIDDL = 11;
}

message BMPLFJKEOLF {
	uint32 buff_id = 11;
	uint32 OKDLMEJPCHE = 8;
	uint32 COFFEBNIBHK = 6;
}

message AFDALBGANPC {
	repeated BMPLFJKEOLF buff_list = 1;
}

message INDGLKCECDC {
	uint32 FNIGPGBGEHN = 4;
	uint32 HDILBDIPGHO = 12;
	uint32 DPJKOJGCJLP = 6;
	uint32 uid = 7;
	uint32 PILAAGOKAOF = 13;
}
message GetMonopolyFriendRankingListCsReq {
}
message GetMonopolyFriendRankingListScRsp {
	uint32 retcode = 4;
	repeated INDGLKCECDC DCFHGAAJLNN = 2;
	INDGLKCECDC ICMGEGEFDLE = 8;
}
message MonopolyLikeCsReq {
	uint32 CBEGNBKMHCD = 14;
}
message MonopolyLikeScRsp {
	ItemList reward_list = 4;
	uint32 CBEGNBKMHCD = 12;
	uint32 retcode = 1;
}
message MonopolyLikeScNotify {
	repeated uint32 OFIODJNLBEA = 1;
	uint32 HDILBDIPGHO = 11;
}
message GetMbtiReportCsReq {
}

message MFDKINPDMKE {
	uint32 cnt = 6;
	uint32 FIOEPGPEBFD = 5;
}
message GetMbtiReportScRsp {
	repeated DDCELCOJGNP ABNOINLOKLN = 15;
	int32 PHNKKELLANM = 3;
	bool PCADCGCELIN = 11;
	uint32 retcode = 14;
	uint32 progress = 12;
	bool is_taken_reward = 2;
	repeated MFDKINPDMKE GMDHHOGBACN = 5;
	int32 LJHAIFCIABH = 1;
}
message MonopolyEventSelectFriendCsReq {
	bool BAGMAOIPMJE = 2;
	uint32 IPGECLELHGJ = 12;
}
message MonopolyEventSelectFriendScRsp {
	IAACCAFGEPI HGBIGBFGBOM = 14;
	uint32 get_item_list = 6;
	uint32 retcode = 8;
	uint32 OEFHMBJBLGC = 10;
}

message SocialEventServerCache {
	uint32 sub_coin = 9;
	uint32 add_coin = 2;
	uint32 src_uid = 3;
	uint32 id = 8;
}
message MonopolySocialEventEffectScNotify {
	repeated SocialEventServerCache MIAEAFFDGMH = 14;
}
message GetSocialEventServerCacheCsReq {
}
message GetSocialEventServerCacheScRsp {
	uint32 retcode = 12;
	repeated SocialEventServerCache MIAEAFFDGMH = 13;
}
message DeleteSocialEventServerCacheCsReq {
	repeated uint32 JIDDLNHJNPB = 9;
}
message DeleteSocialEventServerCacheScRsp {
	repeated uint32 BFGJMMPCPNJ = 12;
	uint32 retcode = 13;
}
message MonopolyGetRaffleTicketCsReq {
	uint32 HHJPBLEKAPN = 7;
}
message MonopolyGetRaffleTicketScRsp {
	uint32 retcode = 12;
	repeated LAILNIGFPOO BLMEDLNOKEI = 15;
	uint32 HHJPBLEKAPN = 6;
}
message MonopolyTakeRaffleTicketRewardCsReq {
	uint32 HHJPBLEKAPN = 6;
	uint64 PMELCDFHGKC = 11;
}
message MonopolyTakeRaffleTicketRewardScRsp {
	uint32 PMELCDFHGKC = 8;
	uint32 HHJPBLEKAPN = 2;
	ItemList reward_list = 5;
	uint32 retcode = 15;
}
message MonopolyScrachRaffleTicketCsReq {
	uint32 HHJPBLEKAPN = 4;
	uint64 PMELCDFHGKC = 13;
}
message MonopolyScrachRaffleTicketScRsp {
	uint32 HHJPBLEKAPN = 5;
	uint64 PMELCDFHGKC = 11;
	uint32 retcode = 14;
}
message MonopolyGetRegionProgressCsReq {
}
message MonopolyGetRegionProgressScRsp {
	uint32 retcode = 13;
	uint32 DPJKOJGCJLP = 7;
	uint32 EIMGBKNLGNF = 2;
}
message MonopolyGetRafflePoolInfoCsReq {
}
message MonopolyGetRafflePoolInfoScRsp {
	EDKGOMNEHOH IEDGKHDJJDC = 8;
	uint32 retcode = 4;
}
message MonopolyTakePhaseRewardCsReq {
	repeated uint32 LJBGJHPKKJJ = 10;
}
message MonopolyTakePhaseRewardScRsp {
	repeated uint32 LJBGJHPKKJJ = 7;
	ItemList reward_list = 9;
	uint32 retcode = 5;
}
message GetMonopolyMbtiReportRewardCsReq {
}
message GetMonopolyMbtiReportRewardScRsp {
	uint32 retcode = 6;
	ItemList reward_list = 11;
}
message GetMonopolyDailyReportCsReq {
}
message GetMonopolyDailyReportScRsp {
	uint32 retcode = 8;
	AEDKPBFCKGO LJAOGAPDFHA = 1;
}
message MonopolyClickCellCsReq {
	uint32 cell_id = 10;
	uint32 map_id = 6;
}
message MonopolyClickCellScRsp {
	uint32 cell_id = 10;
	uint32 retcode = 1;
	uint32 map_id = 15;
}
message MonopolyClickMbtiReportCsReq {
}
message MonopolyClickMbtiReportScRsp {
	uint32 retcode = 8;
}

enum CmdMultiplayerType {
	CmdMultiplayerTypeNone = 0;
	CmdMultiplayerMatch3FinishScNotify = 1041;
	CmdMultiplayerFightGameStartScNotify = 1097;
	CmdMultiplayerFightGameStateScRsp = 1005;
	CmdMultiplayerFightGameFinishScNotify = 1006;
	CmdMultiplayerGetFightGateCsReq = 1098;
	CmdMultiplayerFightGameStateCsReq = 1010;
	CmdMultiplayerFightGiveUpCsReq = 1079;
	CmdMultiplayerGetFightGateScRsp = 1053;
	CmdMultiplayerFightGiveUpScRsp = 1002;
}
message MultiplayerFightGameStateCsReq {
}
message MultiplayerFightGameStateScRsp {
	repeated CBBDIOMIFHD LIPJDJPMOKB = 9;
	PPGGKMDAOEA PFFFJNGNPOM = 1;
	uint32 retcode = 12;
}
message MultiplayerGetFightGateCsReq {
	uint32 player_data = 7;
}
message MultiplayerGetFightGateScRsp {
	string ip = 6;
	uint64 NOGFEEMNHPC = 3;
	uint32 retcode = 1;
	uint32 port = 10;
	string AOKCMMPFGBC = 9;
}
message MultiplayerFightGiveUpCsReq {
	uint64 NOGFEEMNHPC = 6;
}
message MultiplayerFightGiveUpScRsp {
	uint32 retcode = 4;
}
message MultiplayerFightGameStartScNotify {
	repeated CBBDIOMIFHD LIPJDJPMOKB = 2;
	PPGGKMDAOEA PFFFJNGNPOM = 9;
}
message MultiplayerFightGameFinishScNotify {
	PPGGKMDAOEA PFFFJNGNPOM = 4;
}
message MultiplayerMatch3FinishScNotify {
	Match3FinishReason reason = 14;
	CDIMEMFJJFP NIAEGHJLNMB = 13;
	uint32 KOJIHJIHKIA = 15;
	uint32 FDGDOKAFBDH = 1;
}

enum CmdMultipleDropType {
	CmdMultipleDropTypeNone = 0;
	CmdGetMultipleDropInfoScRsp = 4605;
	CmdGetPlayerReturnMultiDropInfoScRsp = 4679;
	CmdMultipleDropInfoScNotify = 4698;
	CmdGetPlayerReturnMultiDropInfoCsReq = 4653;
	CmdMultipleDropInfoNotify = 4602;
	CmdGetMultipleDropInfoCsReq = 4610;
}
message GetMultipleDropInfoCsReq {
}

message ECCNNONKFCA {
	uint32 id = 8;
	uint32 OLALHIKMJOP = 3;
}
message GetMultipleDropInfoScRsp {
	uint32 retcode = 7;
	repeated OHDNCHFGFMA FCHNNKEKFCL = 5;
	repeated ECCNNONKFCA LJCPDMNKJIF = 14;
}
message MultipleDropInfoScNotify {
	repeated ECCNNONKFCA LJCPDMNKJIF = 13;
}
message GetPlayerReturnMultiDropInfoCsReq {
}

message JBFIPIJJIDL {
	uint32 DKJGCBJKEEN = 6;
	uint32 panel_id = 4;
	uint32 PJHDJKMJPKH = 11;
	uint32 LJKFFDMHOJH = 13;
}

message OHDNCHFGFMA {
	uint32 panel_id = 9;
	uint32 BJFBGLBJBNN = 11;
	uint32 LCLMHEGDGGB = 13;
	uint32 durability = 1;
}
message GetPlayerReturnMultiDropInfoScRsp {
	JBFIPIJJIDL IKGFOEJPJCF = 12;
	uint32 retcode = 9;
	repeated OHDNCHFGFMA FCHNNKEKFCL = 8;
}
message MultipleDropInfoNotify {
	repeated OHDNCHFGFMA FCHNNKEKFCL = 3;
	repeated JBFIPIJJIDL PONJJNDDKBH = 5;
	repeated ECCNNONKFCA LJCPDMNKJIF = 4;
}

enum CmdMuseumType {
	CmdMuseumTypeNone = 0;
	CmdGetMuseumInfoScRsp = 4305;
	CmdUpgradeAreaStatScRsp = 4367;
	CmdSetStuffToAreaScRsp = 4302;
	CmdMuseumTargetRewardNotify = 4369;
	CmdMuseumTakeCollectRewardCsReq = 4392;
	CmdUpgradeAreaScRsp = 4326;
	CmdMuseumRandomEventSelectCsReq = 4390;
	CmdGetMuseumInfoCsReq = 4310;
	CmdUpgradeAreaCsReq = 4316;
	CmdUpgradeAreaStatCsReq = 4363;
	CmdBuyNpcStuffScRsp = 4353;
	CmdFinishCurTurnCsReq = 4307;
	CmdGetStuffScNotify = 4341;
	CmdMuseumRandomEventStartScNotify = 4336;
	CmdMuseumFundsChangedScNotify = 4394;
	CmdSetStuffToAreaCsReq = 4379;
	CmdGetExhibitScNotify = 4355;
	CmdMuseumRandomEventSelectScRsp = 4354;
	CmdBuyNpcStuffCsReq = 4398;
	CmdMuseumTargetStartNotify = 4309;
	CmdMuseumInfoChangedScNotify = 4372;
	CmdMuseumTakeCollectRewardScRsp = 4324;
	CmdMuseumRandomEventQueryScRsp = 4374;
	CmdFinishCurTurnScRsp = 4339;
	CmdMuseumDispatchFinishedScNotify = 4362;
	CmdRemoveStuffFromAreaCsReq = 4397;
	CmdRemoveStuffFromAreaScRsp = 4306;
	CmdMuseumTargetMissionFinishNotify = 4320;
	CmdMuseumRandomEventQueryCsReq = 4378;
}

enum AIHADKBHPBM {
	MUSEUM_RANDOM_EVENT_STATE_NONE = 0;
	MUSEUM_RANDOM_EVENT_STATE_START = 1;
	MUSEUM_RANDOM_EVENT_STATE_PROCESSING = 2;
	MUSEUM_RANDOM_EVENT_STATE_FINISH = 3;
}

enum KAMLGLMNJGJ {
	WORK_POS_NONE = 0;
	WORK_POS_1 = 1;
	WORK_POS_2 = 2;
	WORK_POS_3 = 3;
}

enum IBBGDGGHEJL {
	STAT_TYPE_NONE = 0;
	STAT_TYPE_ART = 1;
	STAT_TYPE_CULTURE = 2;
	STAT_TYPE_POPULAR = 3;
}

enum KGJJJKPDCFG {
	UNKNOW = 0;
	MISSION_REWARD = 1;
	EVENT_BUY_STUFF = 2;
	MARKET_BUY_STUFF = 3;
	QUEST_REWARD = 4;
	INITIAL = 5;
	PHASE_FINISH_REWARD = 6;
}

message OPGJGDOGGNJ {
	KAMLGLMNJGJ pos = 10;
	uint32 BDJCGCDJOEO = 1;
}

message JMEAOCPFEOL {
	uint32 HJJFMDHEAPB = 14;
	repeated OPGJGDOGGNJ BOJMNAFDJKH = 15;
	uint32 level = 12;
	uint32 CDNNGAGBAAK = 6;
	uint32 HIHLGAGHLNI = 2;
	uint32 area_id = 3;
}

message PANAIJBJMEN {
	uint32 BELEODAIINB = 13;
	bool is_finish = 6;
}

message DOLGFNLHEAE {
	uint32 GGFDDEJHLIF = 13;
	uint32 FNPPHMBLKOA = 6;
	uint32 FILEDDCMDOC = 2;
	repeated PANAIJBJMEN FMBFBGNABOC = 9;
	uint32 PNGDDNAJCGG = 15;
	uint32 DCEHOGAGKOM = 12;
}

message OLKMLFEEFCJ {
	uint32 LGKIIELGHDJ = 2;
	uint32 BDJCGCDJOEO = 6;
}

message BLNEHDIFMOO {
	repeated uint32 HAABEFKHAMI = 10;
	uint32 DGJBACBIICO = 6;
	uint32 event_id = 11;
	uint32 BMBGKLKECAJ = 4;
	uint32 HCAGLCLEJND = 14;
	AIHADKBHPBM state = 8;
	uint32 COGBCPLMNFD = 12;
}

message JNBCPNCNOHO {
	repeated BLNEHDIFMOO BJCMPHLPKNF = 3;
	uint32 LHNJMBGNDKC = 1;
	repeated uint32 PNJEEPOEMCA = 5;
}
message GetMuseumInfoCsReq {
}
message GetMuseumInfoScRsp {
	repeated uint32 KNDJAPNPAPK = 9;
	repeated OLKMLFEEFCJ BOJMNAFDJKH = 12;
	uint32 JBJLDPPDBBC = 4;
	uint32 level = 5;
	uint32 HPNMPDOCJMA = 15;
	JNBCPNCNOHO EKKOLCCCNNK = 2;
	uint32 EJNKMKFFCCL = 8;
	repeated JMEAOCPFEOL area_list = 6;
	uint32 cur_fund = 11;
	uint32 exp = 10;
	DOLGFNLHEAE JPIBMBBKGND = 7;
	uint32 EJKGHBEMOOB = 3;
	uint32 retcode = 14;
	repeated uint32 KNDMDPEFADC = 13;
}
message BuyNpcStuffCsReq {
	uint32 BDJCGCDJOEO = 3;
}
message BuyNpcStuffScRsp {
	uint32 retcode = 4;
	uint32 BDJCGCDJOEO = 12;
}
message SetStuffToAreaCsReq {
	uint32 LGKIIELGHDJ = 10;
	uint32 BDJCGCDJOEO = 15;
	KAMLGLMNJGJ pos = 5;
}
message SetStuffToAreaScRsp {
	uint32 LGKIIELGHDJ = 10;
	KAMLGLMNJGJ pos = 8;
	uint32 BDJCGCDJOEO = 7;
	uint32 retcode = 6;
}
message RemoveStuffFromAreaCsReq {
	uint32 BDJCGCDJOEO = 10;
}
message RemoveStuffFromAreaScRsp {
	uint32 retcode = 12;
	uint32 BDJCGCDJOEO = 3;
}
message GetStuffScNotify {
	uint32 BDJCGCDJOEO = 1;
	KGJJJKPDCFG AOCELKONHOB = 6;
}
message GetExhibitScNotify {
	uint32 BCCGCFMABGM = 15;
}
message FinishCurTurnCsReq {
	uint32 CCIECPFPFJG = 9;
}
message FinishCurTurnScRsp {
	uint32 retcode = 4;
	uint32 GPOIECCPAMN = 8;
}
message UpgradeAreaCsReq {
	uint32 area_id = 11;
	uint32 level = 3;
}
message UpgradeAreaScRsp {
	uint32 level = 8;
	uint32 retcode = 7;
	uint32 area_id = 10;
}
message UpgradeAreaStatCsReq {
	uint32 area_id = 12;
	uint32 level = 8;
	IBBGDGGHEJL BOJBPOELFCI = 1;
}
message UpgradeAreaStatScRsp {
	IBBGDGGHEJL BOJBPOELFCI = 12;
	uint32 level = 4;
	uint32 retcode = 15;
	uint32 area_id = 10;
}
message MuseumInfoChangedScNotify {
	uint32 exp = 12;
	uint32 cur_fund = 7;
	JNBCPNCNOHO EKKOLCCCNNK = 2;
	uint32 EJNKMKFFCCL = 4;
	DOLGFNLHEAE JPIBMBBKGND = 3;
	repeated uint32 KNDJAPNPAPK = 14;
	repeated uint32 KNDMDPEFADC = 8;
	uint32 HPNMPDOCJMA = 5;
	repeated JMEAOCPFEOL area_list = 15;
	uint32 EJKGHBEMOOB = 10;
	repeated OLKMLFEEFCJ BOJMNAFDJKH = 11;
	uint32 level = 1;
	uint32 JBJLDPPDBBC = 6;
}
message MuseumRandomEventStartScNotify {
	BLNEHDIFMOO HNDLHICDNPC = 13;
}
message MuseumRandomEventQueryCsReq {
	int32 CEHFIILMJKM = 15;
}
message MuseumRandomEventQueryScRsp {
	uint32 retcode = 7;
	JNBCPNCNOHO HNDLHICDNPC = 10;
}
message MuseumRandomEventSelectCsReq {
	uint32 event_id = 15;
	uint32 DGJBACBIICO = 10;
}
message MuseumRandomEventSelectScRsp {
	uint32 DGJBACBIICO = 7;
	uint32 retcode = 3;
	uint32 event_id = 2;
}
message MuseumFundsChangedScNotify {
	uint32 cur_fund = 7;
}
message MuseumDispatchFinishedScNotify {
	uint32 IMBLGCAADFL = 6;
	uint32 BDJCGCDJOEO = 4;
	uint32 cur_fund = 14;
	uint32 MODFABDDNKL = 2;
}
message MuseumTargetStartNotify {
	uint32 PNGDDNAJCGG = 2;
}
message MuseumTargetMissionFinishNotify {
	repeated uint32 BELEODAIINB = 14;
	uint32 PNGDDNAJCGG = 2;
	bool FPBGADBMEAD = 6;
}
message MuseumTargetRewardNotify {
	uint32 item_count = 12;
	uint32 PNGDDNAJCGG = 6;
	uint32 item_id = 1;
}
message MuseumTakeCollectRewardCsReq {
	uint32 item_id = 5;
}
message MuseumTakeCollectRewardScRsp {
	ItemList reward = 3;
	uint32 item_id = 11;
	uint32 retcode = 8;
}

enum CmdMusicRhythmType {
	CmdMusicRhythmTypeNone = 0;
	CmdMusicRhythmDataCsReq = 7600;
	CmdMusicRhythmSaveSongConfigDataScRsp = 7582;
	CmdMusicRhythmMaxDifficultyLevelsUnlockNotify = 7576;
	CmdMusicRhythmUnlockSongNotify = 7599;
	CmdMusicRhythmStartLevelCsReq = 7574;
	CmdMusicRhythmStartLevelScRsp = 7592;
	CmdMusicRhythmSaveSongConfigDataCsReq = 7596;
	CmdMusicRhythmUnlockSongSfxScNotify = 7577;
	CmdMusicRhythmFinishLevelScRsp = 7572;
	CmdMusicRhythmUnlockTrackScNotify = 7571;
	CmdMusicRhythmFinishLevelCsReq = 7598;
	CmdMusicRhythmDataScRsp = 7585;
}

enum EPGDHHHDJDC {
	STATUS_CLOSE = 0;
	STATUS_OPEN = 1;
}

message MusicRhythmLevel {
	uint32 unlock_level = 2;
	uint32 level_id = 15;
	bool full_combo = 9;
}

message MusicRhythmGroup {
	uint32 music_group_id = 10;
	uint32 music_group_phase = 1;
	repeated uint32 NBBOABGLCJC = 7;
	repeated uint32 DNKJDJJBCDK = 12;
}
message MusicRhythmDataCsReq {
	uint32 player_data = 11;
}
message MusicRhythmDataScRsp {
	repeated MusicRhythmLevel music_level = 14;
	uint32 retcode = 7;
	repeated uint32 unlock_track_list = 6;
	repeated MusicRhythmGroup music_group = 8;
	repeated uint32 unlock_song_list = 15;
	bool show_hint = 13;
	repeated uint32 unlock_phase_list = 9;
	uint32 cur_level_id = 10;
	uint32 cur_song_id = 1;
}
message MusicRhythmStartLevelCsReq {
	uint32 level_id = 13;
}
message MusicRhythmStartLevelScRsp {
	string MDLNDGIJNML = 9;
	uint32 level_id = 11;
	uint32 retcode = 3;
}
message MusicRhythmFinishLevelCsReq {
	uint32 MHKHACLNBPM = 14;
	bool full_combo = 8;
	uint32 score_id = 2;
}
message MusicRhythmFinishLevelScRsp {
	uint32 level_id = 15;
	uint32 retcode = 3;
}
message MusicRhythmUnlockTrackScNotify {
	repeated uint32 JIKJHNEACJB = 8;
}
message MusicRhythmSaveSongConfigDataCsReq {
	MusicRhythmGroup CGEDABOABOH = 12;
}
message MusicRhythmSaveSongConfigDataScRsp {
	uint32 retcode = 15;
	uint32 cur_song_id = 8;
	uint32 MBLDFHLDCPI = 14;
}
message MusicRhythmUnlockSongNotify {
	repeated uint32 OAFHAOPEJPO = 6;
}
message MusicRhythmMaxDifficultyLevelsUnlockNotify {
}
message MusicRhythmUnlockSongSfxScNotify {
	repeated uint32 OAFHAOPEJPO = 14;
}

enum CmdOfferingType {
	CmdOfferingTypeNone = 0;
	CmdTakeOfferingRewardScRsp = 6932;
	CmdSubmitOfferingItemScRsp = 6939;
	CmdGetOfferingInfoCsReq = 6921;
	CmdOfferingInfoScNotify = 6927;
	CmdGetOfferingInfoScRsp = 6935;
	CmdTakeOfferingRewardCsReq = 6922;
	CmdSubmitOfferingItemCsReq = 6937;
}

enum OfferingState {
	OFFERING_STATE_NONE = 0;
	OFFERING_STATE_LOCK = 1;
	OFFERING_STATE_OPEN = 2;
}

message OfferingInfo {
	OfferingState offering_state = 15;
	repeated uint32 has_taken_reward_id_list = 12;
	uint32 level_exp = 3;
	uint32 offering_id = 14;
	uint32 total_exp = 5;
	uint32 offering_level = 9;
}
message GetOfferingInfoCsReq {
	repeated uint32 offering_id_list = 4;
}
message GetOfferingInfoScRsp {
	uint32 retcode = 15;
	repeated OfferingInfo offering_info_list = 4;
}
message SubmitOfferingItemCsReq {
	uint32 interacted_prop_entity_id = 12;
	uint32 offering_id = 4;
}
message SubmitOfferingItemScRsp {
	OfferingInfo offering_info = 10;
	uint32 retcode = 1;
}
message TakeOfferingRewardCsReq {
	repeated uint32 take_reward_level_list = 1;
	uint32 offering_id = 15;
	uint32 interacted_prop_entity_id = 6;
}
message TakeOfferingRewardScRsp {
	ItemList reward = 10;
	OfferingInfo offering_info = 14;
	uint32 retcode = 8;
}
message OfferingInfoScNotify {
	OfferingInfo offering_info = 8;
}

enum CmdPamMissionType {
	CmdPamMissionTypeNone = 0;
	CmdAcceptedPamMissionExpireScRsp = 4005;
	CmdAcceptedPamMissionExpireCsReq = 4010;
	CmdSyncAcceptedPamMissionNotify = 4098;
}
message AcceptedPamMissionExpireCsReq {
	uint32 main_mission_id = 5;
}
message AcceptedPamMissionExpireScRsp {
	uint32 retcode = 13;
	uint32 main_mission_id = 10;
}
message SyncAcceptedPamMissionNotify {
	uint64 PAMBJBFNGPO = 15;
	uint32 main_mission_id = 10;
}

enum CmdPamSkinType {
	CmdPamSkinTypeNone = 0;
	CmdSelectPamSkinCsReq = 8137;
	CmdGetPamSkinDataCsReq = 8121;
	CmdSelectPamSkinScRsp = 8139;
	CmdUnlockPamSkinScNotify = 8122;
	CmdGetPamSkinDataScRsp = 8135;
}
message GetPamSkinDataCsReq {
}
message GetPamSkinDataScRsp {
	uint32 retcode = 5;
	repeated uint32 unlock_skin_list = 9;
	uint32 cur_skin = 6;
}
message SelectPamSkinCsReq {
	uint32 pam_skin = 5;
}
message SelectPamSkinScRsp {
	uint32 cur_skin = 1;
	uint32 set_skin = 13;
	uint32 retcode = 6;
}
message UnlockPamSkinScNotify {
	uint32 pam_skin = 14;
}

enum CmdParkourType {
	CmdParkourTypeNone = 0;
	CmdParkourEndLevelScRsp = 8394;
	CmdParkourGetRankingInfoScRsp = 8399;
	CmdParkourGetDataScRsp = 8395;
	CmdParkourGetDataCsReq = 8381;
	CmdParkourStartLevelScRsp = 8392;
	CmdParkourGetRankingInfoCsReq = 8397;
	CmdParkourStartLevelCsReq = 8382;
	CmdParkourEndLevelCsReq = 8387;
}

enum POAHABDKPKJ {
	PARKOUR_END_LEVEL_REASON_NONE = 0;
	PARKOUR_END_LEVEL_REASON_FINISH = 1;
	PARKOUR_END_LEVEL_REASON_QUIT = 2;
}

enum HCFFFEIMCMF {
	PARKOUR_LEVEL_STT_NONE = 0;
	PARKOUR_LEVEL_STT_BOMBED_BY_SPARKLE_FIGURE = 1;
	PARKOUR_LEVEL_STT_DESTROY_SPARKLE_FIGURE = 2;
}

message GGDEMGBOFGO {
	bool KKEHMBPJOOC = 14;
	uint32 time = 6;
	uint32 level_id = 5;
}
message ParkourGetDataCsReq {
}
message ParkourGetDataScRsp {
	repeated GGDEMGBOFGO KCMCMPFONKO = 6;
	uint32 retcode = 15;
}

message DGEFMLBPFMM {
	uint32 LPBHOMFCLON = 11;
	uint32 time = 3;
	uint32 id = 5;
}

message OOFKEBPANLP {
	uint32 level_id = 4;
	repeated DGEFMLBPFMM DCFHGAAJLNN = 7;
}
message ParkourGetRankingInfoCsReq {
}
message ParkourGetRankingInfoScRsp {
	uint32 retcode = 8;
	repeated OOFKEBPANLP PFENGLDJCMG = 9;
	OOFKEBPANLP NJGPIKCFJNL = 3;
}
message ParkourStartLevelCsReq {
	uint32 POFMCALHOOC = 7;
	uint32 level_id = 6;
}
message ParkourStartLevelScRsp {
	uint32 POFMCALHOOC = 1;
	uint32 retcode = 11;
	uint32 level_id = 9;
}

message BFPOLEGCCPJ {
	HCFFFEIMCMF type = 11;
	uint32 cnt = 2;
}

message DCKPBICNMKK {
	uint32 id = 5;
	uint32 cnt = 4;
}

message OOALAODNCPE {
	uint32 OIGKBOOHNII = 13;
	uint32 OGGEGAOLPGN = 6;
	uint32 GFDIPLDIFHG = 8;
	uint32 NFPHCJIPIJH = 1;
	uint32 FODEKCOBFFA = 3;
	uint32 NBNEKBDILLK = 4;
	uint32 MMABIMIEJNJ = 5;
	repeated DCKPBICNMKK APNNBDBENLC = 2;
	uint32 JEHJLJDKBGE = 15;
	uint32 NEEFGJBMCLL = 7;
	uint32 DHDLNDFIBKC = 9;
}

message FJJOFEKPDDH {
	uint32 HLKDFINCPPM = 2;
	uint32 ADJOPIAIBMG = 9;
	uint32 CNJJHFPMIIP = 6;
	uint32 CHAKNDOKNCB = 12;
}
message ParkourEndLevelCsReq {
	uint32 time = 7;
	uint32 rank = 6;
	uint32 BAABDDJEHMC = 3;
	uint32 level_id = 14;
	repeated FJJOFEKPDDH HMBHEIGKDBK = 10;
	POAHABDKPKJ end_reason = 9;
	uint32 EEFCBBKKFLC = 2;
	repeated BFPOLEGCCPJ AEDBPADEGFI = 11;
	uint32 POFMCALHOOC = 12;
	OOALAODNCPE IFENFKGGIEM = 4;
}
message ParkourEndLevelScRsp {
	bool KKEHMBPJOOC = 2;
	bool FDGMOEOAJKP = 5;
	uint32 time = 8;
	uint32 retcode = 4;
	GGDEMGBOFGO BLMDKJKOIOH = 3;
	uint32 level_id = 14;
	POAHABDKPKJ end_reason = 7;
}

enum CmdPetType {
	CmdPetTypeNone = 0;
	CmdSummonPetCsReq = 7602;
	CmdRecallPetCsReq = 7612;
	CmdGetPetDataScRsp = 7601;
	CmdRecallPetScRsp = 7624;
	CmdCurPetChangedScNotify = 7604;
	CmdGetPetDataCsReq = 7606;
	CmdSummonPetScRsp = 7607;
}

enum CDEFBKPCPPA {
	PET_OPERATION_TYPE_NONE = 0;
	PET_OPERATION_TYPE_SUMMON = 1;
	PET_OPERATION_TYPE_RECALL = 2;
}
message GetPetDataCsReq {
}
message GetPetDataScRsp {
	uint32 cur_pet_id = 8;
	repeated uint32 unlocked_pet_id = 1;
	uint32 retcode = 14;
}
message SummonPetCsReq {
	uint32 summoned_pet_id = 2;
}
message SummonPetScRsp {
	uint32 cur_pet_id = 11;
	uint32 retcode = 2;
	uint32 select_pet_id = 5;
}
message RecallPetCsReq {
	uint32 summoned_pet_id = 10;
}
message RecallPetScRsp {
	uint32 retcode = 13;
	uint32 cur_pet_id = 10;
	uint32 select_pet_id = 11;
}
message CurPetChangedScNotify {
	uint32 cur_pet_id = 1;
}

enum CmdPhoneType {
	CmdPhoneTypeNone = 0;
	CmdSelectChatBubbleCsReq = 5198;
	CmdSelectPhoneThemeScRsp = 5197;
	CmdSelectChatBubbleScRsp = 5153;
	CmdSelectPhoneCaseCsReq = 5141;
	CmdUnlockPhoneThemeScNotify = 5106;
	CmdUnlockChatBubbleScNotify = 5179;
	CmdGetPhoneDataScRsp = 5105;
	CmdUnlockPhoneCaseScNotify = 5107;
	CmdSelectPhoneThemeCsReq = 5102;
	CmdSelectPhoneCaseScRsp = 5155;
	CmdGetPhoneDataCsReq = 5110;
}
message GetPhoneDataCsReq {
}
message GetPhoneDataScRsp {
	repeated uint32 owned_chat_bubbles = 8;
	repeated uint32 owned_phone_themes = 1;
	uint32 cur_phone_theme = 7;
	repeated uint32 KKNEEGDKEMD = 4;
	uint32 retcode = 6;
	uint32 LMOCAMKLKPI = 13;
	uint32 cur_chat_bubble = 5;
}
message SelectChatBubbleCsReq {
	uint32 bubble_id = 9;
}
message SelectChatBubbleScRsp {
	uint32 PMDCBFOPCHB = 13;
	uint32 retcode = 11;
	uint32 cur_chat_bubble = 15;
}
message UnlockChatBubbleScNotify {
	uint32 bubble_id = 2;
}
message SelectPhoneThemeCsReq {
	uint32 theme_id = 9;
}
message SelectPhoneThemeScRsp {
	uint32 cur_phone_theme = 13;
	uint32 retcode = 3;
	uint32 ACHOPOJLCCE = 11;
}
message UnlockPhoneThemeScNotify {
	uint32 theme_id = 8;
}
message SelectPhoneCaseCsReq {
	uint32 phone_case_id = 9;
}
message SelectPhoneCaseScRsp {
	uint32 retcode = 14;
	uint32 LMOCAMKLKPI = 13;
	uint32 PDACJDIEOJG = 15;
}
message UnlockPhoneCaseScNotify {
	uint32 phone_case_id = 14;
}

enum CmdPlanetFesType {
	CmdPlanetFesTypeNone = 0;
	CmdPlanetFesUseItemCsReq = 8219;
	CmdPlanetFesTakeQuestRewardScRsp = 8237;
	CmdPlanetFesUpgradeFesLevelCsReq = 8235;
	CmdPlanetFesGameBingoFlipScRsp = 8233;
	CmdPlanetFesGetAvatarStatCsReq = 8231;
	CmdPlanetFesDoGachaCsReq = 8232;
	CmdPlanetFesBusinessDayRefreshEventScRsp = 8240;
	CmdPlanetFesCollectAllIncomeCsReq = 8218;
	CmdPlanetFesClientStatusCsReq = 8204;
	CmdPlanetFesSetCustomKeyValueCsReq = 8216;
	CmdPlanetFesDeliverPamCargoScRsp = 8212;
	CmdPlanetFesFriendRankingInfoChangeScNotify = 8217;
	CmdPlanetFesDealAvatarEventOptionItemScRsp = 8214;
	CmdPlanetFesGetBusinessDayInfoScRsp = 8220;
	CmdPlanetFesChooseAvatarEventOptionCsReq = 8208;
	CmdPlanetFesBonusEventInteractCsReq = 8210;
	CmdPlanetFesBonusEventInteractScRsp = 8245;
	CmdPlanetFesStartMiniGameScRsp = 8236;
	CmdPlanetFesUpgradeSkillLevelScRsp = 8247;
	CmdPlanetFesChooseAvatarEventOptionScRsp = 8203;
	CmdPlanetFesUpgradeSkillLevelCsReq = 8249;
	CmdPlanetFesDoGachaScRsp = 8229;
	CmdPlanetFesSetAvatarWorkCsReq = 8201;
	CmdPlanetFesAvatarLevelUpScRsp = 8206;
	CmdPlanetFesGetAvatarStatScRsp = 8241;
	CmdPlanetFesSetCustomKeyValueScRsp = 8239;
	CmdPlanetFesCollectAllIncomeScRsp = 8213;
	CmdPlanetFesCollectIncomeScRsp = 8202;
	CmdPlanetFesSyncChangeScNotify = 8246;
	CmdPlanetFesClientStatusScRsp = 8243;
	CmdGetPlanetFesDataCsReq = 8223;
	CmdPlanetFesTakeRegionPhaseRewardScRsp = 8226;
	CmdPlanetFesBusinessDayRefreshEventCsReq = 8209;
	CmdPlanetFesGameBingoFlipCsReq = 8234;
	CmdPlanetFesSetAvatarWorkScRsp = 8228;
	CmdPlanetFesCollectIncomeCsReq = 8230;
	CmdPlanetFesBuyLandScRsp = 8242;
	CmdPlanetFesGetFriendRankingInfoListScRsp = 8222;
	CmdPlanetFesTakeQuestRewardCsReq = 8250;
	CmdPlanetFesAvatarLevelUpCsReq = 8205;
	CmdPlanetFesDeliverPamCargoCsReq = 8207;
	CmdPlanetFesUpgradeFesLevelScRsp = 8225;
	CmdPlanetFesBuyLandCsReq = 8227;
	CmdGetPlanetFesDataScRsp = 8221;
	CmdPlanetFesUseItemScRsp = 8238;
	CmdPlanetFesGetBusinessDayInfoCsReq = 8248;
	CmdPlanetFesDealAvatarEventOptionItemCsReq = 8215;
	CmdPlanetFesTakeRegionPhaseRewardCsReq = 8224;
	CmdPlanetFesStartMiniGameCsReq = 8211;
	CmdPlanetFesGetFriendRankingInfoListCsReq = 8244;
}

enum GMFEJEFIBBI {
	PLANET_FES_QUEST_NONE = 0;
	PLANET_FES_QUEST_DOING = 1;
	PLANET_FES_QUEST_FINISH = 2;
	PLANET_FES_QUEST_CLOSE = 3;
}

enum DFHEJCIJBEJ {
	PLANET_FES_BUSINESS_EVENT_CHANGE_REASON_NONE = 0;
	PLANET_FES_BUSINESS_EVENT_AVATAR_CHANGE = 1;
	PLANET_FES_BUSINESS_EVENT_FINISH_GAME = 2;
}

enum IOCPJFKGKDG {
	PLANET_FES_CUSTOM_KEY_NONE = 0;
	PLANET_FES_CUSTOM_KEY_UNLOCK_INFINITE_BUSINESS_DAY_PERFORMANCE = 1;
	PLANET_FES_CUSTOM_KEY_BUSINESS_DAY_START_PERFORMANCE_LAST_SEEN_DAY = 2;
	PLANET_FES_CUSTOM_KEY_BUSINESS_DAY_UNLOCK_PERFORMANCE_LAST_SEEN_DAY = 3;
	PLANET_FES_CUSTOM_KEY_SUMMARY_SHOW = 4;
}
message GetPlanetFesDataCsReq {
}
message GetPlanetFesDataScRsp {
	AFBAMPLGHEH KJKBKEGIGHK = 5;
	GCAMEGPEPOL level_info = 4;
	JNIPIAADOIP EBGNGDGBOLH = 12;
	uint32 retcode = 10;
	KOFOLLACIGO FDHGIKJDLGD = 2;
	DKEJEOEHAGM LAPCHEIGNMJ = 8;
	MIOAEGBPOMA HMFFHBHALGE = 7;
	OAINKJLPCDK HBDLIICPKOB = 6;
	AJCJCHLJBGF HLJMHNABFMC = 9;
	GJBFGABAAMO ADMJKKOIAGD = 3;
	repeated KHOCCHABNMN custom_value_list = 14;
	IACFPGOLFLM skill_info = 11;
	CLKNIBOJLGP HEOJNAIMGKC = 13;
}

message IIKNGNHDMFI {
	repeated uint32 MCNMHBJHMME = 8;
}
message PlanetFesSyncChangeScNotify {
	repeated CCNANLCODDF LEADMNEIMDP = 3;
}

message OIDFFLEEALL {
	uint32 KEJNIMGHOIG = 5;
	uint32 IHELAJNMMBF = 10;
	uint32 IMFCIMKMJPL = 3;
}

message CCNANLCODDF {
	OIDFFLEEALL source = 1;
	HMBANCKGBII rogue_action = 14;
}

message OFGBMCKNLDJ {
	IIKNGNHDMFI BJODEEPGOPC = 13;
	int64 MFKNHHNFKGI = 4;
	uint32 DGCFLHCPJLN = 15;
	IIKNGNHDMFI JCFPLGHKJAA = 8;
}

message KOFOLLACIGO {
	repeated OFGBMCKNLDJ INLLEKAMNPF = 10;
}

message EOAEGAEFPFH {
	uint32 avatar_id = 13;
	uint32 PAEHAMJHNDD = 15;
	uint32 MHKHACLNBPM = 14;
	uint32 level = 5;
}

message DKEJEOEHAGM {
	repeated EOAEGAEFPFH avatar_list = 7;
}

message CEODDCEIDDL {
	uint32 item_id = 11;
	uint32 item_count = 3;
}

message AJCJCHLJBGF {
	repeated CEODDCEIDDL item_list = 5;
	IIKNGNHDMFI item_value = 9;
	IIKNGNHDMFI PCAJNCBMIMM = 3;
}

message OAINKJLPCDK {
	repeated PPFCJHEKOLG option_result_info = 7;
}

message PPFCJHEKOLG {
	OIDFFLEEALL source = 8;
	uint32 config_id = 10;
	uint64 unique_id = 2;
	repeated FIMACPHLMNO DFCFHHLBGDC = 11;
}

message FIMACPHLMNO {
	oneof KFELKJLDKEH {
		int64 KBEFCMIIIIN = 7;
	}
}

message ADAFJFOJDEG {
	GMFEJEFIBBI status = 3;
	uint32 quest_id = 2;
	uint32 progress = 14;
	uint32 MFANNCAGDMP = 8;
	oneof EHACJJJDPAH {
		uint32 BONAGHBBICF = 6;
		IIKNGNHDMFI NNHPCOIIKFF = 5;
	}
}

message PCODFCNKHJK {
	uint32 DCNPHBDDDIP = 4;
	uint32 EOFELDEAPEO = 15;
}

message CLKNIBOJLGP {
	repeated ADAFJFOJDEG quest_list = 10;
	PCODFCNKHJK CMHNLJJODJF = 8;
}

message GCAMEGPEPOL {
	uint32 PJOLEMHLGNL = 5;
	IIKNGNHDMFI EHBJBPCNPLG = 7;
}

message DHNFBGENLIG {
	uint32 progress = 9;
	uint32 BHPCNNFOKEE = 14;
}

message AFBAMPLGHEH {
	repeated uint32 IHBJIIHBIBP = 14;
	repeated DHNFBGENLIG NCKCMGCBEHK = 9;
}

message HFOCNHOJLAH {
	uint32 level = 8;
	uint32 skill_id = 10;
}

message IACFPGOLFLM {
	repeated HFOCNHOJLAH skill_list = 9;
}

message GJBFGABAAMO {
	repeated uint32 HIGNFPJLFKA = 7;
	uint32 EIMGBKNLGNF = 9;
}

message MIOAEGBPOMA {
	uint32 FGPACIHLANB = 14;
	repeated uint32 FGIMACCHHDK = 13;
	int64 EPCPDOCDOCB = 1;
}

message HMBANCKGBII {
	oneof KFELKJLDKEH {
		GIEDCJDLEGE LKMLGOEEEKH = 8;
		GIEDCJDLEGE COHNLGMIFBO = 3;
		HPGAGBGJLID PMLOCBHIDDL = 4;
		HPGAGBGJLID LEBMNLOAKHC = 1;
		OFGBMCKNLDJ KBNLIGLJENN = 11;
		OFGBMCKNLDJ MMFBENAMBNE = 2;
		EOAEGAEFPFH GNAIDHHJEBI = 9;
		EOAEGAEFPFH JBDHLHHFDGE = 10;
		PPFCJHEKOLG JPLPLFCOOKD = 6;
		PPFCJHEKOLG MKOFOOCOKBK = 5;
		PHFBDNNLINF OLMGNEOAHOP = 7;
		ADAFJFOJDEG GBFFGPHFMDP = 14;
		ADAFJFOJDEG DMNMIFJHECL = 13;
		PCODFCNKHJK IMFCDMIEOPL = 12;
		OLBOPGJFFPM PCLLCBMHCBD = 15;
		HFOCNHOJLAH BIEDMJPAEBD = 40;
		PGNDIBBGIJN FOICFOGCGIA = 1882;
		DJOEEGHMCFJ NCEIDLNKBBG = 649;
		CBIKMFFDCGI KMMDPEJAKEC = 345;
		HPCAIMKJDIJ GPNLPNEEHDM = 28;
		HOHDMMNDKNJ CNEKLOKHAHL = 1259;
		FHNGONEFBDE DMFJDAHPIID = 1848;
		PPFCJHEKOLG ILOEKHKEJAJ = 1811;
		ILJJBGIFDPE LAEGJPILNND = 1034;
		DEINADPEHKE LCDKLAHGKJI = 624;
		BKBILPDKOIL BCADDFDBFNA = 1744;
		EIKAIIDAEPP LIGLEFJMLHM = 50;
		GJIPJNGNFEJ GBNCIDJNLPL = 312;
	}
}

message OLBOPGJFFPM {
	bool BIINNCNDPCG = 12;
	DHNFBGENLIG KJKBKEGIGHK = 3;
}

message PHFBDNNLINF {
	IIKNGNHDMFI EHBJBPCNPLG = 3;
	uint32 PJOLEMHLGNL = 4;
}

message GIEDCJDLEGE {
	IIKNGNHDMFI OGJOFMCMFPG = 7;
	IIKNGNHDMFI BMALPKEKBEL = 15;
	repeated uint32 BLCABEMFACH = 14;
	IIKNGNHDMFI MFNAGLKDPNI = 13;
}

message HPGAGBGJLID {
	uint32 BMALPKEKBEL = 13;
	uint32 item_id = 8;
	uint32 OGJOFMCMFPG = 12;
}

message PGNDIBBGIJN {
	uint32 GFJAGHLJJDN = 8;
	uint32 ECILICNOLFN = 6;
}

message NPAIINEKEFB {
	IIKNGNHDMFI DMAIMCPPJGH = 1;
	uint32 PEFDLAJLCJB = 4;
	uint32 JLCEEFBLJDC = 3;
	uint32 avatar_id = 11;
}

message ILJJBGIFDPE {
	IIKNGNHDMFI FOFHIEIICPB = 11;
	uint32 NLAOMPDENKK = 3;
	IIKNGNHDMFI EAJPDPCDJPK = 6;
	uint32 HDKAFNKHALA = 7;
	uint32 MEMBICNIFLI = 4;
	repeated NPAIINEKEFB OEBAFBIGMBC = 9;
	uint32 NIJMJBMCFJF = 14;
	IIKNGNHDMFI PEHINGJKGCB = 12;
	map<uint32, uint32> BJELCLBGALF = 1;
	uint32 CCIGDJCGAMD = 2;
}

message DJOEEGHMCFJ {
	EGBKGEMFODN AAKDAHHIGIF = 11;
}

message HPCAIMKJDIJ {
	ILMELFJCCMD JILAGGDMALL = 7;
}

message CBIKMFFDCGI {
	IIKNGNHDMFI HHJOCIPOBCF = 15;
}

message HOHDMMNDKNJ {
	JOFGDAIADBO NFJLFNBPPPG = 10;
	DFHEJCIJBEJ PODGJPEKEEG = 13;
}

message FHNGONEFBDE {
	uint32 EIMGBKNLGNF = 7;
}

message OHDHPCLIJNH {
	uint32 CIOAOGDKFOG = 5;
	IIKNGNHDMFI KJBKNGCFBBP = 2;
	uint32 EAFOMFLMOJJ = 8;
	uint32 GINMOIBGLNM = 13;
	uint32 IACPHGOJHMB = 1;
}

message DJIAEMANGCG {
	repeated OHDHPCLIJNH transfer_item_list = 7;
	repeated CEODDCEIDDL item_list = 8;
}

message BFAAEFCEJPA {
	CEODDCEIDDL HOCNLIJHJJK = 15;
	OHDHPCLIJNH PKBBHJPAEKI = 14;
}
message PlanetFesCollectIncomeCsReq {
	uint32 DGCFLHCPJLN = 3;
}
message PlanetFesCollectIncomeScRsp {
	uint32 retcode = 12;
}

message PFBFIMJFEGI {
	uint32 avatar_id = 14;
	uint32 DGCFLHCPJLN = 3;
}
message PlanetFesSetAvatarWorkCsReq {
	repeated PFBFIMJFEGI KNGPOFHNFAJ = 3;
}
message PlanetFesSetAvatarWorkScRsp {
	uint32 retcode = 7;
}
message PlanetFesBuyLandCsReq {
	uint32 DGCFLHCPJLN = 15;
}
message PlanetFesBuyLandScRsp {
	uint32 retcode = 6;
}
message PlanetFesClientStatusCsReq {
	bool FJINNLFCBOJ = 4;
}
message PlanetFesClientStatusScRsp {
	uint32 retcode = 8;
}
message PlanetFesCollectAllIncomeCsReq {
}
message PlanetFesCollectAllIncomeScRsp {
	uint32 retcode = 7;
	IIKNGNHDMFI GNDCAMMILOI = 3;
}
message PlanetFesDoGachaCsReq {
	uint32 gacha_count = 1;
	uint32 simulate_magic = 6;
	uint32 gacha_id = 9;
}

message NEIHLDGEBHE {
	uint32 avatar_id = 8;
	uint32 FLJPKFJAJFP = 11;
	uint32 JKJNCNCLFLD = 1;
	BFAAEFCEJPA LPDEOPGELLE = 14;
}

message CGOJKBOEOFO {
	repeated BFAAEFCEJPA GMOFKLBFAPL = 8;
	repeated uint32 JCDJCANEHJD = 15;
	repeated NEIHLDGEBHE DHHAPHNMEDF = 6;
	IIKNGNHDMFI CABCGKNGAOC = 1;
}

message PJCAKIFOOCP {
	DJIAEMANGCG JFMAHMOFJPI = 3;
	repeated uint32 ECDAMBIIFCI = 11;
}
message PlanetFesDoGachaScRsp {
	uint32 gacha_id = 13;
	repeated CEODDCEIDDL CIKEPDANGFD = 7;
	uint32 retcode = 9;
	oneof MICMCKAHMPL {
		CGOJKBOEOFO IDGKLMCEPBO = 14;
		PJCAKIFOOCP JABDCPFPOKE = 11;
	}
}
message PlanetFesAvatarLevelUpCsReq {
	uint32 LDNJEACFBJE = 2;
	uint32 avatar_id = 9;
}
message PlanetFesAvatarLevelUpScRsp {
	uint32 retcode = 15;
	uint32 avatar_id = 8;
	PlanetFesReward reward = 11;
	uint32 BHPFPEJBKEC = 10;
	uint32 LDNJEACFBJE = 6;
}
message PlanetFesTakeQuestRewardCsReq {
	uint32 quest_id = 14;
}
message PlanetFesTakeQuestRewardScRsp {
	uint32 quest_id = 6;
	uint32 retcode = 11;
	DJIAEMANGCG DNFFKABFOEF = 2;
}
message PlanetFesUpgradeSkillLevelCsReq {
	uint32 LDNJEACFBJE = 8;
	uint32 skill_id = 6;
}
message PlanetFesUpgradeSkillLevelScRsp {
	uint32 retcode = 10;
	CEODDCEIDDL item_cost = 14;
	uint32 skill_level = 3;
	uint32 skill_id = 4;
}

message PlanetFesReward {
	repeated CEODDCEIDDL item_list = 15;
	IIKNGNHDMFI coin = 11;
	map<uint32, uint32> buff_map = 8;
}

message KNOKILFKOHI {
	uint32 avatar_id = 13;
	uint32 JOOOEAFOKHK = 12;
	uint32 AOPIKHKKGLM = 9;
}

message DLLJMIAGHDD {
	repeated KNOKILFKOHI FJHGCKENOPF = 9;
}

message EFHABDOFKDE {
	uint32 BPCFOEGHONC = 11;
	map<uint32, uint32> AGMGPPAOMKA = 9;
	uint32 NNGOPAKJICC = 14;
	uint32 EPMOOHCJNHO = 6;
}

message CGOMNLBLJGH {
	uint32 OOHNKOJHDHO = 8;
	HLDHEMLPJNG rogue_current_info = 3;
	uint32 AFGKFIFJFCL = 11;
}

message POHNIIFLCGE {
	uint32 DGDDJNHLGGJ = 15;
}

message BKODHAEECJH {
	uint32 CGDGPGJLKNM = 15;
	uint32 HDDIJNADFDD = 8;
	uint32 DGDDJNHLGGJ = 10;
}

message CBOEMEJIFFE {
	uint32 DGDDJNHLGGJ = 14;
}

message JOFGDAIADBO {
	uint32 DAJJJFCHOOJ = 3;
	uint32 BKMAMGAPEGH = 4;
	bool CHNLIOKGLBP = 9;
	bool PKLCNHICGIA = 14;
	bool FOMJLFJCKDB = 2;
	int64 LJHEOCHHCAB = 5;
	uint32 HOIOKBKGFDN = 13;
	oneof ECOEKHPGMEA {
		DLLJMIAGHDD PGMBLLOOBMA = 8;
		EFHABDOFKDE GILDJPKDPNN = 12;
		CGOMNLBLJGH BOLAIPLEFPI = 10;
		POHNIIFLCGE GENPKDAEIHC = 7;
		BKODHAEECJH JFNHPIEGMMM = 15;
		CBOEMEJIFFE JLEFNHIKFOC = 11;
	}
}

message ILMELFJCCMD {
	IIKNGNHDMFI PEHINGJKGCB = 5;
	uint32 BKMAMGAPEGH = 12;
	bool DKHIGCIPEKF = 15;
	repeated JOFGDAIADBO KMNDEBCFFAD = 4;
	bool BIINNCNDPCG = 8;
	int64 COIFHFPEGPH = 1;
	map<uint32, uint32> HIJDDFBEDPO = 7;
}

message FLNIDKIGGBK {
	bool DKHIGCIPEKF = 13;
	uint32 BKMAMGAPEGH = 7;
	IIKNGNHDMFI KNEINMNLCDI = 15;
	repeated NPAIINEKEFB OEBAFBIGMBC = 6;
	IIKNGNHDMFI PEHINGJKGCB = 4;
	uint32 GJPANOCNGBM = 1;
}

message LEAAHDPAIEG {
	bool AGMAMBDEHLK = 15;
	uint32 HOIOKBKGFDN = 11;
}

message EGBKGEMFODN {
	repeated FLNIDKIGGBK DPPIMJNDNDF = 2;
	repeated uint32 CCBBDGFFFAG = 10;
	repeated LEAAHDPAIEG NFIOACFHJNK = 4;
	ILMELFJCCMD NCIKKFENHJF = 11;
	uint32 HJNOIENGEDL = 1;
	uint32 BLMNEKFPAGH = 8;
}
message PlanetFesGetBusinessDayInfoCsReq {
	bool MKBPDPAFAPK = 9;
}
message PlanetFesGetBusinessDayInfoScRsp {
	uint32 retcode = 7;
	int64 BCFBFMMENJK = 13;
	EGBKGEMFODN AAKDAHHIGIF = 8;
}

message JNIPIAADOIP {
	bool BIINNCNDPCG = 15;
	uint32 MLGFJGCHONH = 10;
	bool DKHIGCIPEKF = 3;
	uint32 BLMNEKFPAGH = 8;
	int64 BCFBFMMENJK = 6;
	uint32 HJNOIENGEDL = 5;
}
message PlanetFesBusinessDayRefreshEventCsReq {
	uint32 HOIOKBKGFDN = 1;
	uint32 BKMAMGAPEGH = 4;
	bool KBLPJCFNHLE = 10;
}
message PlanetFesBusinessDayRefreshEventScRsp {
	uint32 retcode = 5;
	JOFGDAIADBO NFJLFNBPPPG = 4;
}
message PlanetFesDeliverPamCargoCsReq {
	uint32 avatar_id = 9;
	uint32 AOPIKHKKGLM = 4;
}
message PlanetFesDeliverPamCargoScRsp {
	JOFGDAIADBO NFJLFNBPPPG = 2;
	PlanetFesReward GCBDEDABGKO = 3;
	uint32 retcode = 11;
	uint32 avatar_id = 1;
}
message PlanetFesChooseAvatarEventOptionCsReq {
	uint32 NFCAAMBMMMB = 11;
}
message PlanetFesChooseAvatarEventOptionScRsp {
	PlanetFesReward reward = 7;
	uint32 EPMOOHCJNHO = 15;
	uint32 retcode = 2;
	uint32 OJKJPKHDEPE = 1;
	JOFGDAIADBO NFJLFNBPPPG = 14;
	uint32 HAKKGODICFI = 13;
}
message PlanetFesDealAvatarEventOptionItemCsReq {
	bool LECDHDDCEIA = 8;
	uint32 NNGOPAKJICC = 13;
}
message PlanetFesDealAvatarEventOptionItemScRsp {
	uint32 retcode = 9;
	PlanetFesReward reward = 2;
	uint32 OJKJPKHDEPE = 8;
	uint32 HAKKGODICFI = 10;
	JOFGDAIADBO NFJLFNBPPPG = 11;
	bool LECDHDDCEIA = 12;
}
message PlanetFesTakeRegionPhaseRewardCsReq {
	uint32 NDBOJANDNJN = 1;
}
message PlanetFesTakeRegionPhaseRewardScRsp {
	uint32 retcode = 1;
	uint32 NDBOJANDNJN = 12;
	ItemList reward_list = 8;
}

message CNLMDFFEFJM {
	repeated uint32 HFKGGOEPPLE = 6;
	repeated uint32 CDLBEHLAMMM = 10;
	uint32 ALHANJKLBOO = 8;
	uint32 GPAGHIAJICD = 12;
}

message HLDHEMLPJNG {
	uint32 OOHNKOJHDHO = 3;
	uint32 ACDOPCBMPNL = 9;
	oneof NGIKDJMNGBG {
		CNLMDFFEFJM EJCOLGNJGDC = 5;
	}
}

message FMNHLKNJNAH {
	repeated uint32 PKHLGKKIPPA = 6;
}
message PlanetFesStartMiniGameCsReq {
	uint32 OOHNKOJHDHO = 15;
	uint32 ACDOPCBMPNL = 9;
}
message PlanetFesStartMiniGameScRsp {
	PlanetFesReward reward = 13;
	HLDHEMLPJNG rogue_current_info = 1;
	uint32 retcode = 15;
	oneof EMPMLAFDHFA {
		FMNHLKNJNAH JFMAHMOFJPI = 3;
	}
}
message PlanetFesUseItemCsReq {
	uint32 DIOOKFOCCMO = 13;
	uint32 item_id = 5;
}
message PlanetFesUseItemScRsp {
	uint32 retcode = 9;
	PlanetFesReward reward = 15;
}
message PlanetFesGameBingoFlipCsReq {
	uint32 HCFPOFMDGKN = 12;
}
message PlanetFesGameBingoFlipScRsp {
	uint32 HCFPOFMDGKN = 10;
	uint32 retcode = 7;
	PlanetFesReward reward = 1;
	bool NFEADMFNFLK = 5;
}
message PlanetFesBonusEventInteractCsReq {
	uint32 HOIOKBKGFDN = 15;
	uint32 APMODAGOHNA = 14;
}
message PlanetFesBonusEventInteractScRsp {
	uint32 HOIOKBKGFDN = 4;
	JOFGDAIADBO NFJLFNBPPPG = 9;
	PlanetFesReward reward = 13;
	uint32 retcode = 3;
}

message EIKAIIDAEPP {
	uint32 BKMAMGAPEGH = 2;
	IIKNGNHDMFI HHJOCGOMECO = 14;
	uint32 HDCBEJDENLA = 11;
	uint32 LNJIIHHPMED = 10;
	uint32 DGJDMOCBBII = 8;
	uint32 PJOLEMHLGNL = 13;
	uint32 uid = 15;
}
message PlanetFesGetFriendRankingInfoListCsReq {
}
message PlanetFesGetFriendRankingInfoListScRsp {
	EIKAIIDAEPP ICMGEGEFDLE = 1;
	uint32 retcode = 15;
}
message PlanetFesFriendRankingInfoChangeScNotify {
	repeated EIKAIIDAEPP CNHEKLKBMHH = 7;
}
message PlanetFesSetCustomKeyValueCsReq {
	uint32 value = 2;
	uint32 key = 1;
}
message PlanetFesSetCustomKeyValueScRsp {
	uint32 retcode = 8;
	uint32 value = 14;
	uint32 key = 4;
}
message PlanetFesUpgradeFesLevelCsReq {
	uint32 LDNJEACFBJE = 7;
}
message PlanetFesUpgradeFesLevelScRsp {
	uint32 retcode = 12;
}
message PlanetFesGetAvatarStatCsReq {
}
message PlanetFesGetAvatarStatScRsp {
	repeated NPAIINEKEFB OEBAFBIGMBC = 5;
	uint32 retcode = 2;
}

message DEINADPEHKE {
	repeated uint32 JPACOBGBDBG = 11;
	uint32 OFGFHCLDOBG = 6;
	uint32 PNAKHNBDJAE = 3;
	int64 apply_time = 13;
}

message BKBILPDKOIL {
	int64 time = 6;
	repeated uint32 JPACOBGBDBG = 3;
	uint32 LHJPKMDMNMP = 12;
	bool CABEHKOFLPG = 5;
	uint64 HPJJDCJHHOA = 15;
}

message GJIPJNGNFEJ {
	uint32 OFGFHCLDOBG = 13;
	uint32 PNAKHNBDJAE = 11;
	uint32 source = 12;
	repeated uint32 JPACOBGBDBG = 7;
	int64 time = 9;
}

enum CmdPlanetFesExtType {
	CmdPlanetFesExtTypeNone = 0;
	CmdPlanetFesLargeBonusInteractScRsp = 8295;
	CmdPlanetFesHandleCardPieceApplyCsReq = 8332;
	CmdPlanetFesGetFriendCardPieceCsReq = 8336;
	CmdPlanetFesGiveCardPieceCsReq = 8303;
	CmdPlanetFesGiveCardPieceScRsp = 8322;
	CmdPlanetFesChangeCardPieceApplyPermissionCsReq = 8292;
	CmdPlanetFesChangeCardPieceApplyPermissionScRsp = 8291;
	CmdPlanetFesEnterNextBusinessDayCsReq = 8296;
	CmdPlanetFesApplyCardPieceScRsp = 8317;
	CmdPlanetFesLargeBonusInteractCsReq = 8319;
	CmdPlanetFesApplyCardPieceCsReq = 8318;
	CmdPlanetFesEnterNextBusinessDayScRsp = 8340;
	CmdPlanetFesGetExtraCardPieceInfoScRsp = 8311;
	CmdPlanetFesGetOfferedCardPieceScRsp = 8308;
	CmdPlanetFesHandleCardPieceApplyScRsp = 8294;
	CmdPlanetFesGetFriendCardPieceScRsp = 8320;
	CmdPlanetFesGetOfferedCardPieceCsReq = 8333;
	CmdPlanetFesGetExtraCardPieceInfoCsReq = 8313;
}

enum AOPKIFDMADI {
	PLANET_FES_LARGE_BONUS_INTERACT_START = 0;
	PLANET_FES_LARGE_BONUS_INTERACT_REPORT = 1;
	PLANET_FES_LARGE_BONUS_INTERACT_FINISH = 2;
}
message PlanetFesGetExtraCardPieceInfoCsReq {
}

message FFAPKCNAPID {
	repeated DEINADPEHKE GEDGLNCPGGN = 14;
	uint32 AOAEFEIBBMF = 7;
	repeated uint32 IEMNJHLFGKD = 6;
	int64 AIIEKLILMJC = 11;
	uint32 uid = 1;
	repeated GJIPJNGNFEJ OBBOCCNFLOL = 9;
	uint32 HLKPNECAMBL = 4;
	repeated CEODDCEIDDL PBFHDNBGMBP = 5;
}
message PlanetFesGetExtraCardPieceInfoScRsp {
	FFAPKCNAPID BAAMHDNNKIA = 14;
	uint32 retcode = 11;
}
message PlanetFesGetFriendCardPieceCsReq {
}
message PlanetFesGetFriendCardPieceScRsp {
	uint32 retcode = 9;
	repeated FFAPKCNAPID CGDANDNIBGJ = 14;
}
message PlanetFesChangeCardPieceApplyPermissionCsReq {
	uint32 HLKPNECAMBL = 13;
}
message PlanetFesChangeCardPieceApplyPermissionScRsp {
	uint32 HLKPNECAMBL = 2;
	uint32 retcode = 9;
}
message PlanetFesApplyCardPieceCsReq {
	repeated uint32 JPACOBGBDBG = 9;
	uint32 CBEGNBKMHCD = 1;
}
message PlanetFesApplyCardPieceScRsp {
	uint32 retcode = 5;
	repeated uint32 JPACOBGBDBG = 3;
	bool MCFFPIEEKNN = 12;
	uint32 CBEGNBKMHCD = 4;
	int64 EPCPDOCDOCB = 1;
	uint32 PNAKHNBDJAE = 13;
}
message PlanetFesHandleCardPieceApplyCsReq {
	repeated uint32 DLHBCOKCIDP = 9;
	uint32 PNAKHNBDJAE = 4;
	bool MDAPCFHELJL = 12;
	uint32 OFGFHCLDOBG = 2;
}
message PlanetFesHandleCardPieceApplyScRsp {
	bool MDAPCFHELJL = 15;
	repeated uint32 DLHBCOKCIDP = 5;
	uint32 retcode = 3;
	int64 PPIOLCLPMPL = 8;
	uint32 PNAKHNBDJAE = 12;
}
message PlanetFesGetOfferedCardPieceCsReq {
	bool CABEHKOFLPG = 8;
	uint64 HPJJDCJHHOA = 11;
}
message PlanetFesGetOfferedCardPieceScRsp {
	uint64 HPJJDCJHHOA = 9;
	repeated CEODDCEIDDL PBFHDNBGMBP = 10;
	repeated BKBILPDKOIL ONJGMGHCPEF = 11;
	uint32 retcode = 15;
	bool CABEHKOFLPG = 14;
	int64 DLJCKCMADHJ = 13;
}
message PlanetFesGiveCardPieceCsReq {
	uint32 CBEGNBKMHCD = 3;
	repeated uint32 DLHBCOKCIDP = 10;
}
message PlanetFesGiveCardPieceScRsp {
	uint32 retcode = 1;
	uint64 HPJJDCJHHOA = 2;
	int64 PPIOLCLPMPL = 3;
	uint32 CBEGNBKMHCD = 13;
	repeated uint32 DLHBCOKCIDP = 4;
}
message PlanetFesLargeBonusInteractCsReq {
	uint32 MOPFFBMABCD = 14;
	uint32 OOIOOKGMEHP = 12;
	uint32 IHCILNHKLMC = 5;
}
message PlanetFesLargeBonusInteractScRsp {
	JOFGDAIADBO NFJLFNBPPPG = 7;
	uint32 retcode = 2;
	uint32 IHCILNHKLMC = 4;
	IIKNGNHDMFI GMIDJMMMJKP = 8;
}
message PlanetFesEnterNextBusinessDayCsReq {
}
message PlanetFesEnterNextBusinessDayScRsp {
	uint32 retcode = 9;
}

enum CmdPlayerType {
	CmdPlayerTypeNone = 0;
	CmdGetBasicInfoScRsp = 71;
	CmdGetAuthkeyCsReq = 67;
	CmdAntiAddictScNotify = 36;
	CmdSetAvatarPathCsReq = 84;
	CmdPlayerHeartBeatScRsp = 12;
	CmdClientDownloadDataScNotify = 46;
	CmdUpdatePlayerSettingCsReq = 30;
	CmdUpdateFeatureSwitchScNotify = 85;
	CmdStaminaInfoScNotify = 80;
	CmdSetGameplayBirthdayScRsp = 82;
	CmdPlayerLogoutCsReq = 98;
	CmdAceAntiCheaterCsReq = 83;
	CmdGetVideoVersionKeyCsReq = 22;
	CmdClientObjUploadScRsp = 76;
	CmdGetLevelRewardScRsp = 9;
	CmdGateServerScNotify = 64;
	CmdSetMultipleAvatarPathsCsReq = 32;
	CmdGmTalkScRsp = 7;
	CmdPlayerKickOutScNotify = 41;
	CmdGetGameStateServiceConfigScRsp = 33;
	CmdQueryProductInfoScRsp = 13;
	CmdSetNicknameCsReq = 78;
	CmdSetGenderScRsp = 60;
	CmdGetAuthkeyScRsp = 72;
	CmdUpdatePlayerSettingScRsp = 11;
	CmdPlayerLoginScRsp = 5;
	CmdGetSecretKeyInfoScRsp = 49;
	CmdServerAnnounceNotify = 73;
	CmdClientObjDownloadDataScNotify = 59;
	CmdGetBasicInfoCsReq = 29;
	CmdSetNicknameScRsp = 74;
	CmdSetRedPointStatusScNotify = 44;
	CmdRetcodeNotify = 4;
	CmdSetMultipleAvatarPathsScRsp = 34;
	CmdSetLanguageScRsp = 24;
	CmdExchangeStaminaScRsp = 63;
	CmdSetGenderCsReq = 15;
	CmdPlayerGetTokenCsReq = 79;
	CmdGetLevelRewardTakenListCsReq = 90;
	CmdPlayerHeartBeatCsReq = 86;
	CmdMonthCardRewardNotify = 57;
	CmdAceAntiCheaterScRsp = 3;
	CmdGetSecretKeyInfoCsReq = 18;
	CmdDailyRefreshNotify = 45;
	CmdPlayerLoginFinishScRsp = 17;
	CmdGmTalkCsReq = 55;
	CmdSetPlayerInfoScRsp = 28;
	CmdUpdatePsnSettingsInfoScRsp = 47;
	CmdQueryProductInfoCsReq = 8;
	CmdUnlockAvatarPathCsReq = 65;
	CmdPlayerLogoutScRsp = 53;
	CmdUnlockAvatarPathScRsp = 19;
	CmdReserveStaminaExchangeCsReq = 40;
	CmdGetLevelRewardTakenListScRsp = 54;
	CmdPlayerGetTokenScRsp = 2;
	CmdPlayerLoginCsReq = 10;
	CmdGetLevelRewardCsReq = 62;
	CmdGetGameStateServiceConfigCsReq = 43;
	CmdSetGameplayBirthdayCsReq = 58;
	CmdAvatarPathChangedNotify = 68;
	CmdGmTalkScNotify = 6;
	CmdReserveStaminaExchangeScRsp = 27;
	CmdRegionStopScNotify = 94;
	CmdExchangeStaminaCsReq = 26;
	CmdClientObjUploadCsReq = 56;
	CmdSetAvatarPathScRsp = 38;
	CmdPlayerLoginFinishCsReq = 96;
	CmdFeatureSwitchClosedScNotify = 23;
	CmdSetLanguageCsReq = 92;
	CmdUpdatePsnSettingsInfoCsReq = 75;
	CmdGetVideoVersionKeyScRsp = 99;
	CmdSetPlayerInfoCsReq = 66;
}

enum ILPMNLDGEAK {
	AUTHKEY_SIGN_TYPE_NONE = 0;
	AUTHKEY_SIGN_TYPE_DEFAULT = 1;
	AUTHKEY_SIGN_TYPE_RSA = 2;
}

enum JIDIECGHKGK {
	OBJ_CONTENT_JSON = 0;
	OBJ_CONTENT_PB = 1;
}
message PlayerLoginCsReq {
	string IGNFBLGJIOJ = 1837;
	string signature = 5;
	LanguageType FADPDIBKNBI = 12;
	string client_version = 9;
	bool OEENCFMCAHD = 1499;
	uint32 client_res_version = 10;
	string OEHJLODAHFN = 15;
	string BNIGPDOOILI = 7;
	string HJDMJPEBPPM = 4;
	string KFDJEIEOBBN = 691;
	string DMPMHCCFBKG = 3;
	string OCDACJNNJNJ = 13;
	OCCHNEFHGNE PKLICGMEIMB = 1767;
	string OHPCKCNAEIK = 822;
	uint32 MLNABEPINDB = 1991;
	uint32 NHBHBALHJML = 2018;
	uint64 login_random = 14;
	string AKCEJFCFBAN = 379;
	string rogue_get_info = 11;
	string BPCKJKDENCB = 1403;
	string GMALCPNOHBF = 1579;
	bool GEHAPNIHCDO = 150;
	PlatformType platform = 2;
	string KIBBNBNGIJD = 6;
	uint32 HAEHHCPOAPP = 320;
	uint32 JMKHDHAIOIM = 1;
	JGFKICDCFLJ MIOHKAOIDNK = 1553;
	string BNBOALIAPAE = 8;
}
message PlayerLoginScRsp {
	string PDIKPEIFANN = 5;
	uint32 retcode = 4;
	int32 cur_timezone = 1;
	uint64 login_random = 13;
	uint32 stamina = 14;
	bool JLPKEOBINCP = 2;
	uint64 server_timestamp_ms = 6;
	string NHMHABJKHOG = 12;
	PlayerBasicInfo basic_info = 8;
	bool IGKBEAMLNBJ = 10;
}

message LMIPMHHPFHN {
}
message PlayerGetTokenCsReq {
	string MEMPBKCJJFJ = 12;
	string account_uid = 10;
	uint32 platform = 15;
	uint32 uid = 11;
	uint32 HAEHHCPOAPP = 5;
	uint32 ICMFPNPIJJF = 3;
	string token = 6;
	uint32 FGOJLPAEJEC = 9;
}
message PlayerGetTokenScRsp {
	uint64 secret_key_seed = 9;
	BlackInfo black_info = 12;
	string msg = 4;
	uint32 retcode = 14;
	uint32 uid = 2;
}
message GmTalkScNotify {
	string msg = 5;
}
message PlayerKickOutScNotify {
	enum KickType {
		KICK_SQUEEZED = 0;
		KICK_BLACK = 1;
		KICK_CHANGE_PWD = 2;
		KICK_LOGIN_WHITE_TIMEOUT = 3;
		KICK_ACE_ANTI_CHEATER = 4;
		KICK_BY_GM = 5;
	}
	BlackInfo black_info = 7;
	KickType kick_type = 9;
}
message GmTalkCsReq {
	string msg = 6;
}
message GmTalkScRsp {
	string BJDOJLKEHNA = 5;
	uint32 retcode = 15;
}
message GetBasicInfoCsReq {
}

message OGFIODPILEL {
	bool DMKLNJBOABO = 3;
	bool AKHEILMNDHJ = 15;
	uint32 CACEKELNMIN = 4;
}

message PlayerSettingInfo {
	bool APONEIDMPHL = 1;
	bool NKEKIBNJMPA = 9;
	bool PBKBGLHHKPE = 14;
	bool MMMNJCHEMFN = 5;
	bool NJFMILJOFOK = 3;
	bool ILFALCDLAOL = 13;
	bool GMJANOJMKCE = 11;
	bool KAPDIMGJLNF = 6;
	OGFIODPILEL GHKCMDNKOPN = 15;
	bool KJNCCKHJFHE = 12;
	bool AICNFAOBCPI = 2;
}
message GetBasicInfoScRsp {
	bool is_gender_set = 1;
	int64 next_recover_time = 5;
	PlayerSettingInfo player_setting_info = 9;
	int64 last_set_nickname_time = 3;
	uint32 exchange_times = 10;
	uint32 gender = 12;
	uint32 gameplay_birthday = 6;
	uint32 week_cocoon_finished_count = 11;
	uint32 cur_day = 14;
	uint32 retcode = 13;
}
message ExchangeStaminaCsReq {
}
message ExchangeStaminaScRsp {
	uint32 retcode = 11;
	int64 last_recover_time = 15;
	uint32 exchange_times = 13;
	repeated ItemCost item_cost_list = 14;
	uint32 stamina_add = 5;
}
message GetAuthkeyCsReq {
	uint32 authkey_ver = 13;
	uint32 sign_type = 5;
	string auth_appid = 1;
}
message GetAuthkeyScRsp {
	uint32 retcode = 15;
	string authkey = 13;
	string auth_appid = 9;
	uint32 authkey_ver = 10;
	uint32 sign_type = 7;
}
message RegionStopScNotify {
	int64 stop_begin_time = 2;
	int64 stop_end_time = 8;
}
message AntiAddictScNotify {
	uint32 msg_type = 5;
	string msg = 6;
	string level = 10;
}
message SetNicknameCsReq {
	bool is_modify = 7;
	string nickname = 3;
}
message SetNicknameScRsp {
	bool is_modify = 14;
	int64 JENDKBOOAIP = 2;
	uint32 retcode = 3;
}
message GetLevelRewardTakenListCsReq {
}
message GetLevelRewardTakenListScRsp {
	repeated uint32 level_reward_taken_list = 9;
	uint32 retcode = 13;
}
message GetLevelRewardCsReq {
	uint32 level = 3;
	uint32 interacted_prop_entity_id = 7;
}
message GetLevelRewardScRsp {
	uint32 retcode = 6;
	uint32 level = 7;
	ItemList reward = 15;
}
message SetLanguageCsReq {
	LanguageType FADPDIBKNBI = 6;
}
message SetLanguageScRsp {
	LanguageType FADPDIBKNBI = 2;
	uint32 retcode = 1;
}

message AnnounceData {
	uint32 banner_frequency = 1;
	string emergency_text = 15;
	string count_down_text = 5;
	bool is_center_system_last_5_every_minutes = 6;
	uint32 config_id = 11;
	string banner_text = 4;
	uint32 center_system_frequency = 3;
	int64 end_time = 8;
	int64 begin_time = 9;
}
message ServerAnnounceNotify {
	repeated AnnounceData announce_data_list = 11;
}

message GateServer {
	string rogue_tourn_build_ref_h5_url = 470;
	string DENLMLCJLPG = 1643;
	string login_white_msg = 927;
	string cloud_game_url = 1869;
	bool forbid_recharge = 174;
	bool use_tcp = 266;
	string third_privacy_in_game_url = 1724;
	string ifix_url = 618;
	string rogue_tourn_build_ref_api_req_color_header_value = 409;
	string custom_service_url = 1616;
	bool enable_watermark = 1876;
	uint32 enable_cdn_ipv6 = 1800;
	string POOOLGFKKJL = 2000;
	string CKIOFJNKEMN = 119;
	string personal_information_in_game_url = 790;
	string design_data_relogin_desc = 41;
	string pre_download_url = 1301;
	string MPNJIKPKOHJ = 1631;
	string hot_point_url = 1891;
	bool enable_save_replay_file = 761;
	uint32 asb_relogin_type = 12;
	string ifix_version = 1799;
	string ip = 3;
	string client_secret_key = 732;
	bool enable_version_update = 2;
	string privacy_in_game_url = 868;
	uint32 design_data_relogin_type = 7;
	string asb_relogin_desc = 10;
	bool use_new_networking = 977;
	string lua_url = 11;
	uint32 rogue_tourn_notice_id = 664;
	string rogue_tourn_build_ref_static_data_url_prefix = 81;
	string community_activity_url = 279;
	string online_replay_upload_url = 216;
	bool enable_android_middle_package = 1567;
	bool enable_upload_battle_log = 2011;
	bool close_redeem_code = 721;
	string player_return_questionnaire_a_url = 620;
	uint32 rogue_tourn_notice_pic_type = 1415;
	string LHOOFMAIHPC = 71;
	string player_return_questionnaire_b_url = 147;
	string web_tool_url = 429;
	string player_return_invite_h5_url = 1344;
	uint32 retcode = 4;
	int64 stop_begin_time = 9;
	string server_description = 800;
	string msg = 15;
	string official_community_url = 1210;
	string region_name = 13;
	bool ios_exam = 330;
	string teenager_privacy_in_game_url = 1473;
	string user_agreement_url = 890;
	string operation_feedback_url = 1430;
	string EHIMAOFLGIL = 1448;
	string mdk_res_version = 609;
	string cdkey_recall_url = 1221;
	bool network_diagnostic = 846;
	string game_start_customer_service_url = 1517;
	uint32 port = 5;
	bool enable_design_data_version_update = 6;
	bool ECBFEHFPOFJ = 722;
	string ex_resource_url = 14;
	string NGCIMHOLJBA = 215;
	bool mtp_switch = 1921;
	string ipv6_address = 1728;
	bool MODIBFHPMCP = 1094;
	string rogue_magic_h5_url = 340;
	bool event_tracking_open = 284;
	repeated string OAOHIECDGCC = 1442;
	string asset_bundle_url = 1;
	string rogue_tourn_build_ref_api_req_color_header_key = 1741;
	int64 stop_end_time = 8;
	string online_replay_download_url = 1526;
	string temporary_maintenance_url = 2029;
}
message GateServerScNotify {
	string CONNPKCCHJE = 13;
}
message SetAvatarPathCsReq {
	MultiPathAvatarType avatar_id = 5;
}
message SetAvatarPathScRsp {
	uint32 retcode = 11;
	MultiPathAvatarType avatar_id = 9;
}
message SetMultipleAvatarPathsCsReq {
	repeated MultiPathAvatarType avatar_id_list = 1;
}
message SetMultipleAvatarPathsScRsp {
	uint32 retcode = 12;
}
message UnlockAvatarPathCsReq {
	MultiPathAvatarType avatar_id = 10;
}
message UnlockAvatarPathScRsp {
	MultiPathAvatarType avatar_id = 7;
	uint32 retcode = 8;
	repeated uint32 basic_type_id_list = 1;
	ItemList reward = 12;
}
message AvatarPathChangedNotify {
	MultiPathAvatarType cur_multi_path_avatar_type = 9;
	uint32 base_avatar_id = 13;
}
message SetGenderCsReq {
	Gender gender = 8;
}
message SetGenderScRsp {
	MultiPathAvatarType cur_avatar_path = 13;
	repeated MultiPathAvatarInfo cur_avatar_path_info_list = 2;
	uint32 retcode = 10;
}
message SetPlayerInfoCsReq {
	Gender gender = 11;
	bool is_modify = 2;
	string nickname = 13;
}
message SetPlayerInfoScRsp {
	int64 JENDKBOOAIP = 9;
	repeated MultiPathAvatarInfo cur_avatar_path_info_list = 11;
	uint32 retcode = 10;
	bool is_modify = 4;
	MultiPathAvatarType cur_avatar_path = 8;
}
message QueryProductInfoCsReq {
}

message Product {
	string product_id = 9;
	ProductGiftType gift_type = 1;
	bool double_reward = 5;
	string price_tier = 11;
	int64 begin_time = 2;
	uint32 GCBOBAMCALK = 12;
	uint32 IECAEABACDM = 7;
	int64 end_time = 14;
	uint32 IOGLPEBJMDB = 4;
}
message QueryProductInfoScRsp {
	uint32 retcode = 2;
	uint32 ODNFIAAHKCI = 1;
	uint64 month_card_out_date_time = 13;
	uint32 CMGHDMPEAKO = 12;
	repeated Product product_list = 10;
}
message MonthCardRewardNotify {
	ItemList reward = 1;
}
message ClientDownloadDataScNotify {
	ClientDownloadData download_data = 15;
}
message ClientObjDownloadDataScNotify {
	ClientObjDownloadData data = 10;
}
message UpdateFeatureSwitchScNotify {
	repeated HPIOFDCGMEJ switch_info_list = 10;
}
message DailyRefreshNotify {
	uint32 GMFEBDAFDPJ = 15;
}
message SetGameplayBirthdayCsReq {
	uint32 birthday = 7;
}
message SetGameplayBirthdayScRsp {
	uint32 retcode = 6;
	uint32 birthday = 8;
}
message AceAntiCheaterCsReq {
	string DGDLNIEFCPF = 15;
	uint32 GLNKKFAIPOB = 12;
}
message AceAntiCheaterScRsp {
	uint32 retcode = 3;
}
message RetcodeNotify {
	repeated uint32 JOJPPODOMAH = 12;
	Retcode retcode = 13;
}
message PlayerHeartBeatCsReq {
	uint64 client_time_ms = 9;
	uint32 JBPEMOFNEDG = 7;
	ClientUploadData LKJMJGDEBEE = 8;
}
message PlayerHeartBeatScRsp {
	uint32 retcode = 9;
	uint64 server_time_ms = 3;
	ClientDownloadData download_data = 15;
	uint64 client_time_ms = 1;
}
message FeatureSwitchClosedScNotify {
	FeatureSwitchType KIMNKFPFBDG = 11;
}

message SecretKeyInfo {
	string secret_key = 14;
	SecretKeyType type = 11;
}
message GetSecretKeyInfoCsReq {
	bytes secret_req = 6;
}
message GetSecretKeyInfoScRsp {
	uint32 retcode = 1;
	repeated SecretKeyInfo secret_info = 14;
	bytes secret_rsp = 13;
}
message PlayerLoginFinishCsReq {
}
message PlayerLoginFinishScRsp {
	uint32 retcode = 3;
}

message VideoKeyInfo {
	uint64 video_key = 2;
	uint32 id = 12;
}
message GetVideoVersionKeyCsReq {
}
message GetVideoVersionKeyScRsp {
	repeated VideoKeyInfo video_key_info_list = 4;
	repeated VideoKeyInfo activity_video_key_info_list = 10;
	uint32 retcode = 2;
}

message NHJGHOKBDPK {
	uint32 IIPDEFCEDMC = 8;
	uint32 NCIADBAKMAE = 1;
	uint32 JDAKKOFDGEP = 15;
	uint32 content_id = 11;
}
message SetRedPointStatusScNotify {
	uint32 JDAKKOFDGEP = 1;
	uint32 uid = 15;
	uint32 IIPDEFCEDMC = 7;
	repeated NHJGHOKBDPK NJEHHFFDGHK = 13;
	uint32 content_id = 4;
}
message ReserveStaminaExchangeCsReq {
	uint32 num = 2;
}
message ReserveStaminaExchangeScRsp {
	uint32 num = 13;
	uint32 retcode = 5;
}
message StaminaInfoScNotify {
	uint32 reserve_stamina = 7;
	int64 DPIMHEMJKOE = 11;
	uint32 stamina = 6;
	int64 next_recover_time = 10;
}

message UpdatePlayerSetting {
	oneof GCMPPOICPOD {
		bool KAPDIMGJLNF = 13;
		bool MMMNJCHEMFN = 5;
		bool NKEKIBNJMPA = 12;
		bool PBKBGLHHKPE = 10;
		bool NJFMILJOFOK = 6;
		bool AICNFAOBCPI = 2;
		bool KJNCCKHJFHE = 11;
		bool APONEIDMPHL = 3;
		bool GMJANOJMKCE = 9;
		OGFIODPILEL GHKCMDNKOPN = 15;
		bool ILFALCDLAOL = 1;
	}
}
message UpdatePlayerSettingCsReq {
	UpdatePlayerSetting player_setting = 7;
}
message UpdatePlayerSettingScRsp {
	uint32 retcode = 1;
	UpdatePlayerSetting player_setting = 13;
}
message ClientObjUploadCsReq {
	JIDIECGHKGK modifier_content_type = 1;
	uint32 JBPEMOFNEDG = 14;
	bytes LKJMJGDEBEE = 2;
}
message ClientObjUploadScRsp {
	uint32 retcode = 8;
	ClientObjDownloadData data = 15;
}

message MENPBGGOGMC {
	repeated string GKHFBFKNHOB = 4;
}

message NCBIMLPODON {
	MENPBGGOGMC black_list = 9;
	bool IAHOPFNPFLN = 4;
}

message CJAKIBDIMMJ {
	oneof PMFBBCEBACD {
		bool IAHOPFNPFLN = 517;
		MENPBGGOGMC AMALJFOKCBA = 1515;
		MENPBGGOGMC OECBELGDLFP = 2038;
	}
}
message UpdatePsnSettingsInfoCsReq {
	oneof DFOPIIHEJFM {
		NCBIMLPODON DOOCPLCLDPD = 521;
		CJAKIBDIMMJ INHLDIDJGHA = 1683;
	}
}
message UpdatePsnSettingsInfoScRsp {
	uint32 retcode = 15;
}
message GetGameStateServiceConfigCsReq {
}
message GetGameStateServiceConfigScRsp {
	uint32 retcode = 5;
	repeated string FIBIJGMKDPP = 2;
	repeated string KAOJCOBEEON = 9;
	repeated string LEDKMDOLLBB = 6;
}

enum CmdPlayerBoardType {
	CmdPlayerBoardTypeNone = 0;
	CmdSetSignatureScRsp = 2807;
	CmdSetAssistAvatarScRsp = 2816;
	CmdSetAssistAvatarCsReq = 2839;
	CmdSetSignatureCsReq = 2855;
	CmdSetIsDisplayAvatarInfoScRsp = 2806;
	CmdSetHeadIconCsReq = 2898;
	CmdSetPersonalCardCsReq = 2826;
	CmdSetDisplayAvatarCsReq = 2879;
	CmdSetPersonalCardScRsp = 2863;
	CmdSetHeadIconScRsp = 2853;
	CmdSetIsDisplayAvatarInfoCsReq = 2897;
	CmdGetPlayerBoardDataCsReq = 2810;
	CmdSetDisplayAvatarScRsp = 2802;
	CmdGetPlayerBoardDataScRsp = 2805;
	CmdUnlockHeadIconScNotify = 2841;
}

message HeadIconData {
	uint32 id = 1;
}

message DisplayAvatarData {
	uint32 avatar_id = 2;
	uint32 pos = 12;
}

message DisplayAvatarVec {
	bool is_display = 8;
	repeated DisplayAvatarData display_avatar_list = 15;
}
message GetPlayerBoardDataCsReq {
}
message GetPlayerBoardDataScRsp {
	repeated HeadIconData unlocked_head_icon_list = 5;
	repeated uint32 assist_avatar_id_list = 2;
	uint32 OLDMJONBJOM = 3;
	uint32 retcode = 11;
	string signature = 12;
	uint32 current_head_icon_id = 9;
	repeated uint32 KKNJHENMGPK = 4;
	DisplayAvatarVec display_avatar_vec = 15;
}
message SetHeadIconCsReq {
	uint32 id = 5;
}
message SetHeadIconScRsp {
	uint32 retcode = 12;
	uint32 current_head_icon_id = 7;
}
message SetPersonalCardCsReq {
	uint32 id = 8;
}
message SetPersonalCardScRsp {
	uint32 retcode = 11;
	uint32 OLDMJONBJOM = 5;
}
message SetDisplayAvatarCsReq {
	repeated DisplayAvatarData display_avatar_list = 8;
}
message SetDisplayAvatarScRsp {
	repeated DisplayAvatarData display_avatar_list = 15;
	uint32 retcode = 9;
}
message SetIsDisplayAvatarInfoCsReq {
	bool is_display = 8;
}
message SetIsDisplayAvatarInfoScRsp {
	bool is_display = 3;
	uint32 retcode = 8;
}
message SetSignatureCsReq {
	string signature = 13;
}
message SetSignatureScRsp {
	string signature = 11;
	uint32 retcode = 10;
}
message SetAssistAvatarCsReq {
	uint32 avatar_id = 15;
	repeated uint32 avatar_id_list = 4;
}
message SetAssistAvatarScRsp {
	repeated uint32 avatar_id_list = 13;
	uint32 avatar_id = 10;
	uint32 retcode = 9;
}

enum CmdPlayerReturnType {
	CmdPlayerReturnTypeNone = 0;
	CmdPlayerReturnTakeRewardScRsp = 4506;
	CmdPlayerReturnPointChangeScNotify = 4553;
	CmdPlayerReturnSignScRsp = 4598;
	CmdPlayerReturnTakeRelicCsReq = 4539;
	CmdPlayerReturnSignCsReq = 4505;
	CmdPlayerReturnTakeRewardCsReq = 4597;
	CmdPlayerReturnStartScNotify = 4510;
	CmdPlayerReturnInfoQueryScRsp = 4555;
	CmdPlayerReturnTakePointRewardCsReq = 4579;
	CmdPlayerReturnTakeRelicScRsp = 4516;
	CmdPlayerReturnInfoQueryCsReq = 4541;
	CmdPlayerReturnTakePointRewardScRsp = 4502;
	CmdPlayerReturnForceFinishScNotify = 4507;
}

enum NOBPMMNFENJ {
	PLAYER_RETURN_NONE = 0;
	PLAYER_RETURN_PROCESSING = 1;
	PLAYER_RETURN_FINISH = 2;
}
message PlayerReturnStartScNotify {
	uint32 NCHIEKEDHCE = 7;
}
message PlayerReturnSignCsReq {
	uint32 OPEEDJIHJOP = 12;
	repeated uint32 NMKLEGOMEPJ = 15;
}
message PlayerReturnSignScRsp {
	uint32 retcode = 3;
	repeated uint32 NMKLEGOMEPJ = 15;
	uint32 OPEEDJIHJOP = 11;
	repeated ItemList IPFLHCJIEBM = 6;
}
message PlayerReturnPointChangeScNotify {
	uint32 MAMHOJMFJOF = 8;
}
message PlayerReturnTakePointRewardCsReq {
	uint32 CPNIMLJNMMF = 6;
	uint32 IIFOMGOFMDL = 8;
}
message PlayerReturnTakePointRewardScRsp {
	uint32 retcode = 10;
	uint32 CPNIMLJNMMF = 7;
	ItemList CFIDBMMIJHG = 1;
	uint32 IIFOMGOFMDL = 15;
}
message PlayerReturnTakeRewardCsReq {
}
message PlayerReturnTakeRewardScRsp {
	ItemList IPFLHCJIEBM = 1;
	uint32 retcode = 10;
}
message PlayerReturnInfoQueryCsReq {
	uint32 CEHFIILMJKM = 7;
}

message AFBNEIBIJND {
	NOBPMMNFENJ status = 13;
	uint32 ILCFOJCDNHI = 5;
	int64 COIFHFPEGPH = 14;
	int64 finish_time = 9;
	uint32 world_level = 2;
	uint32 AHNFMDNEJNL = 8;
	bool is_taken_reward = 12;
	repeated uint32 NMKLEGOMEPJ = 6;
	uint32 BGAFGHIPOJE = 1;
	bool FJNDPCFNFLO = 7;
	repeated uint32 CAIMHCAACFG = 10;
	uint32 MAMHOJMFJOF = 3;
}
message PlayerReturnInfoQueryScRsp {
	AFBNEIBIJND PFEIDPOLOKM = 5;
	uint32 retcode = 3;
	uint32 GMFIDNOHGCO = 4;
}
message PlayerReturnForceFinishScNotify {
	AFBNEIBIJND PFEIDPOLOKM = 11;
}
message PlayerReturnTakeRelicCsReq {
	uint32 avatar_id = 11;
}
message PlayerReturnTakeRelicScRsp {
	ItemList item_list = 10;
	uint32 avatar_id = 9;
	uint32 retcode = 3;
}

enum CmdPlotType {
	CmdPlotTypeNone = 0;
	CmdFinishPlotCsReq = 1110;
	CmdFinishPlotScRsp = 1105;
}
message FinishPlotCsReq {
	uint32 CLDAJDJHOII = 2;
}
message FinishPlotScRsp {
	uint32 CLDAJDJHOII = 5;
	uint32 retcode = 4;
}

enum CmdPunkLordType {
	CmdPunkLordTypeNone = 0;
	CmdSharePunkLordMonsterCsReq = 3279;
	CmdPunkLordDataChangeNotify = 3242;
	CmdPunkLordMonsterInfoScNotify = 3263;
	CmdGetPunkLordMonsterDataCsReq = 3210;
	CmdSharePunkLordMonsterScRsp = 3202;
	CmdPunkLordMonsterKilledNotify = 3292;
	CmdTakePunkLordPointRewardScRsp = 3226;
	CmdSummonPunkLordMonsterScRsp = 3206;
	CmdSummonPunkLordMonsterCsReq = 3297;
	CmdGetPunkLordDataScRsp = 3272;
	CmdTakePunkLordPointRewardCsReq = 3216;
	CmdPunkLordBattleResultScNotify = 3254;
	CmdGetPunkLordBattleRecordScRsp = 3251;
	CmdStartPunkLordRaidScRsp = 3253;
	CmdTakeKilledPunkLordMonsterScoreScRsp = 3273;
	CmdPunkLordRaidTimeOutScNotify = 3236;
	CmdTakeKilledPunkLordMonsterScoreCsReq = 3224;
	CmdGetKilledPunkLordMonsterDataScRsp = 3209;
	CmdGetPunkLordMonsterDataScRsp = 3205;
	CmdGetPunkLordBattleRecordCsReq = 3201;
	CmdStartPunkLordRaidCsReq = 3298;
	CmdGetPunkLordDataCsReq = 3267;
	CmdGetKilledPunkLordMonsterDataCsReq = 3262;
}

enum NLEFPBICECN {
	PUNK_LORD_OPERATION_NONE = 0;
	PUNK_LORD_OPERATION_REFRESH = 1;
	PUNK_LORD_OPERATION_SHARE = 2;
	PUNK_LORD_OPERATION_START_RAID = 3;
	PUNK_LORD_OPERATION_GET_BATTLE_RECORD = 4;
}

message KAOAHKAOHFI {
	PunkLordBattleRecordList DHLPKMIHDNM = 5;
	uint32 COJKEIFJNEK = 4;
	PunkLordAttackerStatus EKKJLAOKIJI = 1;
	PunkLordMonsterBasicInfo basic_info = 14;
}
message GetPunkLordMonsterDataCsReq {
}
message GetPunkLordMonsterDataScRsp {
	uint32 retcode = 2;
	repeated KAOAHKAOHFI FIJNJGFABJD = 4;
}
message StartPunkLordRaidCsReq {
	uint32 monster_id = 8;
	uint32 uid = 7;
	bool CLOMMFKJPMM = 15;
}
message StartPunkLordRaidScRsp {
	bool CLOMMFKJPMM = 5;
	repeated uint32 DMILCFHLIHP = 7;
	uint32 retcode = 3;
	int64 AGEGDMGNPDK = 13;
	KAOAHKAOHFI DPMKAMMIOLB = 11;
	FNLGPLNCPCL scene = 12;
}
message SharePunkLordMonsterCsReq {
	uint32 monster_id = 12;
	PunkLordShareType share_type = 5;
	uint32 uid = 3;
}
message SharePunkLordMonsterScRsp {
	uint32 retcode = 10;
	uint32 monster_id = 9;
	PunkLordShareType share_type = 4;
	uint32 uid = 5;
}
message SummonPunkLordMonsterCsReq {
}
message SummonPunkLordMonsterScRsp {
	uint32 retcode = 14;
	KAOAHKAOHFI DPMKAMMIOLB = 12;
}
message TakePunkLordPointRewardCsReq {
	uint32 level = 12;
	bool MDHJKKBNMCF = 15;
}
message TakePunkLordPointRewardScRsp {
	uint32 level = 8;
	bool MDHJKKBNMCF = 9;
	ItemList reward = 12;
	uint32 retcode = 5;
}
message PunkLordMonsterInfoScNotify {
	PunkLordMonsterBasicInfo basic_info = 4;
	repeated uint32 DMILCFHLIHP = 12;
	PunkLordMonsterInfoNotifyReason reason = 5;
	AHKANKEPADJ DHLPKMIHDNM = 6;
}
message GetPunkLordDataCsReq {
}
message GetPunkLordDataScRsp {
	uint32 IADCOHODGJN = 6;
	int64 BEDJDEANCOJ = 1;
	uint32 retcode = 2;
	uint32 PPNKPNBIIEN = 3;
	uint32 GNLMKKHAEKM = 8;
	uint32 BDPBDGBKDOO = 14;
	uint32 GBJODJCOLGA = 7;
	repeated uint32 EAHBIKFALLF = 4;
}
message PunkLordRaidTimeOutScNotify {
	PunkLordMonsterBasicInfo DPMKAMMIOLB = 9;
}
message PunkLordBattleResultScNotify {
	uint32 PGOFPNLAPOE = 12;
	uint32 NCACOCCJNLD = 7;
	PunkLordMonsterBasicInfo DPMKAMMIOLB = 14;
	AHKANKEPADJ DHLPKMIHDNM = 4;
	uint32 AHJFPNGDBDO = 8;
}

message MDJGOOCKCMJ {
	uint32 LKKJEILKPNI = 4;
	int64 create_time = 9;
	uint32 world_level = 10;
	uint32 config_id = 6;
	bool PPBOCECKCAH = 7;
	uint32 monster_id = 3;
}
message GetKilledPunkLordMonsterDataCsReq {
}
message GetKilledPunkLordMonsterDataScRsp {
	repeated MDJGOOCKCMJ DDCEMDGEDIO = 8;
	repeated PunkLordMonsterKey OAKKCCGAEKK = 11;
	uint32 retcode = 12;
}
message PunkLordMonsterKilledNotify {
	MDJGOOCKCMJ AIECOBKEIGB = 7;
}
message TakeKilledPunkLordMonsterScoreCsReq {
	PunkLordMonsterKey PKCPJJNOALN = 3;
	bool KFEJGFNONIP = 12;
}
message TakeKilledPunkLordMonsterScoreScRsp {
	repeated PunkLordMonsterKey JEAHDCGKBBB = 5;
	uint32 retcode = 15;
	bool KFEJGFNONIP = 8;
	uint32 score_id = 6;
}
message PunkLordDataChangeNotify {
	uint32 BDPBDGBKDOO = 5;
	uint32 GBJODJCOLGA = 10;
	uint32 IADCOHODGJN = 6;
}
message GetPunkLordBattleRecordCsReq {
	PunkLordMonsterKey PKCPJJNOALN = 6;
}
message GetPunkLordBattleRecordScRsp {
	uint32 retcode = 5;
	PunkLordMonsterKey PKCPJJNOALN = 12;
	repeated AHKANKEPADJ battle_record_list = 7;
	repeated CEMEDOEHBGE OKOBGJHJJOA = 15;
}

enum CmdQuestType {
	CmdQuestTypeNone = 0;
	CmdFinishQuestScRsp = 907;
	CmdBatchGetQuestDataScRsp = 967;
	CmdGetQuestRecordScRsp = 906;
	CmdTakeQuestRewardScRsp = 953;
	CmdQuestRecordScNotify = 941;
	CmdBatchGetQuestDataCsReq = 963;
	CmdGetQuestDataScRsp = 905;
	CmdFinishQuestCsReq = 955;
	CmdTakeQuestOptionalRewardScRsp = 916;
	CmdTakeQuestRewardCsReq = 998;
	CmdGetQuestRecordCsReq = 997;
	CmdGetQuestDataCsReq = 910;
	CmdTakeQuestOptionalRewardCsReq = 939;
}

enum QuestStatus {
	QUEST_NONE = 0;
	QUEST_DOING = 1;
	QUEST_FINISH = 2;
	QUEST_CLOSE = 3;
	QUEST_DELETE = 4;
}
message GetQuestDataCsReq {
}

message Quest {
	uint32 id = 11;
	QuestStatus status = 2;
	repeated uint32 PGJNGNAJHPP = 15;
	int64 finish_time = 4;
	uint32 progress = 13;
}
message GetQuestDataScRsp {
	uint32 retcode = 1;
	repeated Quest quest_list = 13;
	uint32 total_achievement_exp = 3;
}
message TakeQuestRewardCsReq {
	repeated uint32 succ_quest_id_list = 14;
}
message TakeQuestRewardScRsp {
	ItemList reward = 7;
	repeated uint32 NODOEMDNBCJ = 4;
	uint32 retcode = 10;
	repeated uint32 succ_quest_id_list = 1;
}
message TakeQuestOptionalRewardCsReq {
	uint32 optional_reward_id = 2;
	uint32 quest_id = 9;
}
message TakeQuestOptionalRewardScRsp {
	ItemList reward = 9;
	uint32 retcode = 10;
	uint32 quest_id = 4;
}
message GetQuestRecordCsReq {
}

message EPJDFBAOFDF {
	uint32 IJFIHGCKNHG = 7;
	uint32 progress = 8;
}
message GetQuestRecordScRsp {
	uint32 retcode = 6;
	repeated EPJDFBAOFDF OBEMGACMGNH = 8;
}
message QuestRecordScNotify {
	EPJDFBAOFDF FEAOCOKKGBM = 9;
}
message FinishQuestCsReq {
	uint32 group_id = 11;
	uint32 prop_id = 13;
	uint32 quest_id = 15;
}
message FinishQuestScRsp {
	uint32 retcode = 7;
}
message BatchGetQuestDataCsReq {
	repeated uint32 quest_list = 10;
}
message BatchGetQuestDataScRsp {
	repeated Quest quest_list = 4;
	uint32 retcode = 2;
}

enum CmdRaidType {
	CmdRaidTypeNone = 0;
	CmdStartRaidCsReq = 2210;
	CmdRaidInfoNotify = 2279;
	CmdChallengeRaidNotify = 2255;
	CmdGetRaidInfoCsReq = 2207;
	CmdTakeChallengeRaidRewardCsReq = 2206;
	CmdLeaveRaidCsReq = 2298;
	CmdGetRaidInfoScRsp = 2239;
	CmdGetAllSaveRaidCsReq = 2272;
	CmdDelSaveRaidScNotify = 2236;
	CmdGetChallengeRaidInfoScRsp = 2297;
	CmdGetSaveRaidScRsp = 2267;
	CmdSetClientRaidTargetCountScRsp = 2226;
	CmdGetSaveRaidCsReq = 2263;
	CmdStartRaidScRsp = 2205;
	CmdGetAllSaveRaidScRsp = 2294;
	CmdTakeChallengeRaidRewardScRsp = 2241;
	CmdSetClientRaidTargetCountCsReq = 2216;
	CmdGetChallengeRaidInfoCsReq = 2202;
	CmdRaidKickByServerScNotify = 2278;
	CmdLeaveRaidScRsp = 2253;
}

enum RaidStatus {
	RAID_STATUS_NONE = 0;
	RAID_STATUS_DOING = 1;
	RAID_STATUS_FINISH = 2;
	RAID_STATUS_FAILED = 3;
}

enum FOCHDFJANPC {
	RAID_TARGET_STATUS_NONE = 0;
	RAID_TARGET_STATUS_DOING = 1;
	RAID_TARGET_STATUS_FINISH = 2;
}

enum EGKFNDOOPNN {
	RAID_KICK_REASON_NONE = 0;
	RAID_KICK_REASON_ACTIVITY_SCHEDULE_FINISH = 1;
}

message FNLGPLNCPCL {
	uint32 world_level = 5;
	SceneInfo GHEDLCLNHIJ = 4;
	uint32 raid_id = 2;
	LineupInfo lineup = 11;
}
message StartRaidCsReq {
	repeated uint32 avatar_list = 5;
	uint32 world_level = 11;
	uint32 is_save = 4;
	uint32 raid_id = 8;
	uint32 prop_entity_id = 10;
}
message StartRaidScRsp {
	uint32 retcode = 2;
	FNLGPLNCPCL scene = 4;
}
message LeaveRaidCsReq {
	uint32 raid_id = 4;
	bool is_save = 3;
}
message LeaveRaidScRsp {
	uint32 raid_id = 4;
	uint32 world_level = 1;
	uint32 retcode = 13;
}

message RaidTargetInfo {
	uint32 HFALJIHKECN = 3;
	FOCHDFJANPC MDDOFMCJJHH = 8;
	uint32 DLPPDPBJIIM = 12;
}
message RaidInfoNotify {
	uint64 raid_finish_time = 2;
	uint32 raid_id = 15;
	uint32 world_level = 5;
	RaidStatus status = 14;
	repeated RaidTargetInfo raid_target_info = 10;
	ItemList item_list = 7;
}

message AMDKBOHCFIA {
	uint32 raid_id = 5;
	uint32 max_score = 3;
}

message FinishedRaidInfo {
	uint32 world_level = 11;
	uint32 raid_id = 1;
	repeated uint32 KNIBANIILDE = 8;
}
message GetRaidInfoCsReq {
}
message GetRaidInfoScRsp {
	uint32 retcode = 4;
	repeated AMDKBOHCFIA challenge_raid_list = 2;
	repeated uint32 challenge_taken_reward_id_list = 11;
	repeated FinishedRaidInfo finished_raid_info_list = 8;
}
message GetChallengeRaidInfoCsReq {
}
message GetChallengeRaidInfoScRsp {
	repeated uint32 taken_reward_id_list = 10;
	uint32 retcode = 1;
	repeated AMDKBOHCFIA MJGFFCLJGFN = 6;
}
message TakeChallengeRaidRewardCsReq {
	uint32 OEHKJOAFPBA = 6;
}
message TakeChallengeRaidRewardScRsp {
	ItemList reward = 11;
	uint32 OEHKJOAFPBA = 12;
	uint32 retcode = 15;
}
message ChallengeRaidNotify {
	AMDKBOHCFIA EHMILJFIJKH = 11;
}
message SetClientRaidTargetCountCsReq {
	uint32 DMMPPKMJPMM = 8;
	uint32 progress = 15;
}
message SetClientRaidTargetCountScRsp {
	uint32 retcode = 1;
	uint32 progress = 4;
	uint32 DMMPPKMJPMM = 11;
}
message GetSaveRaidCsReq {
	uint32 world_level = 13;
	uint32 raid_id = 12;
}
message GetSaveRaidScRsp {
	bool is_save = 12;
	uint32 world_level = 11;
	uint32 raid_id = 8;
	repeated RaidTargetInfo raid_target_info = 4;
	uint32 retcode = 7;
}

message RaidData {
	repeated RaidTargetInfo raid_target_info = 12;
	uint32 world_level = 3;
	uint32 raid_id = 6;
}
message GetAllSaveRaidCsReq {
}
message GetAllSaveRaidScRsp {
	repeated RaidData raid_data_list = 14;
	uint32 retcode = 2;
}
message DelSaveRaidScNotify {
	uint32 world_level = 7;
	uint32 raid_id = 9;
}
message RaidKickByServerScNotify {
	uint32 raid_id = 5;
	EGKFNDOOPNN reason = 7;
	LineupInfo lineup = 3;
	SceneInfo scene = 8;
	uint32 world_level = 2;
}

enum CmdRaidCollectionType {
	CmdRaidCollectionTypeNone = 0;
	CmdRaidCollectionDataCsReq = 6941;
	CmdRaidCollectionEnterNextRaidCsReq = 6959;
	CmdRaidCollectionDataScNotify = 6957;
	CmdRaidCollectionEnterNextRaidScRsp = 6942;
	CmdRaidCollectionDataScRsp = 6955;
}

message ACONLFJEJOK {
	uint32 JJDMKHBKPLM = 14;
}
message RaidCollectionDataCsReq {
}
message RaidCollectionDataScRsp {
	repeated ACONLFJEJOK challenge_list = 15;
	uint32 retcode = 7;
}
message RaidCollectionDataScNotify {
	ACONLFJEJOK collection_info = 8;
}
message RaidCollectionEnterNextRaidCsReq {
	uint32 world_level = 5;
	uint32 is_save = 11;
	repeated uint32 avatar_list = 2;
	uint32 raid_id = 1;
}
message RaidCollectionEnterNextRaidScRsp {
	uint32 retcode = 7;
	FNLGPLNCPCL scene = 5;
}

enum CmdRechargeGiftType {
	CmdRechargeGiftTypeNone = 0;
	CmdTakeRechargeBenefitRewardScRsp = 8370;
	CmdGetRechargeBenefitInfoCsReq = 8362;
	CmdGetRechargeGiftInfoCsReq = 8361;
	CmdTakeRechargeBenefitRewardCsReq = 8374;
	CmdGetRechargeBenefitInfoScRsp = 8372;
	CmdSyncRechargeBenefitInfoScNotify = 8367;
	CmdTakeRechargeGiftRewardScRsp = 8379;
	CmdTakeRechargeGiftRewardCsReq = 8377;
	CmdGetRechargeGiftInfoScRsp = 8375;
}
message GetRechargeGiftInfoCsReq {
}

message OIOPBDBJHIE {
	message LIGLFGKHLHG {
		enum IPKPKDCEBKI {
			NotReach = 0;
			Received = 1;
			CanReceive = 2;
		}
	}
	LIGLFGKHLHG.IPKPKDCEBKI status = 14;
	uint32 index = 11;
}

message FPNJLDDAMGH {
	int64 end_time = 7;
	repeated OIOPBDBJHIE MIGFMPJBELG = 12;
	int64 COIFHFPEGPH = 1;
	uint32 gift_type = 15;
}
message GetRechargeGiftInfoScRsp {
	repeated FPNJLDDAMGH MMGLCJMGGIH = 5;
	uint32 retcode = 15;
}
message TakeRechargeGiftRewardCsReq {
	uint32 gift_type = 1;
}
message TakeRechargeGiftRewardScRsp {
	FPNJLDDAMGH HNKGCNDOCAK = 14;
	ItemList reward = 1;
	uint32 retcode = 15;
}
message GetRechargeBenefitInfoCsReq {
}

message JMHOJKKGNIF {
	uint32 id = 2;
	uint32 progress = 8;
	repeated uint32 JCLOBIAPKEG = 13;
	uint32 panel_id = 14;
}
message GetRechargeBenefitInfoScRsp {
	repeated JMHOJKKGNIF EHNDMLFFMHI = 12;
	uint32 retcode = 6;
}
message SyncRechargeBenefitInfoScNotify {
	JMHOJKKGNIF AMEFPPFCFJI = 5;
}
message TakeRechargeBenefitRewardCsReq {
	uint32 id = 3;
}
message TakeRechargeBenefitRewardScRsp {
	JMHOJKKGNIF AMEFPPFCFJI = 2;
	ItemList reward = 9;
	uint32 retcode = 13;
}

enum GJNKIPJFKJN {
	CMD_RECOMMEND_TYPE_NONE = 0;
	CmdGetBigDataRecommendCsReq = 2428;
	CmdGetChallengeRecommendLineupListScRsp = 2401;
	CmdGetBigDataRecommendScRsp = 2427;
	CmdGetBigDataAllRecommendScRsp = 2404;
	CmdGetBigDataAllRecommendCsReq = 2442;
	CmdGetChallengeRecommendLineupListCsReq = 2402;
}

enum BigDataRecommendType {
	BIG_DATA_RECOMMEND_TYPE_NONE = 0;
	BIG_DATA_RECOMMEND_TYPE_EQUIPMENT = 1;
	BIG_DATA_RECOMMEND_TYPE_RELIC_SUIT = 2;
	BIG_DATA_RECOMMEND_TYPE_RELIC_AVATAR = 3;
	BIG_DATA_RECOMMEND_TYPE_AVATAR_RELIC = 4;
	BIG_DATA_RECOMMEND_TYPE_LOCAL_LEGEND = 5;
}
message GetChallengeRecommendLineupListCsReq {
	uint32 challenge_id = 15;
}

message ChallengeRecommendLineup {
	uint32 DCHOLKBFBGI = 12;
	uint32 CEIFDIKPDAM = 7;
	repeated uint32 first_lineup = 5;
	repeated uint32 second_lineup = 6;
}
message GetChallengeRecommendLineupListScRsp {
	uint32 challenge_id = 7;
	uint32 retcode = 5;
	repeated ChallengeRecommendLineup challenge_recommend_list = 2;
}

message EquipmentRecommendInfo {
	uint32 LGIIAHIDLMG = 3;
	uint32 MDMGKHLHIIN = 7;
}

message EquipmentRecommend {
	repeated EquipmentRecommendInfo equipment_list = 13;
}

message RelicRecommendInfo {
	uint32 EHCEEPMBDDI = 8;
	uint32 FIKKGBIBCJK = 15;
	uint32 PDMGJKODFOP = 5;
}

message RelicRecommend {
	repeated RelicRecommendInfo recommend_relic_list = 3;
}

message CAGFLKCLGCH {
	repeated uint32 DBGNCIOMIEP = 9;
}

message GPCPGBHOFCF {
	repeated CAGFLKCLGCH challenge_recommend_list = 12;
}
message GetBigDataRecommendCsReq {
	BigDataRecommendType big_data_recommend_type = 7;
	uint32 equip_avatar = 3;
}
message GetBigDataRecommendScRsp {
	BigDataRecommendType big_data_recommend_type = 8;
	uint32 equip_avatar = 5;
	bool has_recommand = 4;
	uint32 retcode = 9;
	oneof FCDDBOIEOIP {
		EquipmentRecommend equipment_recommend = 10;
		RelicRecommend relic_recommend = 1;
		GPCPGBHOFCF KGHLFCEOBKK = 11;
	}
}

message KNNFPFKCABE {
	uint32 CFIPHFHOJFP = 2;
	uint32 DHJHIBCDNBA = 15;
	repeated uint32 avatar_id_list = 4;
}

message PIIIPHEFDJO {
	repeated KNNFPFKCABE APFECOOPNKN = 7;
}

message NKGHHAFANHN {
	uint32 FLEEFJLNLCH = 15;
	uint32 KICOBNPCKAE = 6;
	uint32 IIKGCJFJADF = 14;
}

message GHLEDKFIIJH {
	uint32 JICDFLIMHHD = 8;
	uint32 KICOBNPCKAE = 7;
}

message OFNGPLJKLOJ {
	repeated GHLEDKFIIJH MPMFAHLKEOB = 8;
	repeated GHLEDKFIIJH LGEJJAJPEDK = 1;
	uint32 avatar_id = 9;
	repeated NKGHHAFANHN NOBONCCPENG = 7;
	repeated GHLEDKFIIJH FBBAJBINGLB = 11;
	repeated GHLEDKFIIJH KKCMFGMHIMO = 13;
	repeated NKGHHAFANHN PDBHNHPCNNJ = 5;
}

message MKJALMKMPGL {
	repeated OFNGPLJKLOJ BFDMGINBOIB = 14;
}
message GetBigDataAllRecommendCsReq {
	BigDataRecommendType big_data_recommend_type = 6;
}
message GetBigDataAllRecommendScRsp {
	uint32 retcode = 8;
	BigDataRecommendType big_data_recommend_type = 3;
	oneof FCDDBOIEOIP {
		PIIIPHEFDJO DKLBNBDPMPO = 4;
		MKJALMKMPGL PFOPJPJKKLK = 15;
	}
}

enum CmdRedDotType {
	CmdRedDotTypeNone = 0;
	CmdGetSingleRedDotParamGroupCsReq = 5902;
	CmdUpdateRedDotDataScRsp = 5930;
	CmdGetAllRedDotDataScRsp = 5921;
	CmdUpdateRedDotDataCsReq = 5946;
	CmdGetAllRedDotDataCsReq = 5923;
	CmdGetSingleRedDotParamGroupScRsp = 5901;
}

enum OJLJHFNFDKP {
	UPDATE_REDDOT_NONE = 0;
	UPDATE_REDDOT_ADD = 1;
	UPDATE_REDDOT_REPLACE = 2;
}

message EJBIOKMOLAF {
	repeated uint32 FFBEEBKOGPN = 10;
}

message KNCHLMGILJC {
	map<uint32, EJBIOKMOLAF> MBGIJNJFHGE = 13;
	uint32 panel_id = 1;
	uint32 NOPDKLDEKKF = 7;
}
message GetAllRedDotDataCsReq {
}
message GetAllRedDotDataScRsp {
	uint32 retcode = 11;
	repeated KNCHLMGILJC IAGIBDAICHI = 1;
}
message UpdateRedDotDataCsReq {
	uint32 panel_id = 11;
	uint32 group_id = 9;
	uint32 NOPDKLDEKKF = 4;
	OJLJHFNFDKP HONEMGCFBGI = 15;
	repeated uint32 switch_list = 14;
}
message UpdateRedDotDataScRsp {
	uint32 retcode = 7;
	uint32 NOPDKLDEKKF = 1;
	uint32 group_id = 4;
	uint32 panel_id = 3;
}
message GetSingleRedDotParamGroupCsReq {
	uint32 group_id = 4;
	uint32 NOPDKLDEKKF = 6;
	uint32 panel_id = 7;
}
message GetSingleRedDotParamGroupScRsp {
	uint32 group_id = 14;
	EJBIOKMOLAF CHPJJKLGOKM = 13;
	uint32 NOPDKLDEKKF = 8;
	uint32 panel_id = 6;
	uint32 retcode = 15;
}

enum CmdRelicSmartWearType {
	CmdRelicSmartWearTypeNone = 0;
	CmdRelicSmartWearDeletePinRelicScRsp = 8263;
	CmdRelicSmartWearAddPlanCsReq = 8267;
	CmdRelicSmartWearGetPinRelicCsReq = 8270;
	CmdRelicSmartWearUpdatePlanCsReq = 8252;
	CmdRelicSmartWearAddPlanScRsp = 8269;
	CmdRelicSmartWearUpdatePlanScRsp = 8262;
	CmdRelicSmartWearUpdatePinRelicScNotify = 8254;
	CmdRelicSmartWearGetPlanCsReq = 8251;
	CmdRelicSmartWearDeletePlanScRsp = 8264;
	CmdRelicSmartWearDeletePlanCsReq = 8257;
	CmdRelicSmartWearGetPlanScRsp = 8265;
	CmdRelicSmartWearGetPinRelicScRsp = 8253;
	CmdRelicSmartWearDeletePinRelicCsReq = 8268;
	CmdRelicSmartWearUpdatePinRelicCsReq = 8259;
	CmdRelicSmartWearUpdatePinRelicScRsp = 8258;
}

enum ANCCGLMMDJJ {
	RELIC_SMART_WEAR_PLAN_TYPE_NONE = 0;
	RELIC_SMART_WEAR_PLAN_TYPE_BIG_DATA = 1;
	RELIC_SMART_WEAR_PLAN_TYPE_SYSTEM = 2;
	RELIC_SMART_WEAR_PLAN_TYPE_CUSTOM = 3;
}

message RelicSmartWearPlan {
	repeated uint32 outside_relic_list = 7;
	uint32 unique_id = 3;
	repeated uint32 inside_relic_list = 4;
	uint32 avatar_id = 14;
}
message RelicSmartWearGetPlanCsReq {
	uint32 avatar_id = 8;
}
message RelicSmartWearGetPlanScRsp {
	uint32 retcode = 14;
	repeated RelicSmartWearPlan relic_plan_list = 8;
	uint32 avatar_id = 2;
}
message RelicSmartWearAddPlanCsReq {
	RelicSmartWearPlan relic_plan = 6;
}
message RelicSmartWearAddPlanScRsp {
	RelicSmartWearPlan relic_plan = 15;
	uint32 retcode = 5;
}
message RelicSmartWearUpdatePlanCsReq {
	RelicSmartWearPlan relic_plan = 10;
}
message RelicSmartWearUpdatePlanScRsp {
	uint32 retcode = 4;
	RelicSmartWearPlan relic_plan = 1;
}
message RelicSmartWearDeletePlanCsReq {
	uint32 unique_id = 6;
}
message RelicSmartWearDeletePlanScRsp {
	uint32 unique_id = 15;
	uint32 retcode = 3;
}

message PMDJBOJKDNK {
	repeated uint32 inside_relic_list = 2;
	ANCCGLMMDJJ JCCFEACHMBP = 13;
	repeated uint32 outside_relic_list = 9;
}

message HAMMFOJBJHF {
	uint32 avatar_id = 9;
	repeated uint32 relic_ids = 4;
	PMDJBOJKDNK OODINCNJPHB = 10;
}
message RelicSmartWearGetPinRelicCsReq {
	uint32 avatar_id = 15;
}
message RelicSmartWearGetPinRelicScRsp {
	uint32 retcode = 13;
	repeated HAMMFOJBJHF FAJBODIGLEF = 9;
	uint32 avatar_id = 12;
}
message RelicSmartWearUpdatePinRelicScNotify {
	uint32 relic_unique_id = 9;
	repeated HAMMFOJBJHF NONCKFAOGJE = 12;
	repeated HAMMFOJBJHF EODJILEFGFB = 8;
}
message RelicSmartWearUpdatePinRelicCsReq {
	HAMMFOJBJHF IBFNKOACMCP = 11;
}
message RelicSmartWearUpdatePinRelicScRsp {
	HAMMFOJBJHF IBFNKOACMCP = 7;
	uint32 retcode = 6;
}
message RelicSmartWearDeletePinRelicCsReq {
	bool NFNOJDCHONJ = 5;
	uint32 avatar_id = 15;
	repeated PMDJBOJKDNK BDGJPHFDCAH = 13;
}
message RelicSmartWearDeletePinRelicScRsp {
	repeated PMDJBOJKDNK BDGJPHFDCAH = 8;
	uint32 avatar_id = 3;
	uint32 retcode = 15;
}

enum CmdReplayType {
	CmdReplayTypeNone = 0;
	CmdGetPlayerReplayInfoCsReq = 3598;
	CmdGetPlayerReplayInfoScRsp = 3553;
	CmdGetReplayTokenScRsp = 3505;
	CmdGetReplayTokenCsReq = 3510;
}
message GetReplayTokenCsReq {
	uint32 AFEHLMFIBMD = 9;
	string KIHBIGPFKKN = 11;
	uint32 stage_id = 12;
	string BBEMIDHMNLM = 10;
	uint32 CMPBKBBKAOA = 6;
	ReplayType replay_type = 7;
}
message GetReplayTokenScRsp {
	string KIHBIGPFKKN = 15;
	uint32 retcode = 11;
	uint32 stage_id = 12;
	ReplayType replay_type = 9;
	string token = 14;
}
message GetPlayerReplayInfoCsReq {
}
message GetPlayerReplayInfoScRsp {
	repeated ReplayInfo KGCFEALANKO = 4;
	uint32 retcode = 14;
}

enum CmdRndOptionType {
	CmdRndOptionTypeNone = 0;
	CmdGetRndOptionCsReq = 3410;
	CmdDailyFirstMeetPamCsReq = 3498;
	CmdDailyFirstMeetPamScRsp = 3453;
	CmdGetRndOptionScRsp = 3405;
}
message GetRndOptionCsReq {
	uint32 id = 9;
}
message GetRndOptionScRsp {
	repeated uint32 EEGEGGBDHDG = 5;
	uint32 retcode = 11;
}
message DailyFirstMeetPamCsReq {
}
message DailyFirstMeetPamScRsp {
	uint32 retcode = 14;
}

enum CmdRogueType {
	CmdRogueTypeNone = 0;
	CmdGetRogueBuffEnhanceInfoCsReq = 1854;
	CmdFinishAeonDialogueGroupCsReq = 1900;
	CmdLeaveRogueCsReq = 1897;
	CmdSyncRogueReviveInfoScNotify = 1842;
	CmdEnterRogueCsReq = 1879;
	CmdFinishAeonDialogueGroupScRsp = 1868;
	CmdTakeRogueAeonLevelRewardScRsp = 1840;
	CmdLeaveRogueScRsp = 1806;
	CmdPickRogueAvatarCsReq = 1867;
	CmdTakeRogueScoreRewardCsReq = 1874;
	CmdTakeRogueAeonLevelRewardCsReq = 1893;
	CmdEnhanceRogueBuffScRsp = 1820;
	CmdGetRogueInitialScoreScRsp = 1889;
	CmdReviveRogueAvatarScRsp = 1878;
	CmdStartRogueScRsp = 1853;
	CmdSyncRogueAeonLevelUpRewardScNotify = 1811;
	CmdQuitRogueScRsp = 1851;
	CmdReviveRogueAvatarCsReq = 1836;
	CmdSyncRogueExploreWinScNotify = 1835;
	CmdGetRogueAeonInfoCsReq = 1838;
	CmdEnableRogueTalentCsReq = 1832;
	CmdEnterRogueMapRoomScRsp = 1866;
	CmdStartRogueCsReq = 1898;
	CmdQuitRogueCsReq = 1801;
	CmdOpenRogueChestScRsp = 1804;
	CmdExchangeRogueRewardKeyCsReq = 1886;
	CmdGetRogueTalentInfoCsReq = 1865;
	CmdSyncRogueRewardInfoScNotify = 1850;
	CmdOpenRogueChestCsReq = 1857;
	CmdEnterRogueScRsp = 1802;
	CmdSyncRogueVirtualItemInfoScNotify = 1877;
	CmdSyncRogueAeonScNotify = 1899;
	CmdGetRogueScoreRewardInfoScRsp = 1856;
	CmdEnterRogueMapRoomCsReq = 1860;
	CmdGetRogueBuffEnhanceInfoScRsp = 1862;
	CmdGetRogueScoreRewardInfoCsReq = 1859;
	CmdSyncRogueFinishScNotify = 1863;
	CmdExchangeRogueRewardKeyScRsp = 1812;
	CmdGetRogueTalentInfoScRsp = 1819;
	CmdSyncRogueAreaUnlockScNotify = 1844;
	CmdEnableRogueTalentScRsp = 1834;
	CmdEnhanceRogueBuffCsReq = 1809;
	CmdGetRogueAeonInfoScRsp = 1887;
	CmdSyncRogueStatusScNotify = 1870;
	CmdTakeRogueScoreRewardScRsp = 1890;
	CmdSyncRoguePickAvatarInfoScNotify = 1861;
	CmdSyncRogueMapRoomScNotify = 1808;
	CmdGetRogueInitialScoreCsReq = 1828;
	CmdSyncRogueSeasonFinishScNotify = 1837;
	CmdPickRogueAvatarScRsp = 1872;
	CmdGetRogueInfoCsReq = 1810;
	CmdGetRogueInfoScRsp = 1805;
	CmdSyncRogueGetItemScNotify = 1848;
}

enum RogueStatus {
	ROGUE_STATUS_NONE = 0;
	ROGUE_STATUS_DOING = 1;
	ROGUE_STATUS_PENDING = 2;
	ROGUE_STATUS_ENDLESS = 3;
	ROGUE_STATUS_FINISH = 4;
}

enum RogueRoomStatus {
	ROGUE_ROOM_STATUS_NONE = 0;
	ROGUE_ROOM_STATUS_LOCK = 1;
	ROGUE_ROOM_STATUS_UNLOCK = 2;
	ROGUE_ROOM_STATUS_PLAY = 3;
	ROGUE_ROOM_STATUS_FINISH = 4;
}

enum RogueAreaStatus {
	ROGUE_AREA_STATUS_LOCK = 0;
	ROGUE_AREA_STATUS_UNLOCK = 1;
	ROGUE_AREA_STATUS_FIRST_PASS = 2;
	ROGUE_AREA_STATUS_CLOSE = 3;
}

enum RogueBuffSourceType {
	ROGUE_BUFF_SOURCE_TYPE_NONE = 0;
	ROGUE_BUFF_SOURCE_TYPE_SELECT = 1;
	ROGUE_BUFF_SOURCE_TYPE_ENHANCE = 2;
	ROGUE_BUFF_SOURCE_TYPE_MIRACLE = 3;
	ROGUE_BUFF_SOURCE_TYPE_DIALOGUE = 4;
	ROGUE_BUFF_SOURCE_TYPE_BONUS = 5;
	ROGUE_BUFF_SOURCE_TYPE_MAZE_SKILL = 6;
	ROGUE_BUFF_SOURCE_TYPE_SHOP = 7;
	ROGUE_BUFF_SOURCE_TYPE_LEVEL_MECHANISM = 8;
	ROGUE_BUFF_SOURCE_TYPE_ENDLESS_LEVEL_START = 9;
}

enum RogueMiracleSourceType {
	ROGUE_MIRACLE_SOURCE_TYPE_NONE = 0;
	ROGUE_MIRACLE_SOURCE_TYPE_SELECT = 1;
	ROGUE_MIRACLE_SOURCE_TYPE_DIALOGUE = 2;
	ROGUE_MIRACLE_SOURCE_TYPE_BONUS = 3;
	ROGUE_MIRACLE_SOURCE_TYPE_USE = 4;
	ROGUE_MIRACLE_SOURCE_TYPE_RESET = 5;
	ROGUE_MIRACLE_SOURCE_TYPE_REPLACE = 6;
	ROGUE_MIRACLE_SOURCE_TYPE_TRADE = 7;
	ROGUE_MIRACLE_SOURCE_TYPE_GET = 8;
	ROGUE_MIRACLE_SOURCE_TYPE_SHOP = 9;
	ROGUE_MIRACLE_SOURCE_TYPE_MAZE_SKILL = 10;
	ROGUE_MIRACLE_SOURCE_TYPE_LEVEL_MECHANISM = 11;
	ROGUE_MIRACLE_SOURCE_TYPE_ENDLESS_LEVEL_START = 12;
}

enum RogueDialogueResult {
	ROGUE_DIALOGUE_RESULT_SUCC = 0;
	ROGUE_DIALOGUE_RESULT_FAIL = 1;
}

message RogueBuff {
	uint32 buff_id = 8;
	uint32 level = 12;
}

message RogueBuffList {
	repeated RogueBuff buff_list = 12;
}

message RogueRoom {
	uint32 site_id = 13;
	RogueRoomStatus BEEEBOIOJIF = 11;
	uint32 room_id = 9;
	RogueRoomStatus cur_status = 7;
	uint32 IMIMGFAAGHM = 6;
}

message RogueMapInfo {
	repeated RogueRoom room_list = 2;
	uint32 cur_room_id = 12;
	uint32 cur_site_id = 11;
	uint32 map_id = 1;
	uint32 area_id = 8;
}

message RogueArea {
	RogueStatus MKEGBHJLJNH = 2;
	RogueAreaStatus area_status = 6;
	uint32 GMPIIAEGGEK = 11;
	uint32 map_id = 4;
	bool has_taken_reward = 7;
	uint32 area_id = 8;
}

message OMOGAIEOFAH {
	uint32 SourceType = 5;
	uint32 HandbookUnlockBuffIdList = 11;
	uint32 SelectBuffList = 8;
	uint32 RollBuffMaxCount = 14;
	repeated uint32 CanRolls = 13;
	bool can_roll = 12;
	RogueCommonBuffSelectSourceType modifier_source_type = 3;
	uint32 IPODNBLJPOL = 1;
	uint32 FirstBuffTypeList = 6;
	uint32 SourceCurCount = 2;
	ItemCostData SourceTotalCount = 4;
	repeated RogueBuff maze_buff_list = 10;
	uint32 SourceHintId = 7;
}

message KFEJFBBGIAD {
	repeated RogueBuff KMPMDLDHABN = 4;
	RogueBuff get_buff_list = 8;
}

message IGJENCIKLOF {
	uint32 select_hint_id = 6;
	repeated RogueBuff IHGMPJNNMKI = 3;
	repeated RogueBuff CLPLEFHHAFB = 8;
}

message RogueBuffEnhanceInfo {
	uint32 buff_id = 8;
	float FAMCMAGFKCL = 13;
	ItemCostData cost_data = 6;
}

message RogueBuffEnhanceInfoList {
	repeated RogueBuffEnhanceInfo enhance_info_list = 15;
}

message RogueMiracle {
	uint32 cur_times = 5;
	uint32 miracle_id = 11;
	uint32 durability = 12;
	map<uint32, uint32> GMAFEJEJBHO = 13;
	uint32 max_times = 14;
}

message OLFPCKAGKAK {
	repeated RogueMiracle miracle_list = 2;
}

message BFLJDBHBMNP {
	OLFPCKAGKAK game_miracle_info = 7;
	repeated uint32 miracle_handbook_list = 2;
}

message KEIONFFFLCO {
	repeated uint32 CMAGGNFDKAG = 8;
}

message FLECFLLDNFP {
	repeated uint32 bonus_id_list = 1;
}

message NGFFCEICACD {
	uint32 EBNPOCIDPKE = 12;
	oneof MICMCKAHMPL {
		ItemList JDIJKEGCIBP = 14;
		RogueBuffList CNDGJJLJDOF = 8;
	}
}

message RogueReviveInfo {
	ItemCostData rogue_revive_cost = 15;
}

message JHEELOAGMIG {
	uint32 NIDFLBKPOEB = 13;
}

message PBEKDHCLBFB {
	uint32 GFDBGCOLKCP = 7;
	uint32 IPODNBLJPOL = 15;
	uint32 HGBLOMELBLE = 9;
	uint32 JKJMCFAGOCF = 11;
}

message RogueInfo {
	RogueCurrentInfo rogue_current_info = 285;
	RogueGetInfo rogue_get_info = 1559;
}

message RogueGetInfo {
	RogueAreaInfo rogue_area_info = 13;
	RogueAeonInfo rogue_aeon_info = 14;
	RogueScoreRewardInfo rogue_score_reward_info = 10;
	RogueSeasonInfo rogue_season_info = 7;
	RogueGetVirtualItemInfo rogue_virtual_item_info = 6;
}

message RogueCurrentInfo {
	bool is_explore_win = 1;
	RogueModuleInfo module_info = 4;
	RogueCommonPendingAction pending_action = 15;
	GameAeonInfo rogue_aeon_info = 7;
	GameMiracleInfo game_miracle_info = 11;
	RogueBuffInfo rogue_buff_info = 2;
	RogueVirtualItem virtual_item_info = 14;
	RogueLineupInfo rogue_lineup_info = 5;
	RogueStatus status = 13;
	RogueMapInfo rogue_map = 10;
}

message RogueSeasonInfo {
	int64 end_time = 11;
	int64 begin_time = 12;
	uint32 season = 13;
}

message RogueAreaInfo {
	repeated RogueArea rogue_area_list = 12;
}

message RogueAeonInfo {
	bool is_unlocked = 14;
	uint32 unlocked_aeon_enhance_num = 3;
	uint32 unlocked_aeon_num = 8;
	repeated uint32 aeon_id_list = 2;
}

message RogueGetVirtualItemInfo {
	uint32 IFEHBIMEMEC = 1;
	uint32 BILEOOPHJEF = 15;
}

message RogueBuffInfo {
	repeated RogueBuff maze_buff_list = 5;
}

message GameMiracleInfo {
	OLFPCKAGKAK game_miracle_info = 13;
}

message RogueLineupInfo {
	repeated uint32 base_avatar_id_list = 6;
	repeated uint32 MANKKFPBFCB = 1;
	RogueReviveInfo revive_info = 7;
	repeated uint32 trial_avatar_id_list = 12;
}

message HDJFLBMLLDP {
	FLECFLLDNFP bonus_select_info = 8;
}

message GameAeonInfo {
	bool is_unlocked = 4;
	uint32 game_aeon_id = 9;
	uint32 unlocked_aeon_enhance_num = 8;
}

message RogueModuleInfo {
	repeated uint32 module_id_list = 9;
}

message NIKKCCAKNNP {
	bool is_unlocked = 8;
	uint32 game_aeon_id = 7;
	uint32 unlocked_aeon_enhance_num = 12;
	repeated uint32 aeon_id_list = 13;
	uint32 unlocked_aeon_num = 3;
}

message MNCDPEPCFGC {
	uint32 KOBFCOMHGCE = 4;
	uint32 score_id = 9;
	uint32 FJJDFPKGOPC = 14;
}

message AOJOFBBNEPA {
	float DPFBDJMNCEO = 6;
	repeated MNCDPEPCFGC DCMHGOKCINF = 12;
	uint32 NPJEECEDPOK = 15;
}

message FGKCAMBIAHB {
	AvatarType avatar_type = 9;
	uint32 level = 15;
	uint32 id = 11;
	uint32 slot = 2;
}

message GKJFBBHHLAC {
	repeated RogueBuff buff_list = 1;
	repeated uint32 miracle_list = 6;
	repeated FGKCAMBIAHB avatar_list = 3;
}

message RogueFinishInfo {
	uint32 MNBIEBOLCCN = 5;
	uint32 LMMEANJPEND = 321;
	uint32 BIMDLGHKAOI = 8;
	uint32 IFEHBIMEMEC = 14;
	uint32 score_id = 13;
	uint32 DEDLGFJAEAM = 9;
	bool is_win = 7;
	GKJFBBHHLAC record_info = 3;
	RogueScoreRewardInfo AGPPEPMGFMF = 2;
	uint32 area_id = 1286;
	ItemList HLOBJOOEBOD = 1;
}

message RogueScoreRewardInfo {
	repeated uint32 CILNJIDIDHL = 1;
	bool PJHLOCDBAEH = 10;
	uint32 HDLADIBHBHH = 7;
	bool JOMNPADAGGK = 14;
	int64 HOEPOJNNFCI = 15;
	int64 CIGBOGHAFOF = 5;
	uint32 HHJPBLEKAPN = 4;
}

message EACOFHBFMLB {
	uint32 aeon_id = 9;
	uint32 exp = 12;
	uint32 JGMIPMDPPIJ = 10;
	uint32 level = 13;
}

message LLOCDPPMJNN {
	uint32 arg_id = 7;
	bool is_valid = 8;
	uint32 rogue_dialogue_event_id = 13;
	float ACDOPCBMPNL = 10;
	int32 display_int_value = 1;
}

message LANLCCOBDNE {
	uint32 game_mode_type = 7;
	uint32 talk_dialogue_id = 15;
	repeated LLOCDPPMJNN dialogue_event_param_list = 8;
	uint32 aeon_talk_id = 2;
	uint32 event_unique_id = 4;
	repeated uint32 EOHEEIGOBKD = 14;
}

message GGHFIJKPFLN {
	repeated uint32 JJEALOEMMKK = 1;
	RogueDialogueResult BPLMPMEFEAM = 3;
	oneof MICMCKAHMPL {
		ItemList JDIJKEGCIBP = 15;
	}
}
message GetRogueInfoCsReq {
}
message GetRogueInfoScRsp {
	RogueInfo rogue_game_info = 7;
	uint32 retcode = 12;
}
message StartRogueCsReq {
	uint32 aeon_id = 7;
	repeated uint32 base_avatar_id_list = 12;
	repeated uint32 trial_avatar_id_list = 1;
	uint32 area_id = 9;
	repeated uint32 HJGNDHLMMIB = 13;
}
message StartRogueScRsp {
	RogueMapRotateInfo rotate_info = 7;
	RogueInfo rogue_game_info = 1;
	SceneInfo scene = 6;
	uint32 retcode = 5;
	LineupInfo lineup = 15;
}
message EnterRogueCsReq {
	uint32 area_id = 9;
}
message EnterRogueScRsp {
	RogueMapRotateInfo rotate_info = 7;
	SceneInfo scene = 5;
	LineupInfo lineup = 6;
	uint32 retcode = 1;
	RogueInfo rogue_game_info = 15;
}
message LeaveRogueCsReq {
}
message LeaveRogueScRsp {
	SceneInfo scene = 7;
	uint32 retcode = 8;
	RogueMapRotateInfo rotate_info = 14;
	RogueInfo rogue_game_info = 11;
	LineupInfo lineup = 5;
}
message SyncRogueFinishScNotify {
	RogueFinishInfo rogue_finish_info = 1;
}
message PickRogueAvatarCsReq {
	repeated uint32 trial_avatar_id_list = 6;
	repeated uint32 base_avatar_id_list = 5;
	uint32 prop_entity_id = 12;
}
message PickRogueAvatarScRsp {
	repeated uint32 trial_avatar_id_list = 10;
	repeated uint32 base_avatar_id_list = 7;
	uint32 retcode = 4;
}
message ReviveRogueAvatarCsReq {
	repeated uint32 trial_avatar_id_list = 10;
	uint32 interacted_prop_entity_id = 7;
	repeated uint32 base_avatar_id_list = 1;
}
message ReviveRogueAvatarScRsp {
	uint32 retcode = 12;
	repeated uint32 trial_avatar_id_list = 11;
	RogueReviveInfo revive_info = 1;
	repeated uint32 base_avatar_id_list = 9;
}
message SyncRogueReviveInfoScNotify {
	RogueReviveInfo revive_info = 8;
}
message GetRogueBuffEnhanceInfoCsReq {
}
message GetRogueBuffEnhanceInfoScRsp {
	uint32 retcode = 1;
	RogueBuffEnhanceInfoList FHLOMGDANJM = 2;
}
message EnhanceRogueBuffCsReq {
	uint32 maze_buff_id = 12;
}
message EnhanceRogueBuffScRsp {
	uint32 retcode = 7;
	RogueBuff ANAGCODDMOM = 15;
	bool FGEFCEFKHMH = 9;
}
message QuitRogueCsReq {
	uint32 area_id = 11;
}
message QuitRogueScRsp {
	uint32 retcode = 1;
	RogueInfo rogue_game_info = 11;
}
message SyncRogueExploreWinScNotify {
	bool is_explore_win = 12;
}
message SyncRogueSeasonFinishScNotify {
	RogueFinishInfo rogue_finish_info = 13;
	RogueScoreRewardInfo rogue_score_reward_info = 1;
	LineupInfo lineup = 2;
	SceneInfo scene = 9;
	bool NIOLDFFFELN = 6;
}
message EnterRogueMapRoomCsReq {
	uint32 site_id = 13;
	uint32 room_id = 7;
}
message EnterRogueMapRoomScRsp {
	uint32 cur_site_id = 6;
	RogueMapRotateInfo rotate_info = 10;
	LineupInfo lineup = 3;
	uint32 retcode = 1;
	SceneInfo scene = 14;
}
message SyncRogueMapRoomScNotify {
	RogueRoom KPEKCLBEPGB = 11;
	uint32 map_id = 2;
}
message OpenRogueChestCsReq {
	uint32 interacted_prop_entity_id = 6;
	bool EIDDMGHLPBP = 10;
}
message OpenRogueChestScRsp {
	ItemList reward = 12;
	uint32 retcode = 3;
	ItemList drop_data = 4;
	MBKOCMMICPG KJCHGEHDLNO = 14;
}
message ExchangeRogueRewardKeyCsReq {
	uint32 count = 14;
}
message ExchangeRogueRewardKeyScRsp {
	uint32 count = 8;
	uint32 retcode = 5;
}
message SyncRogueAreaUnlockScNotify {
	uint32 area_id = 12;
}
message SyncRogueGetItemScNotify {
	ItemList IODFGFOMGOD = 13;
	ItemList get_item_list = 3;
}
message TakeRogueAeonLevelRewardCsReq {
	uint32 level = 13;
	uint32 aeon_id = 8;
}
message TakeRogueAeonLevelRewardScRsp {
	uint32 level = 5;
	uint32 retcode = 3;
	ItemList reward = 9;
	uint32 aeon_id = 13;
}
message SyncRogueAeonLevelUpRewardScNotify {
	ItemList reward = 5;
	uint32 aeon_id = 13;
	uint32 level = 1;
}
message GetRogueScoreRewardInfoCsReq {
}
message GetRogueScoreRewardInfoScRsp {
	uint32 retcode = 9;
	RogueScoreRewardInfo HNDLHICDNPC = 10;
}
message TakeRogueScoreRewardCsReq {
	uint32 HHJPBLEKAPN = 1;
	repeated uint32 LMMFPCOKHEE = 15;
}
message TakeRogueScoreRewardScRsp {
	uint32 HHJPBLEKAPN = 11;
	RogueScoreRewardInfo rogue_score_reward_info = 5;
	uint32 retcode = 9;
	ItemList reward = 6;
}
message GetRogueInitialScoreCsReq {
}
message GetRogueInitialScoreScRsp {
	RogueScoreRewardInfo rogue_score_reward_info = 1;
	uint32 retcode = 8;
}
message GetRogueAeonInfoCsReq {
}
message GetRogueAeonInfoScRsp {
	uint32 retcode = 15;
	repeated EACOFHBFMLB BELOFMFHFDK = 2;
}
message FinishAeonDialogueGroupCsReq {
	uint32 aeon_id = 6;
}
message FinishAeonDialogueGroupScRsp {
	uint32 retcode = 14;
	ItemList reward = 1;
	EACOFHBFMLB rogue_aeon_info = 8;
}
message GetRogueTalentInfoCsReq {
}
message GetRogueTalentInfoScRsp {
	RogueTalentInfoList talent_info_list = 14;
	uint32 retcode = 15;
}
message EnableRogueTalentCsReq {
	uint32 talent_id = 4;
}
message EnableRogueTalentScRsp {
	uint32 retcode = 2;
	RogueTalentInfoList talent_info_list = 1;
}
message SyncRogueVirtualItemInfoScNotify {
	PBEKDHCLBFB rogue_virtual_item_info = 8;
}
message SyncRogueStatusScNotify {
	bool JIENHHAHFGI = 15;
	RogueStatus status = 2;
}
message SyncRogueRewardInfoScNotify {
	RogueScoreRewardInfo rogue_score_reward_info = 13;
}
message SyncRoguePickAvatarInfoScNotify {
	repeated uint32 trial_avatar_id_list = 5;
	repeated uint32 base_avatar_id_list = 4;
}
message SyncRogueAeonScNotify {
	NIKKCCAKNNP GCJOGFLGBBH = 9;
}

enum CmdRogueArcadeType {
	CmdRogueArcadeTypeNone = 0;
	CmdRogueArcadeRestartScRsp = 7651;
	CmdRogueArcadeGetInfoCsReq = 7678;
	CmdRogueArcadeStartScRsp = 7671;
	CmdRogueArcadeLeaveScRsp = 7680;
	CmdRogueArcadeLeaveCsReq = 7696;
	CmdRogueArcadeStartCsReq = 7673;
	CmdRogueArcadeGetInfoScRsp = 7677;
	CmdRogueArcadeRestartCsReq = 7652;
}

message LLPNBNEJKII {
	RogueMapRotateInfo rotate_info = 6;
	LineupInfo lineup = 1;
	SceneInfo scene = 12;
}
message RogueArcadeStartCsReq {
	repeated uint32 base_avatar_id_list = 15;
	uint32 room_id = 10;
}
message RogueArcadeStartScRsp {
	LLPNBNEJKII rogue_tourn_cur_scene_info = 3;
	uint32 room_id = 5;
	uint32 retcode = 15;
}
message RogueArcadeLeaveCsReq {
}
message RogueArcadeLeaveScRsp {
	LLPNBNEJKII rogue_tourn_cur_scene_info = 8;
	uint32 retcode = 12;
}
message RogueArcadeRestartCsReq {
}
message RogueArcadeRestartScRsp {
	uint32 retcode = 8;
	LLPNBNEJKII rogue_tourn_cur_scene_info = 6;
}
message RogueArcadeGetInfoCsReq {
}
message RogueArcadeGetInfoScRsp {
	uint32 retcode = 11;
	uint32 room_id = 7;
}

enum CmdRogueCommonType {
	CmdRogueCommonTypeNone = 0;
	CmdUpdateRogueAdventureRoomScoreScRsp = 5629;
	CmdGetRogueAdventureRoomInfoScRsp = 5663;
	CmdGetRogueExhibitionCsReq = 5630;
	CmdGetRogueCollectionCsReq = 5693;
	CmdGetRogueExhibitionScRsp = 5611;
	CmdBuyRogueShopMiracleCsReq = 5606;
	CmdGetRogueShopMiracleInfoScRsp = 5679;
	CmdRogueShopBeginBattleCsReq = 5631;
	CmdSetRogueCollectionCsReq = 5627;
	CmdGetRogueShopBuffInfoScRsp = 5697;
	CmdSyncRogueCommonVirtualItemInfoScNotify = 5671;
	CmdGetRogueCommonDialogueDataCsReq = 5612;
	CmdSyncRogueAdventureRoomInfoScNotify = 5610;
	CmdSelectRogueCommonDialogueOptionCsReq = 5623;
	CmdGetRogueCollectionScRsp = 5640;
	CmdBuyRogueShopMiracleScRsp = 5641;
	CmdTakeRogueEventHandbookRewardCsReq = 5689;
	CmdTakeRogueEventHandbookRewardScRsp = 5608;
	CmdGetRogueShopFormulaInfoCsReq = 5632;
	CmdGetRogueHandbookDataCsReq = 5688;
	CmdTakeRogueMiracleHandbookRewardCsReq = 5666;
	CmdRogueWorkbenchHandleFuncCsReq = 5644;
	CmdSyncRogueCommonActionResultScNotify = 5613;
	CmdGetRogueShopBuffInfoCsReq = 5602;
	CmdSyncRogueCommonDialogueDataScNotify = 5649;
	CmdSyncRogueCommonPendingActionScNotify = 5646;
	CmdGetRogueShopFormulaInfoScRsp = 5634;
	CmdBuyRogueShopFormulaScRsp = 5633;
	CmdRogueDebugReplaySaveScNotify = 5619;
	CmdRogueWorkbenchGetInfoScRsp = 5699;
	CmdGetRogueAdventureRoomInfoCsReq = 5626;
	CmdEnhanceCommonRogueBuffCsReq = 5654;
	CmdRogueNpcDisappearScRsp = 5616;
	CmdSetRogueCollectionScRsp = 5680;
	CmdGetEnhanceCommonRogueBuffInfoCsReq = 5674;
	CmdBuyRogueShopBuffCsReq = 5655;
	CmdPrepareRogueAdventureRoomCsReq = 5605;
	CmdUpdateRogueAdventureRoomScoreCsReq = 5685;
	CmdHandleRogueCommonPendingActionCsReq = 5683;
	CmdBuyRogueShopBuffScRsp = 5607;
	CmdSyncRogueCommonDialogueOptionFinishScNotify = 5696;
	CmdEnhanceCommonRogueBuffScRsp = 5662;
	CmdRogueWorkbenchHandleFuncScRsp = 5648;
	CmdGetRogueShopMiracleInfoCsReq = 5653;
	CmdHandleRogueCommonPendingActionScRsp = 5603;
	CmdFinishRogueCommonDialogueCsReq = 5695;
	CmdRogueNpcDisappearCsReq = 5639;
	CmdRogueGetGambleInfoScRsp = 5684;
	CmdStopRogueAdventureRoomScRsp = 5620;
	CmdRogueGetGambleInfoCsReq = 5621;
	CmdRogueWorkbenchGetInfoCsReq = 5622;
	CmdTakeRogueMiracleHandbookRewardScRsp = 5628;
	CmdRogueDoGambleCsReq = 5638;
	CmdPrepareRogueAdventureRoomScRsp = 5698;
	CmdFinishRogueCommonDialogueScRsp = 5618;
	CmdRogueDoGambleScRsp = 5687;
	CmdGetEnhanceCommonRogueBuffInfoScRsp = 5690;
	CmdStopRogueAdventureRoomCsReq = 5609;
	CmdBuyRogueShopFormulaCsReq = 5643;
	CmdGetRogueCommonDialogueDataScRsp = 5664;
	CmdCommonRogueUpdateScNotify = 5686;
	CmdSelectRogueCommonDialogueOptionScRsp = 5614;
	CmdSetRogueExhibitionScRsp = 5656;
	CmdSetRogueExhibitionCsReq = 5659;
	CmdSyncRogueHandbookDataUpdateScNotify = 5660;
	CmdCommonRogueQueryScRsp = 5604;
	CmdCommonRogueQueryCsReq = 5657;
	CmdRogueShopBeginBattleScRsp = 5691;
	CmdGetRogueHandbookDataScRsp = 5615;
}

enum RogueAdventureRoomStatus {
	ROGUE_ADVENTURE_ROOM_STATUS_NONE = 0;
	ROGUE_ADVENTURE_ROOM_STATUS_PREPARE = 1;
	ROGUE_ADVENTURE_ROOM_STATUS_STARTED = 2;
	ROGUE_ADVENTURE_ROOM_STATUS_STOPPED = 3;
}

enum RogueCommonBuffSelectSourceType {
	ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_NONE = 0;
	ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_DICE_ROLL = 1;
	ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_AEON = 2;
	ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_BOARD_EVENT = 3;
	ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_LEVEL_MECHANISM = 4;
}

enum RogueUnlockFunctionType {
	ROGUE_UNLOCK_FUNCTION_TYPE_MIRACLE = 0;
	ROGUE_UNLOCK_FUNCTION_TYPE_SHOW_HINT = 1;
	ROGUE_UNLOCK_FUNCTION_TYPE_COSMOS_BAN_AEON = 2;
	ROGUE_UNLOCK_FUNTION_TYPE_EXHIBITION = 3;
	ROGUE_UNLOCK_FUNTION_TYPE_COLLECTION = 4;
	ROGUE_UNLOCK_FUNTION_TYPE_TOURN_GOD_MODE = 5;
}

enum RogueCommonMiracleSelectSourceType {
	ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_NONE = 0;
	ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_DICE_ROLL = 1;
	ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_AEON = 2;
	ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_BOARD_EVENT = 3;
	ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_LEVEL_MECHANISM = 4;
}

enum RogueCommonBuffDisplayType {
	ROGUE_COMMON_BUFF_DISPLAY_TYPE_NONE = 0;
	ROGUE_COMMON_BUFF_DISPLAY_TYPE_ADD = 1;
	ROGUE_COMMON_BUFF_DISPLAY_TYPE_REMOVE = 2;
}

enum RogueCommonMiracleDisplayType {
	ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_NONE = 0;
	ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_ADD = 1;
	ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_REMOVE = 2;
	ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_REPAIR = 3;
}

enum RogueCommonItemDisplayType {
	ROGUE_COMMON_ITEM_DISPLAY_TYPE_NONE = 0;
	ROGUE_COMMON_ITEM_DISPLAY_TYPE_ADD = 1;
	ROGUE_COMMON_ITEM_DISPLAY_TYPE_REMOVE = 2;
}

enum RogueCommonActionResultDisplayType {
	ROGUE_COMMON_ACTION_RESULT_DISPLAY_TYPE_NONE = 0;
	ROGUE_COMMON_ACTION_RESULT_DISPLAY_TYPE_SINGLE = 1;
	ROGUE_COMMON_ACTION_RESULT_DISPLAY_TYPE_MULTI = 2;
}

enum RogueCommonActionResultSourceType {
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_NONE = 0;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_SELECT = 1;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_ENHANCE = 2;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MIRACLE = 3;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_DIALOGUE = 4;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BONUS = 5;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_SHOP = 6;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_DICE = 7;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_AEON = 8;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BOARD_EVENT = 9;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAZE_SKILL = 10;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_LEVEL_MECHANISM = 11;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF = 12;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_REFORGE = 13;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE = 14;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_REFORGE = 15;
}

enum NDKLJJIIMGM {
	kTitanBlessSelectNone = 0;
	kSelectTitanBlessType = 1;
	kSelectTitanBlessEnhance = 2;
}

enum RogueTalentStatus {
	ROGUE_TALENT_STATUS_LOCK = 0;
	ROGUE_TALENT_STATUS_UNLOCK = 1;
	ROGUE_TALENT_STATUS_ENABLE = 2;
}

enum RogueCollectionExhibitionOperateType {
	ROGUE_COLLECTION_OPERATE_NONE = 0;
	ROGUE_COLLECTION_OPERATE_SET = 1;
	ROGUE_COLLECTION_OPERATE_UNSET = 2;
}

enum RogueBoothStatus {
	ROGUE_BOOTH_NONE = 0;
	ROGUE_BOOTH_EMPTY = 1;
	ROGUE_BOOTH_DISPLAY = 2;
}

enum RogueCollectionStatus {
	ROGUE_COLLECTION_NONE = 0;
	ROGUE_COLLECTION_UNLOCKED = 1;
	ROGUE_COLLECTION_DISPLAY = 2;
}

enum RogueExhibitionStatus {
	ROGUE_EXHIBITION_NONE = 0;
	ROGUE_EXHIBITION_UNLOCKED = 1;
	ROGUE_EXHIBITION_DISPLAY = 2;
}

message RogueCommonBuff {
	uint32 buff_level = 8;
	uint32 buff_id = 4;
}

message ChessRogueBuff {
	repeated RogueCommonBuff buff_list = 14;
}

message RogueCommonBuffSelectInfo {
	repeated uint32 CertainSelectBuffId = 2;
	uint32 SourceType = 5;
	uint32 HandbookUnlockBuffIdList = 1;
	ItemCostData SourceTotalCount = 4;
	uint32 FirstBuffTypeList = 8;
	repeated uint32 CanRolls = 10;
	uint32 SourceHintId = 7;
	bool can_roll = 13;
	uint32 SourceCurCount = 3;
	uint32 SelectBuffList = 12;
	uint32 RollBuffMaxCount = 15;
	repeated RogueCommonBuff RollBuffCostData = 9;
	RogueCommonBuffSelectSourceType modifier_source_type = 11;
}

message RogueBuffSelectResult {
	uint32 buff_select_id = 5;
}

message RogueBuffSelectCallback {
}

message RogueBuffRerollResult {
}

message RogueBuffRerollCallback {
	RogueCommonBuffSelectInfo buff_select_info = 7;
}

message ChessRogueBuffEnhanceInfo {
	uint32 buff_id = 11;
	ItemCostData cost_data = 13;
}

message ChessRogueBuffEnhanceList {
	repeated ChessRogueBuffEnhanceInfo enhance_info_list = 8;
}

message INEMPCAKNNC {
	uint32 select_hint_id = 6;
	repeated RogueCommonBuff IHGMPJNNMKI = 5;
	repeated RogueCommonBuff CLPLEFHHAFB = 14;
}

message LEFCOMGMPCL {
	repeated RogueCommonBuff IHGMPJNNMKI = 10;
	uint32 select_hint_id = 14;
}

message PBMAKLNJEKO {
	uint32 LJEJKCCBCHA = 1;
}

message FKDBIHNPCHE {
}

message IPGKAGFFBHF {
	repeated RogueCommonBuff DLFMGKPGMHL = 1;
	uint32 select_hint_id = 12;
}

message OKEFIDDNLKG {
	uint32 buff_select_id = 4;
}

message DLHPDALGDEH {
}

message RogueCommonBuffReforgeSelectInfo {
	uint32 select_hint_id = 11;
	repeated RogueCommonBuff RollBuffCostData = 1;
}

message RogueBuffReforgeSelectResult {
	uint32 buff_select_id = 13;
}

message RogueBuffReforgeSelectCallback {
}

message ChessRogueBuffInfo {
	ChessRogueBuff chess_rogue_buff_info = 12;
}

message GameRogueMiracle {
	uint32 durability = 4;
	uint32 cur_times = 5;
	map<uint32, uint32> GMAFEJEJBHO = 9;
	uint32 miracle_id = 10;
}

message LAJBHGHNBAC {
	uint32 BEMCEEDABFD = 6;
	GameRogueMiracle JALAMOPLDHO = 9;
	bool GANHKLNPAPI = 15;
}

message RogueCommonMiracle {
	GameRogueMiracle miracle_info = 3;
}

message RogueCommonRemoveMiracle {
	uint32 miracle_id = 4;
}

message IBIBPOOPDEN {
	uint32 LGJFNAIAGLD = 15;
	GameRogueMiracle miracle_info = 2;
	uint32 FKPIHAAHHBI = 14;
}

message MAAAAGPJJFE {
	GameRogueMiracle miracle_info = 8;
}

message PBALOEJCGFN {
	uint32 BEMCEEDABFD = 4;
	GameRogueMiracle JALAMOPLDHO = 12;
}

message HBLNHGANBAB {
	GameRogueMiracle miracle_info = 1;
}

message ChessRogueMiracle {
	repeated GameRogueMiracle miracle_list = 12;
}

message RogueMiracleSelectInfo {
	uint32 select_hint_id = 7;
	repeated uint32 select_miracle_list = 12;
	bool APIKLEGGDHM = 9;
	repeated uint32 miracle_handbook_list = 10;
	uint32 BMFCBCMCLAF = 15;
	uint32 OOOECPAACCK = 4;
}

message MPPHHNAEEDK {
	uint32 CGHLHFNLADN = 7;
}

message CFFOCCHBAMH {
}

message JFPFDJPPOAG {
}

message HONKBMJPJAA {
	RogueMiracleSelectInfo miracle_select_info = 7;
}

message ANMCAIMELCA {
	repeated uint32 CMAGGNFDKAG = 1;
}

message GABBEHOIPJC {
	uint32 select_hint_id = 14;
	repeated uint32 DCJEGGJPCDF = 6;
}

message NALELIGHDAA {
	uint32 ABMAMCFPCCI = 8;
}

message PAOCONGELJK {
}

message MLKICCAELKE {
	repeated uint32 ANBPNIHMKAH = 10;
	uint32 select_hint_id = 8;
}

message PKODMMPHIBC {
	uint32 JIBHLJNEICM = 2;
}

message BLFJBKBHJIL {
}

message EAKECFAPPKD {
	repeated uint32 FIKENBEONDJ = 4;
	uint32 select_hint_id = 3;
}

message NHCKHPLKLIO {
	uint32 IBEMOJGALLK = 7;
}

message OMJFMBJMFMC {
}

message ELDAFCNMFBF {
	uint32 select_hint_id = 1;
	repeated uint32 MDPDADOOOBN = 10;
}

message LHJPIKEKPGH {
	uint32 GAKJOLGDBBD = 1;
}

message MOIKNHHCABH {
}

message RogueComposeMiracleSelectInfo {
	repeated uint32 JLHFOJODOKG = 6;
	uint32 select_hint_id = 1;
}

message IMCBIIGOKPM {
	uint32 CGHLHFNLADN = 3;
}

message FHIKPLAIOEI {
}

message RogueHexAvatarSelectInfo {
	uint32 select_hint_id = 15;
	repeated uint32 JLHFOJODOKG = 10;
}

message LKMKHACMAPC {
	uint32 CGHLHFNLADN = 14;
}

message NOCOCFHOAJC {
}

message IMLBIBJKPDB {
	uint32 EIDNIGDDOHP = 10;
}

message JCAHMIOOLDB {
}

message ChessRogueMiracleInfo {
	ChessRogueMiracle chess_rogue_miracle_info = 11;
}

message RogueBonusSelectInfo {
	repeated uint32 bonus_id_list = 14;
}

message RogueVirtualItem {
	uint32 AMNKMBMHKDF = 3;
	uint32 BPJOAPFAFKK = 13;
	uint32 DAFALAOAOOI = 14;
	uint32 rogue_money = 6;
}

message RogueCommonMoney {
	uint32 display_type = 3;
	uint32 num = 14;
}

message MDGJIKLJDDE {
	AvatarType avatar_type = 4;
	uint32 avatar_id = 15;
}

message DDJHDEHMHCF {
	uint32 content_modifier_effect_id = 15;
	uint32 GEEFHDJKOKG = 13;
}

message CFELLCPMONH {
	ItemList item_list = 4;
}

message OIAOLBGOAAG {
	CFELLCPMONH HHPHLEGCLDM = 12;
	DDJHDEHMHCF NOAEDNNIBAF = 10;
}

message RogueAdventureRoomTargetNone {
}

message RogueAdventureRoomTargetCoin {
	int32 count = 10;
}

message RogueAdventureRoomTargetMiracle {
	uint32 miracle_id = 14;
}

message RogueAdventureRoomTargetRuanmei {
}

message RogueAdventureRoomGameplayWolfGunTarget {
	oneof target_impl {
		RogueAdventureRoomTargetNone target_none = 8;
		RogueAdventureRoomTargetCoin target_coin = 12;
		RogueAdventureRoomTargetMiracle target_miracle = 15;
		RogueAdventureRoomTargetRuanmei target_ruanmei = 14;
	}
}

message RogueAdventureRoomGameplayWolfGunGameInfo {
	repeated RogueAdventureRoomGameplayWolfGunTarget battle_target_list = 15;
	uint32 game_target_num = 12;
}

message RogueAdventureRoomGameplayWolfGunInfo {
	oneof KFELKJLDKEH {
		RogueAdventureRoomGameplayWolfGunGameInfo game_info = 11;
	}
}

message AdventureRoomInfo {
	double sus = 12;
	uint32 score_id = 1;
	RogueAdventureRoomGameplayWolfGunInfo query_info = 9;
	uint32 remain_monster_num = 15;
	uint32 status = 8;
	uint32 caught_monster_num = 10;
}
message SyncRogueAdventureRoomInfoScNotify {
	AdventureRoomInfo adventure_room_info = 9;
}
message PrepareRogueAdventureRoomCsReq {
}
message PrepareRogueAdventureRoomScRsp {
	uint32 retcode = 2;
	AdventureRoomInfo adventure_room_info = 5;
}
message StopRogueAdventureRoomCsReq {
	uint32 MMHMDHIHCAB = 8;
	repeated uint32 IPOGACCFMOL = 14;
}
message StopRogueAdventureRoomScRsp {
	AdventureRoomInfo adventure_room_info = 7;
	uint32 retcode = 11;
}
message GetRogueAdventureRoomInfoCsReq {
}
message GetRogueAdventureRoomInfoScRsp {
	AdventureRoomInfo adventure_room_info = 7;
	uint32 retcode = 1;
}
message UpdateRogueAdventureRoomScoreCsReq {
	uint32 score_id = 12;
	uint32 HMFFHGBKOGL = 14;
}
message UpdateRogueAdventureRoomScoreScRsp {
	uint32 retcode = 6;
	AdventureRoomInfo adventure_room_info = 7;
}

message AHCLNMJPMIJ {
	bool POAPEGKPFOB = 8;
	ItemCostData cost_data = 9;
	ItemCostData NBLFFDIPBHI = 2;
	bool BPHCBOHKHMD = 11;
	uint32 miracle_id = 4;
}

message MGKFKECFHHM {
	uint32 buff_id = 14;
	ItemCostData cost_data = 15;
	ItemCostData NBLFFDIPBHI = 1;
	bool POAPEGKPFOB = 12;
	uint32 LEAAEBAFCHP = 7;
	bool BPHCBOHKHMD = 8;
}

message IILHOAKJDNH {
	ItemCostData cost_data = 1;
	ItemCostData NBLFFDIPBHI = 3;
	uint32 formula_id = 5;
	bool BPHCBOHKHMD = 15;
	bool POAPEGKPFOB = 14;
}

message NNJOLKJLPJG {
	repeated AHCLNMJPMIJ miracle_list = 12;
}

message ANJDKFJOEEI {
	repeated MGKFKECFHHM buff_list = 14;
}

message GLPPDLECCLI {
	repeated IILHOAKJDNH game_formula_info = 10;
}
message GetRogueShopBuffInfoCsReq {
	uint32 interacted_prop_entity_id = 6;
	bool HMILGHCPEDE = 10;
}
message GetRogueShopBuffInfoScRsp {
	int32 EFOJOCFGIDJ = 3;
	uint32 retcode = 15;
	ANJDKFJOEEI rogue_buff_info = 6;
	ItemCostData IHJHCCFMIFD = 4;
	int32 AEFHKANBFNC = 8;
}
message GetRogueShopMiracleInfoCsReq {
	uint32 interacted_prop_entity_id = 6;
	bool HMILGHCPEDE = 12;
}
message GetRogueShopMiracleInfoScRsp {
	uint32 retcode = 7;
	int32 AEFHKANBFNC = 15;
	NNJOLKJLPJG game_miracle_info = 11;
	ItemCostData IHJHCCFMIFD = 12;
	int32 EFOJOCFGIDJ = 10;
}
message GetRogueShopFormulaInfoCsReq {
	bool HMILGHCPEDE = 14;
	uint32 interacted_prop_entity_id = 2;
}
message GetRogueShopFormulaInfoScRsp {
	GLPPDLECCLI CKAANMDDKCJ = 4;
	uint32 retcode = 5;
	int32 AEFHKANBFNC = 7;
	ItemCostData IHJHCCFMIFD = 14;
	int32 EFOJOCFGIDJ = 10;
}
message BuyRogueShopFormulaCsReq {
	uint32 miracle_id = 6;
	uint32 interacted_prop_entity_id = 9;
}
message BuyRogueShopBuffCsReq {
	uint32 interacted_prop_entity_id = 10;
	repeated uint32 buff_id_list = 6;
}
message BuyRogueShopMiracleCsReq {
	uint32 interacted_prop_entity_id = 6;
	repeated uint32 AOIIHCFMFPH = 1;
}
message BuyRogueShopMiracleScRsp {
	uint32 retcode = 14;
	NNJOLKJLPJG game_miracle_info = 13;
}
message BuyRogueShopBuffScRsp {
	uint32 retcode = 4;
	ANJDKFJOEEI rogue_buff_info = 5;
}
message BuyRogueShopFormulaScRsp {
	GLPPDLECCLI CKAANMDDKCJ = 5;
	uint32 retcode = 1;
}
message RogueNpcDisappearCsReq {
	uint32 ICINGGKOEMG = 1;
}
message RogueNpcDisappearScRsp {
	uint32 retcode = 1;
}
message RogueShopBeginBattleCsReq {
	uint32 interacted_prop_entity_id = 5;
}
message RogueShopBeginBattleScRsp {
	SceneBattleInfo NOPHEEHJHEK = 9;
	uint32 retcode = 6;
}
message SyncRogueCommonActionResultScNotify {
	repeated RogueCommonActionResult action_result_list = 7;
	RogueCommonActionResultDisplayType display_type = 15;
	uint32 rogue_sub_mode = 4;
}

message RogueCommonActionResult {
	RogueCommonActionResultData rogue_action = 4;
	RogueCommonActionResultSourceType source = 8;
}

message FormulaBuffTypeInfo {
	int32 formula_buff_num = 11;
	uint32 key = 3;
}

message MLPKNLLAOIF {
	int32 EEGCBBHOPHG = 5;
	uint32 JPNFBFKHPGD = 8;
	int32 CFCLOGFJPBD = 14;
}

message FormulaInfo {
	uint32 formula_id = 1;
	repeated FormulaBuffTypeInfo formula_buff_type_list = 10;
	bool is_expand = 4;
}

message FormulaTypeValue {
	map<uint32, int32> NADOCCEPHJO = 6;
}

message RogueCommonFormula {
	FormulaInfo formula_info = 1;
}

message RogueCommonRemoveFormula {
	FormulaInfo formula_info = 6;
}

message RogueCommonExpandedFormula {
	FormulaInfo formula_info = 12;
}

message RogueCommonContractFormula {
	FormulaInfo formula_info = 13;
}

message FIPFPHBPHLH {
	repeated MLPKNLLAOIF ILBKMNAJGMO = 6;
}

message RogueCommonPathBuff {
	FormulaTypeValue value = 14;
}

message RogueTournFormulaInfo {
	FormulaTypeValue formula_type_value = 2;
	repeated MLPKNLLAOIF ILBKMNAJGMO = 11;
	repeated FormulaInfo game_formula_info = 9;
}

message RogueCommonKeyword {
	uint32 keyword_id = 14;
}

message RogueCommonRemoveKeyword {
	uint32 keyword_id = 8;
}

message KeywordUnlockValue {
	map<uint32, bool> NFNMBGBOCCL = 5;
}

message RogueCommonActionResultData {
	oneof KFELKJLDKEH {
		RogueCommonMoney get_item_list = 3;
		RogueCommonMoney remove_item_list = 7;
		RogueCommonBuff get_buff_list = 1987;
		RogueCommonBuff remove_buff_list = 241;
		RogueCommonMiracle get_miracle_list = 1521;
		RogueCommonRemoveMiracle remove_miracle_list = 55;
		IBIBPOOPDEN APFMFBBDCJK = 104;
		MAAAAGPJJFE BMDJOPGHLCA = 1700;
		PBALOEJCGFN OMPBJJOHPOO = 1918;
		HBLNHGANBAB IOMJMEAOMFI = 1443;
		MDGJIKLJDDE BBLGEEMHIIM = 1398;
		RogueCommonFormula get_formula_list = 240;
		RogueCommonRemoveFormula remove_formula_list = 744;
		RogueCommonExpandedFormula expand_formula_list = 1055;
		RogueCommonContractFormula contract_formula_list = 775;
		FIPFPHBPHLH DMKGEBHPIPJ = 227;
		RogueCommonPathBuff path_buff_list = 1115;
		RogueCommonKeyword get_keyword_list = 1246;
		RogueCommonRemoveKeyword remove_keyword_list = 1748;
		RogueCommonDressScepter dress_scepter_list = 341;
		RogueCommonGetScepter get_scepter_list = 1304;
		AEFFJLGFAMH KAAILMGCHOK = 751;
		RogueMagicGameUnitInfo get_magic_unit_list = 1268;
		RogueMagicGameUnitInfo remove_magic_unit_list = 960;
		RogueMagicGameUnitInfo JGDAEBNEFKA = 1979;
		RogueMagicGameScepterInfo AOIBHCMANFK = 1424;
		HOBKEOICBMI MIBOBJIDCAD = 1745;
		LNAMGOMHGJB EDBPEHABHBI = 1202;
		LNAMGOMHGJB CJOHMIPJHNM = 845;
	}
}

message RogueFormulaSelectInfo {
	uint32 HintId = 12;
	bool can_roll = 6;
	uint32 select_hint_id = 8;
	uint32 RollFormulaMaxCount = 11;
	ItemCostData RollFormulaCostData = 14;
	repeated uint32 SelectFormulaIdList = 4;
	uint32 RollFormulaFreeCount = 10;
	repeated uint32 HandbookUnlockFormulaIdList = 3;
}

message RogueTournFormulaResult {
	uint32 tourn_formula_id = 7;
}

message RogueTournFormulaCallback {
}

message FHMAIANENPO {
	repeated uint32 LALDACMCHFI = 7;
	uint32 select_hint_id = 12;
}

message ONOOFHDEIDD {
	uint32 tourn_formula_id = 12;
}

message HKJEGONGJNP {
}

message KHGCDEIMLHN {
}

message EHEFOMMBNAF {
	RogueFormulaSelectInfo rogue_formula_select_info = 9;
}

message BPDDOBAHPNA {
	RogueFormulaSelectInfo rogue_formula_select_info = 7;
}

message EKMAHAFGNGJ {
	uint32 tourn_formula_id = 9;
}

message HBIBLKKEOAC {
}

message LGCMEEPJMHA {
	uint32 IDIGNADNDNF = 4;
}

message RogueMagicScepterDressInfo {
	uint32 slot = 15;
	uint32 type = 7;
	uint32 dress_magic_unit_unique_id = 4;
}

message RogueMagicScepter {
	uint32 level = 14;
	uint32 scepter_id = 8;
}

message RogueMagicGameScepterInfo {
	map<uint32, uint32> EEPOJGNFLPA = 2;
	repeated RogueMagicGameUnit locked_magic_unit_list = 7;
	RogueMagicScepter modifier_content = 1;
	repeated RogueMagicScepterDressInfo scepter_dress_info = 4;
}

message RogueMagicGameUnit {
	uint32 level = 4;
	uint32 magic_unit_id = 1;
}

message RogueMagicGameUnitInfo {
	uint32 unique_id = 10;
	RogueMagicGameUnit game_magic_unit = 7;
}

message RogueCommonDressScepter {
	RogueMagicGameScepterInfo update_scepter_info = 15;
}

message RogueCommonGetScepter {
	RogueMagicGameScepterInfo update_scepter_info = 2;
}

message AEFFJLGFAMH {
	RogueMagicGameScepterInfo update_scepter_info = 9;
}

message OKECOPGKLEE {
	RogueMagicGameUnitInfo PMGJICCHHDL = 13;
}

message PGAKDEJBOHF {
	RogueMagicGameUnitInfo JFPJBBJLIFK = 13;
}

message RogueMagicUnitSelectInfo {
	RogueMagicGameUnit FGDJAMHOKIF = 1;
	repeated RogueMagicGameUnit select_magic_units = 14;
	uint32 select_hint_id = 3;
	uint32 SourceType = 7;
	uint32 FirstBuffTypeList = 8;
}

message KKAGNMEMKOG {
	repeated RogueMagicGameUnitInfo select_magic_units = 7;
	uint32 select_hint_id = 11;
}

message RogueMagicUnitSelectResult {
	RogueMagicGameUnit select_magic_unit = 11;
}

message IIPEGHDKHGD {
	RogueMagicGameUnitInfo select_magic_unit = 11;
}

message RogueMagicUnitSelectCallback {
}

message ABPNCPOIJCI {
}

message IMNNNJGGPAG {
}

message IMDHPDBHEBC {
}

message HOBKEOICBMI {
	RogueMagicGameUnitInfo EOCIPKGJFOP = 7;
	repeated uint32 HKKLPLDNPKD = 3;
}

message RogueMagicScepterSelectInfo {
	repeated RogueMagicScepter select_scepters = 5;
	uint32 select_hint_id = 2;
}

message RogueMagicScepterSelectResult {
	bool ABBMHPKGAIK = 15;
	RogueMagicScepter select_scepter = 13;
}

message RogueMagicScepterSelectCallback {
}

message IKCNDLJLAPP {
}

message JKHKEBMOBEJ {
	RogueMagicScepter JBJGGNBJKDJ = 6;
}

message JCDLJBPHOMD {
	RogueMagicScepter GHELBOBFPAM = 10;
	bool BLCILJENELO = 3;
}

message LGPGCJDOIBK {
}

message LNAMGOMHGJB {
	uint32 IBOEKJBOMOG = 1;
}

message CGJNHNMAMDH {
	uint32 LDFGIFDFPCF = 1;
	repeated uint32 KDAOIMPPPKI = 13;
	int32 JMCEMBEHCOJ = 6;
}

message CGGBPJICHGF {
	uint32 select_hint_id = 1;
	uint32 NCLAEHAIJJB = 14;
	uint32 GMILNGGHEDC = 9;
	uint32 OFBMPOJPDOJ = 8;
	repeated uint32 GBOOALMIKOB = 7;
	NDKLJJIIMGM OBIEDGMEBDL = 2;
}

message HAOJLHGNFPM {
	uint32 JMEHMHKBJAH = 5;
}

message BLJOGGMJBMD {
}

message OOPINHFMECE {
}

message ONPNBIOMMGB {
	CGGBPJICHGF NIFJFLDKIKK = 15;
}

message PIGFBKOJNHG {
	uint32 event_unique_id = 7;
}

message AJNAJINFJIC {
	bool is_win = 11;
	uint32 battle_event_id = 9;
}

message MNMLOAPBHNF {
	uint32 event_unique_id = 8;
}
message SyncRogueCommonPendingActionScNotify {
	uint32 rogue_sub_mode = 4;
	RogueCommonPendingAction action = 1;
}

message RogueCommonPendingAction {
	uint32 queue_position = 4;
	RogueAction rogue_action = 15;
}

message RogueAction {
	oneof KFELKJLDKEH {
		RogueCommonBuffSelectInfo buff_select_info = 2030;
		LEFCOMGMPCL FPHHHIOBFAI = 1743;
		IPGKAGFFBHF AJDDFANCEJN = 880;
		RogueCommonBuffReforgeSelectInfo buff_reforge_select_info = 1272;
		RogueMiracleSelectInfo miracle_select_info = 315;
		ANMCAIMELCA BICJEMPPLAM = 747;
		GABBEHOIPJC AELPPPIEFAB = 1992;
		MLKICCAELKE BEDIACHLCII = 1829;
		EAKECFAPPKD LADGCOOMNKA = 2044;
		ELDAFCNMFBF CGKFOMNCNAK = 1373;
		RogueComposeMiracleSelectInfo compose_miracle_select_info = 1195;
		RogueHexAvatarSelectInfo hex_avatar_select_info = 88;
		RogueBonusSelectInfo bonus_select_info = 1153;
		RogueFormulaSelectInfo rogue_formula_select_info = 500;
		FHMAIANENPO JBKPIKAJPEB = 523;
		BPDDOBAHPNA HCCHFJEFANJ = 1071;
		RogueMagicUnitSelectInfo OIOMHOPNIMF = 1665;
		RogueMagicScepterSelectInfo IFCLAAFPKHC = 1470;
		JKHKEBMOBEJ HFJECHFANNF = 836;
		RogueMagicUnitSelectInfo LDJOMIOJEPF = 1003;
		RogueMagicUnitSelectInfo LMNONCMBIOO = 469;
		RogueMagicUnitSelectInfo CNLMCOBNCAI = 1991;
		KKAGNMEMKOG FHOKDLLICJL = 1379;
		KKAGNMEMKOG PHDEMDBGOIB = 2001;
		KKAGNMEMKOG KLJJIBPJGFF = 532;
		PIGFBKOJNHG DLFALFGFDHE = 296;
		CGGBPJICHGF NPCDBPNDGOP = 53;
	}
}
message HandleRogueCommonPendingActionCsReq {
	uint32 IFDKLLHFPJB = 4;
	oneof KFELKJLDKEH {
		RogueBuffSelectResult JKHBBDLCHID = 909;
		PBMAKLNJEKO KBNEGOLPLFC = 1691;
		OKEFIDDNLKG GDKGIBEKGPF = 317;
		RogueBuffRerollResult ONCNGIILENF = 1195;
		RogueBuffReforgeSelectResult GLEJCDPDJNE = 669;
		MPPHHNAEEDK OOAGPGDPJOA = 379;
		JFPFDJPPOAG IDBALJBNBKE = 1110;
		NALELIGHDAA GNEBJEPPKEJ = 788;
		PKODMMPHIBC KJLAFILAPJF = 1085;
		NHCKHPLKLIO FLFPCPHLAGO = 812;
		LHJPIKEKPGH EPOAKMFMFLM = 1501;
		IMCBIIGOKPM FKPFOKHBPKK = 1952;
		LKMKHACMAPC EODCLAIPCAE = 1375;
		IMLBIBJKPDB AOCODAOBKHM = 220;
		RogueTournFormulaResult EGGGGGGLFHO = 1376;
		KHGCDEIMLHN LNPLOEOFCCJ = 1336;
		ONOOFHDEIDD IEABOHKEAPA = 1531;
		EKMAHAFGNGJ NEDIIBJHGFO = 755;
		RogueMagicUnitSelectResult JGPCBCJKONH = 987;
		RogueMagicScepterSelectResult HKNJIPJHOCG = 874;
		JCDLJBPHOMD LDAGLIMNMAN = 535;
		RogueMagicUnitSelectResult AFLHEIKJNBN = 1643;
		RogueMagicUnitSelectResult PHKBFLNPEFI = 1306;
		RogueMagicUnitSelectResult GOCMNDKFOAB = 545;
		IIPEGHDKHGD CHONECOLIHA = 1887;
		IIPEGHDKHGD MOAOGACBOIJ = 361;
		IIPEGHDKHGD KILHFPPBBFM = 1273;
		HAOJLHGNFPM BLHDFAJHCJA = 1548;
		HAOJLHGNFPM LPJBAIMJAIK = 1453;
		OOPINHFMECE HDHDPGGMEPB = 1001;
		LGCMEEPJMHA ECEGPEJCPBL = 103;
		AJNAJINFJIC FKPDKFEMKEC = 131883;
		MNMLOAPBHNF LLNMCJCFBMJ = 198324;
	}
}
message HandleRogueCommonPendingActionScRsp {
	uint32 IFDKLLHFPJB = 9;
	uint32 queue_position = 6;
	uint32 retcode = 10;
	oneof KFELKJLDKEH {
		RogueBuffSelectCallback PNADBJEJBOF = 1449;
		FKDBIHNPCHE KKIANGABFNJ = 1425;
		DLHPDALGDEH CLDBPLNIAEN = 1166;
		RogueBuffRerollCallback GOOMOPMALOL = 1394;
		RogueBuffReforgeSelectCallback KBFLNJPMOAH = 1701;
		CFFOCCHBAMH JKJOFMHJGIB = 351;
		HONKBMJPJAA DDDENAPJBKA = 130;
		PAOCONGELJK DMCEPJKOOGC = 250;
		BLFJBKBHJIL FDPPGKDDPGC = 443;
		OMJFMBJMFMC MAPBDBMFIMD = 343;
		MOIKNHHCABH OIHJEKIMPPD = 1679;
		FHIKPLAIOEI OKPCJLPMBAD = 188;
		NOCOCFHOAJC DPGBCAFKDPM = 1304;
		JCAHMIOOLDB HMOBEFJKDPD = 506;
		RogueTournFormulaCallback JAPIIIJMPGE = 1590;
		EHEFOMMBNAF CPOPCHNDDFM = 110;
		HKJEGONGJNP NDJBGFHEICI = 1890;
		HBIBLKKEOAC COBEIBNLGJF = 123;
		RogueMagicUnitSelectCallback BLEFMEHONOO = 1252;
		RogueMagicScepterSelectCallback IHBODKMFPNF = 1704;
		LGPGCJDOIBK LBOJLIIABAP = 1000;
		ABPNCPOIJCI ILHBHPHDEDL = 1613;
		IMNNNJGGPAG DICGEADECPK = 1386;
		IMDHPDBHEBC GABICMFAKPD = 167;
		IKCNDLJLAPP DKMMOIMOJDM = 674;
		BLJOGGMJBMD HCFOPGMLENO = 873;
		BLJOGGMJBMD GDMGOELOMFK = 864;
		ONPNBIOMMGB CDDNKGJAEFI = 235;
	}
}

message FCPMBJHFBNJ {
	uint32 maze_buff_id = 14;
}

message GIADLHEEPHD {
	bool has_taken_reward = 13;
	uint32 FHHGDPCECEE = 4;
}

message LOGNKEKHBAI {
	bool has_taken_reward = 11;
	uint32 AJBEPAHCGIK = 5;
}

message KNIJHGNJIJM {
	uint32 level = 9;
	uint32 exp = 4;
	uint32 aeon_id = 6;
	repeated uint32 DPMIBDHKDAE = 15;
	uint32 JGMIPMDPPIJ = 1;
	repeated uint32 DDGCFJDBOOH = 14;
}

message OOCEOILKCFI {
	RogueMagicScepter magic_item = 4;
}

message RogueMagicUnitInfo {
	uint32 magic_unit_id = 3;
	uint32 PPMIOGCFOOC = 9;
}

message AEKNFLOMLJH {
	repeated FCPMBJHFBNJ buff_list = 9;
	repeated KNIJHGNJIJM BELOFMFHFDK = 10;
	repeated GIADLHEEPHD miracle_list = 7;
	repeated LOGNKEKHBAI BJCMPHLPKNF = 5;
}
message GetRogueHandbookDataCsReq {
}
message GetRogueHandbookDataScRsp {
	AEKNFLOMLJH rogue_tourn_handbook = 13;
	uint32 retcode = 4;
}
message SyncRogueHandbookDataUpdateScNotify {
	repeated FCPMBJHFBNJ ABIBOBFDKLD = 15;
	repeated LOGNKEKHBAI HAEBAAMBNBB = 7;
	repeated OOCEOILKCFI BJKPKFBFDFF = 4;
	repeated RogueMagicUnitInfo MMHCHHCOFPB = 12;
	repeated GIADLHEEPHD IDDDCJONPFN = 5;
}
message TakeRogueMiracleHandbookRewardCsReq {
	repeated uint32 AFHDDNGGNBF = 8;
}
message TakeRogueMiracleHandbookRewardScRsp {
	uint32 retcode = 7;
	ItemList reward = 11;
	repeated uint32 FEIFJADCDFL = 9;
}
message TakeRogueEventHandbookRewardCsReq {
	repeated uint32 handbook_buff_list = 14;
}
message TakeRogueEventHandbookRewardScRsp {
	ItemList reward = 12;
	uint32 retcode = 7;
	repeated uint32 DPJHILHGOKE = 8;
}

message RogueGameItemValue {
	map<uint32, uint32> GLAPHHABOHP = 14;
}

message ChessRogueGameAeonInfo {
	EENDHPKPFLP BOHDMINEJNO = 9;
	int32 ICJABPGMACJ = 12;
	uint32 game_aeon_id = 14;
}

message RogueDifficultyLevelInfo {
	repeated uint32 difficulty_id_list = 10;
}

message RogueTournLineupInfo {
	ItemCostData rogue_revive_cost = 9;
	repeated uint32 avatar_id_list = 14;
}

message RogueGameInfo {
	oneof JPBHEOJAKGE {
		ChessRogueBuffInfo rogue_buff_info = 12;
		ChessRogueMiracleInfo game_miracle_info = 13;
		RogueGameItemValue FFFCCEJIFDK = 8;
		ChessRogueGameAeonInfo rogue_aeon_info = 1;
		RogueDifficultyLevelInfo rogue_difficulty_info = 7;
		RogueTournFormulaInfo CKAANMDDKCJ = 11;
		KeywordUnlockValue NBDACDNBJIK = 15;
		RogueTournLineupInfo rogue_lineup_info = 3;
	}
}

message PMJGKHPKHCM {
	uint32 sub_area_id = 15;
	uint32 AGEBAMBKKBC = 5;
	uint32 rogue_sub_mode = 10;
	repeated RogueGameInfo rogue_current_game_info = 4;
	uint32 rogue_magic_battle_const = 7;
}

message KLAAHJHNLCJ {
	bool CDIAJKEJDHA = 6;
	uint32 BHPCNNFOKEE = 3;
	uint32 progress = 10;
}

message RogueTalentInfo {
	RogueTalentStatus status = 6;
	repeated KLAAHJHNLCJ rogue_unlock_progress_list = 12;
	uint32 talent_id = 10;
}

message RogueTalentInfoList {
	repeated RogueTalentInfo talent_info = 1;
}

message RogueCommonVirtualItemInfo {
	uint32 virtual_item_num = 1;
	uint32 virtual_item_id = 7;
}
message SyncRogueCommonVirtualItemInfoScNotify {
	repeated RogueCommonVirtualItemInfo common_item_info = 9;
}

message MAPOMOILGEH {
	uint32 MBKFININNEK = 15;
	uint32 GEDJNIAEFHO = 13;
	uint32 BDCFFOBGKOA = 11;
}

message PLGDCFIPEAA {
	repeated RogueUnlockFunctionType JPGCDJDGDBI = 8;
}

message ILAEKJCNEMF {
	repeated uint32 AFEDJKMFODP = 12;
}

message LGJMDNNMPPE {
	ILAEKJCNEMF NOLHGNHAEMA = 3;
	MAPOMOILGEH ONGPJOGKKJN = 15;
	PLGDCFIPEAA KJKBKEGIGHK = 5;
}
message CommonRogueQueryCsReq {
}
message CommonRogueQueryScRsp {
	uint32 FHHBJLHAJFJ = 10;
	LGJMDNNMPPE rogue_get_info = 12;
	uint32 retcode = 1;
}
message CommonRogueUpdateScNotify {
	oneof DGIKIFJODBM {
		MAPOMOILGEH ONGPJOGKKJN = 6;
		PLGDCFIPEAA KJKBKEGIGHK = 10;
		ILAEKJCNEMF NOLHGNHAEMA = 15;
	}
}

message RogueCommonDialogueBasicInfo {
	uint32 aeon_talk_id = 12;
	uint32 talk_dialogue_id = 8;
}

message GNJAPOMLLHE {
	uint32 BGLEHMKMAPG = 13;
}

message CNHHPDHBMDC {
	uint32 BGLEHMKMAPG = 2;
}

message JIEAAFJENLK {
	uint32 formula_id = 13;
}

message HPJLAFHHGJG {
	uint32 BGLEHMKMAPG = 3;
}

message AFCCAOACNAK {
	uint32 dialogue_id = 2;
}

message RogueCommonDialogueInfo {
	oneof ACDOBBPLDBG {
		RogueCommonDialogueBasicInfo dialogue_basic_info = 3;
		GNJAPOMLLHE ADMAHLAALNH = 10;
		CNHHPDHBMDC ODDGCBPOPLF = 2;
		JIEAAFJENLK GMAKHONAEPH = 11;
		HPJLAFHHGJG CACGEKAANKL = 9;
		AFCCAOACNAK AGGBLHGKPFJ = 7;
	}
}

message RogueCommonDialogueOptionDisplayInfo {
	int32 display_int_value = 7;
	float display_float_value = 3;
}

message RogueCommonDialogueOptionBattleResultInfo {
	uint32 battle_event_id = 6;
}

message NEBPGHDDEPC {
	int32 JEFIOIHHCLG = 8;
}

message RogueCommonDialogueOptionResultInfo {
	oneof DCOECLCEDOB {
		RogueCommonDialogueOptionBattleResultInfo battle_result_info = 10;
		NEBPGHDDEPC HMLCEHIKFFK = 3;
	}
}

message RogueCommonDialogueOptionInfo {
	bool confirm = 6;
	bool is_valid = 13;
	RogueCommonDialogueOptionDisplayInfo display_value = 4;
	uint32 arg_id = 1;
	repeated RogueCommonDialogueOptionResultInfo option_result_info = 8;
	uint32 option_id = 7;
}

message RogueCommonDialogueDataInfo {
	uint32 event_unique_id = 4;
	repeated RogueCommonDialogueOptionInfo option_list = 6;
	RogueCommonDialogueInfo dialogue_info = 2;
}
message GetRogueCommonDialogueDataCsReq {
}
message GetRogueCommonDialogueDataScRsp {
	repeated RogueCommonDialogueDataInfo dialogue_data_list = 9;
	uint32 retcode = 1;
}
message SelectRogueCommonDialogueOptionCsReq {
	uint32 option_id = 7;
	uint32 event_unique_id = 12;
}
message SelectRogueCommonDialogueOptionScRsp {
	RogueCommonDialogueDataInfo dialogue_data = 3;
	uint32 option_id = 8;
	repeated uint32 effect_event_id_list = 5;
	uint32 retcode = 11;
	bool event_has_effect = 10;
	uint32 event_unique_id = 15;
}
message FinishRogueCommonDialogueCsReq {
	uint32 event_unique_id = 7;
}
message FinishRogueCommonDialogueScRsp {
	uint32 event_unique_id = 9;
	uint32 retcode = 7;
}
message SyncRogueCommonDialogueDataScNotify {
	repeated RogueCommonDialogueDataInfo dialogue_data_list = 1;
}
message SyncRogueCommonDialogueOptionFinishScNotify {
	RogueCommonDialogueOptionInfo DGNCFMDPPBF = 8;
	RogueCommonDialogueDataInfo dialogue_data = 15;
	uint32 event_unique_id = 3;
	uint32 option_id = 5;
}

message RogueTournCurAreaInfo {
	RogueCommonPendingAction pending_action = 9;
	uint32 rogue_magic_battle_const = 11;
	string MDLNDGIJNML = 14;
	uint32 rogue_sub_mode = 6;
	uint32 sub_area_id = 3;
	uint32 AGEBAMBKKBC = 7;
}
message RogueWorkbenchGetInfoCsReq {
	uint32 prop_entity_id = 11;
}
message RogueWorkbenchGetInfoScRsp {
	map<uint32, WorkbenchFuncInfo> GAJPNNGMHNK = 12;
	uint32 retcode = 9;
}

message WorkbenchFuncInfo {
	oneof PNECCABBLHB {
		WorkbenchReforgeBuffFuncInfo reforge_buff_func = 3;
		WorkbenchReforgeFormulaFuncInfo reforge_formula_func = 1;
		WorkbenchEnhanceBuffFuncInfo enhance_buff_func = 15;
		WorkbenchComposeMiracleFunc compose_miracle_func = 8;
		WorkbenchReforgeHexAvatarFunc reforge_hex_avatar_func = 11;
		KHCBGNLNPEL magic_item = 13;
		KMHIBNGAFEO game_magic_unit = 4;
		DMKPFGEBILH CEAJNLIOFHF = 5;
		LFGGPNGKBCH PGPAAPOPDOC = 7;
		DHMFCIDJBFD PMKEHGBPCNG = 9;
	}
}

message WorkbenchReforgeBuffFuncInfo {
	uint32 free_reforge_num = 13;
	uint32 uint_reforge_num_value = 4;
	ItemCostData cost_data = 2;
	int32 int_reforge_num_value = 1;
	bool can_free_reforge = 7;
}

message WorkbenchReforgeFormulaFuncInfo {
	uint32 uint_reforge_num_value = 7;
	uint32 free_reforge_num = 11;
	int32 int_reforge_num_value = 8;
	ItemCostData cost_data = 6;
	bool can_free_reforge = 14;
}

message WorkbenchEnhanceBuffFuncInfo {
	uint32 cur_num = 14;
	map<uint32, uint32> HCPACBHCMHN = 2;
	uint32 max_num = 6;
}

message WorkbenchComposeMiracleFunc {
	uint32 free_reforge_num = 6;
	int32 int_reforge_num_value = 7;
	ItemCostData cost_data = 8;
	map<uint32, bool> NFNICIPMJII = 12;
}

message WorkbenchReforgeHexAvatarFunc {
	uint32 free_reforge_num = 2;
	int32 int_reforge_num_value = 3;
	ItemCostData cost_data = 6;
}

message COAHGFLONAN {
	ItemCostData cost_data = 13;
	RogueMagicScepter magic_item = 4;
	ItemCostData HBPBLGLLIEN = 2;
	bool NGKJPCEHMBA = 11;
}

message KHCBGNLNPEL {
	repeated COAHGFLONAN rogue_magic_scepter_info_list = 1;
}

message AOGIIMKCJDJ {
	uint32 PPMIOGCFOOC = 13;
	uint32 magic_unit_id = 2;
	ItemCostData HBPBLGLLIEN = 10;
	ItemCostData cost_data = 12;
	bool NGKJPCEHMBA = 7;
}

message KMHIBNGAFEO {
	repeated AOGIIMKCJDJ rogue_magic_unit_info_list = 9;
}

message DMKPFGEBILH {
	ItemCostData cost_data = 11;
	uint32 free_reforge_num = 15;
	int32 int_reforge_num_value = 5;
}

message LFGGPNGKBCH {
	int32 int_reforge_num_value = 6;
	uint32 free_reforge_num = 7;
	map<uint32, ItemCostData> IAKHMMELMFD = 15;
	ItemCostData FAIDIBODMCH = 5;
}

message KIFILCJOLCH {
	uint32 scepter_id = 2;
	ItemCostData cost_data = 8;
}

message DHMFCIDJBFD {
	repeated KIFILCJOLCH magic_scepter_info_list = 8;
}
message RogueWorkbenchHandleFuncCsReq {
	uint32 func_id = 6;
	uint32 prop_entity_id = 7;
	RogueWorkbenchContentInfo workbench_content = 10;
}
message RogueWorkbenchHandleFuncScRsp {
	uint32 retcode = 6;
	uint32 func_id = 14;
	WorkbenchFuncInfo target_func_info = 1;
}

message RogueWorkbenchContentInfo {
	oneof ECOEKHPGMEA {
		WorkbenchReforgeBuffTargetInfo reforge_buff_func = 15;
		WorkbenchReforgeFormulaTargetInfo reforge_formula_func = 10;
		WorkbenchEnhanceBuffTargetInfo enhance_buff_func = 11;
		WorkbenchComposeMiracleTargetInfo compose_miracle_func = 3;
		WorkbenchReforgeHexAvatarTargetInfo reforge_hex_avatar_func = 5;
		JDOOIDBKCIM magic_item = 7;
		GJBBLCIPBHD game_magic_unit = 8;
		LEHGLCELJMF CEAJNLIOFHF = 2;
		FHJGLOPMFNC PGPAAPOPDOC = 13;
		JBNCDFFPDOP PMKEHGBPCNG = 14;
	}
}

message WorkbenchReforgeBuffTargetInfo {
	uint32 target_reforge_buff_id = 3;
}

message WorkbenchReforgeFormulaTargetInfo {
	uint32 target_reforge_formula_id = 8;
}

message WorkbenchEnhanceBuffTargetInfo {
	uint32 target_buff_id = 7;
}

message WorkbenchComposeMiracleTargetInfo {
	repeated uint32 target_compose_miracle_id_list = 7;
}

message WorkbenchReforgeHexAvatarTargetInfo {
	uint32 target_reforge_hex_id = 1;
}

message JDOOIDBKCIM {
	uint32 FPLJOAACDGD = 14;
}

message GJBBLCIPBHD {
	repeated uint32 CLOPKOBKHMA = 5;
}

message LEHGLCELJMF {
	repeated uint32 DNKCCIBPFGK = 10;
}

message FHJGLOPMFNC {
	uint32 magic_unit_id = 1;
}

message JBNCDFFPDOP {
	uint32 scepter_id = 8;
}

message FKBFOOEFPAE {
	uint32 INFBHPGDLND = 5;
	RogueCollectionStatus status = 3;
}

message AJAKDCDDAMO {
	uint32 EONLMDCBNME = 8;
	RogueBoothStatus status = 15;
	uint32 INFBHPGDLND = 7;
}
message GetRogueCollectionCsReq {
}
message GetRogueCollectionScRsp {
	repeated FKBFOOEFPAE PCPEDFLNBGA = 13;
	repeated AJAKDCDDAMO PAHPDBIACHA = 11;
	uint32 retcode = 5;
}
message SetRogueCollectionCsReq {
	repeated uint32 FPIPMKCAGPD = 4;
	repeated RogueCollectionExhibitionOperateType LGHPHFPPJEN = 6;
	repeated uint32 OPKMCIFFCCH = 13;
}
message SetRogueCollectionScRsp {
	uint32 retcode = 14;
	repeated AJAKDCDDAMO PAHPDBIACHA = 5;
	repeated FKBFOOEFPAE PCPEDFLNBGA = 12;
}

message GBPFLAGFAIJ {
	RogueExhibitionStatus status = 6;
	uint32 KBDFBGINNBJ = 13;
}

message DMODINLGCCB {
	uint32 KBDFBGINNBJ = 8;
	uint32 EONLMDCBNME = 6;
	RogueBoothStatus status = 4;
}
message GetRogueExhibitionCsReq {
}
message GetRogueExhibitionScRsp {
	repeated DMODINLGCCB PJPJOKKFNIM = 12;
	uint32 retcode = 10;
	repeated GBPFLAGFAIJ MKCEFANCAIG = 3;
}
message SetRogueExhibitionCsReq {
	repeated uint32 LDIFBJDGFFE = 14;
	repeated RogueCollectionExhibitionOperateType ANEKPINLKFJ = 7;
	repeated uint32 HEEPOEOLILO = 1;
}
message SetRogueExhibitionScRsp {
	uint32 retcode = 2;
	repeated GBPFLAGFAIJ MKCEFANCAIG = 6;
	repeated DMODINLGCCB PJPJOKKFNIM = 3;
}

message EHKEGMCGCMH {
	uint32 miracle_id = 11;
}

message PNDNJBBDHDP {
	uint32 BIMBFJGNPFB = 2;
	uint32 level = 5;
}

message DOPJLBMMPHB {
	uint32 BIMBFJGNPFB = 7;
	bool KDGBJGOPEHI = 9;
	oneof FHDABDHIJJB {
		EHKEGMCGCMH DJNABIOEENF = 13;
		PNDNJBBDHDP IMCAJAOGCLG = 12;
	}
}

message LOPJEJMOFBG {
	bool ENBIJBFBNEC = 11;
	repeated DOPJLBMMPHB BBPAPDDENHB = 8;
	uint32 group_id = 2;
}

message RogueGambleInfo {
	bool LOFFEOHFPFL = 7;
	uint32 AKKONOBBJNK = 13;
	uint32 cur_times = 12;
	ItemCostData KEDCOHKKNAK = 4;
	uint32 HFBKBHJIEGD = 11;
	uint32 DDJDDBKNPFF = 2;
	repeated LOPJEJMOFBG maze_group_list = 15;
}
message RogueGetGambleInfoCsReq {
	uint32 prop_entity_id = 13;
}
message RogueGetGambleInfoScRsp {
	RogueGambleInfo gamble_info = 14;
	uint32 retcode = 10;
}
message RogueDoGambleCsReq {
	uint32 prop_entity_id = 11;
}
message RogueDoGambleScRsp {
	uint32 retcode = 4;
	RogueGambleInfo gamble_info = 5;
	uint32 CFBGLFOJODA = 9;
	uint32 JPKLMPPOGDH = 8;
}
message RogueDebugReplaySaveScNotify {
	uint32 uid = 6;
	string DFPFALBJHJH = 15;
	string JDEDCKKACGO = 2;
	string NEPGEEJCLAH = 9;
	string KFAMACKFHPM = 3;
	string IJPPKNKNLNL = 10;
	string JHJGFDMKIHG = 1;
}

enum CmdRogueEndless {
	CmdRogueEndlessNone = 0;
	CmdTakeRogueEndlessActivityAllBonusRewardCsReq = 6004;
	CmdGetRogueEndlessActivityDataScRsp = 6010;
	CmdGetRogueEndlessActivityDataCsReq = 6005;
	CmdEnterRogueEndlessActivityStageScRsp = 6002;
	CmdTakeRogueEndlessActivityPointRewardCsReq = 6009;
	CmdRogueEndlessActivityBattleEndScNotify = 6006;
	CmdTakeRogueEndlessActivityAllBonusRewardScRsp = 6007;
	CmdEnterRogueEndlessActivityStageCsReq = 6001;
	CmdTakeRogueEndlessActivityPointRewardScRsp = 6003;
}

message JNFELCKIOCM {
	repeated uint32 trial_avatar_id_list = 4;
	uint32 FFKPEGNBHOD = 2;
	ChessRogueBuff chess_rogue_buff_info = 9;
	uint32 map_id = 12;
	repeated uint32 base_avatar_id_list = 10;
	RogueStatus status = 14;
	ChessRogueMiracle chess_rogue_miracle_info = 13;
	uint32 GMPIIAEGGEK = 3;
	uint32 KJGIMHFKGBN = 1;
}

message OENDAFIAECG {
	uint32 HDLLMDNLOKP = 13;
	uint32 KKPKALJMAMF = 14;
	uint32 JPKJKIMNIGG = 11;
	uint32 HDJCJBBKNAF = 2;
	uint32 BPEKCEJPOFE = 5;
	uint32 AEIEOJGCMMO = 8;
	uint32 battle_id = 9;
	bool is_rotate = 4;
}

message PEODOCNCLNP {
	uint32 panel_id = 6;
	JNFELCKIOCM AELOIPGFODB = 15;
	OENDAFIAECG BOPAANGKOGH = 12;
	uint32 area_id = 9;
}
message GetRogueEndlessActivityDataCsReq {
}
message GetRogueEndlessActivityDataScRsp {
	uint32 retcode = 14;
	uint32 ANAMEOBFKGN = 1;
	uint32 JCHCHLMDPEN = 8;
	repeated uint32 EAHBIKFALLF = 13;
	repeated PEODOCNCLNP data = 4;
}

message BBNHEMCKDIN {
	AvatarType avatar_type = 8;
	uint32 avatar_id = 14;
}
message EnterRogueEndlessActivityStageCsReq {
	repeated BBNHEMCKDIN avatar_list = 3;
	uint32 MGIGDCMLEOG = 10;
}
message EnterRogueEndlessActivityStageScRsp {
	OENDAFIAECG BOPAANGKOGH = 7;
	SceneBattleInfo battle_info = 4;
	uint32 retcode = 9;
}
message RogueEndlessActivityBattleEndScNotify {
	OENDAFIAECG BOPAANGKOGH = 4;
}
message TakeRogueEndlessActivityPointRewardCsReq {
	bool MDHJKKBNMCF = 9;
	uint32 level = 13;
}
message TakeRogueEndlessActivityPointRewardScRsp {
	bool MDHJKKBNMCF = 8;
	uint32 JCHCHLMDPEN = 4;
	uint32 retcode = 14;
	uint32 level = 10;
	ItemList reward = 12;
	repeated uint32 EAHBIKFALLF = 2;
}
message TakeRogueEndlessActivityAllBonusRewardCsReq {
}
message TakeRogueEndlessActivityAllBonusRewardScRsp {
	ItemList reward = 11;
	uint32 retcode = 3;
	repeated uint32 EAHBIKFALLF = 15;
	uint32 JCHCHLMDPEN = 12;
}

enum CmdRogueMagic {
	CmdRogueMagicNone = 0;
	CmdRogueMagicReviveAvatarCsReq = 7778;
	CmdRogueMagicGetTalentInfoCsReq = 7751;
	CmdRogueMagicEnableTalentCsReq = 7735;
	CmdRogueMagicEnterRoomCsReq = 7741;
	CmdRogueMagicAutoDressInUnitCsReq = 7728;
	CmdRogueMagicLevelInfoUpdateScNotify = 7716;
	CmdRogueMagicUnitReforgeScRsp = 7701;
	CmdRogueMagicUnitComposeScRsp = 7773;
	CmdRogueMagicGetMiscRealTimeDataScRsp = 7766;
	CmdRogueMagicSettleScRsp = 7706;
	CmdRogueMagicGetMiscRealTimeDataCsReq = 7760;
	CmdRogueMagicStoryInfoUpdateScNotify = 7708;
	CmdRogueMagicScepterDressInUnitCsReq = 7709;
	CmdRogueMagicStartScRsp = 7705;
	CmdRogueMagicEnterRoomScRsp = 7755;
	CmdRogueMagicScepterTakeOffUnitCsReq = 7769;
	CmdRogueMagicBattleFailSettleInfoScNotify = 7794;
	CmdRogueMagicEnterLayerScRsp = 7739;
	CmdRogueMagicGetTalentInfoScRsp = 7725;
	CmdRogueMagicLeaveCsReq = 7779;
	CmdRogueMagicEnableTalentScRsp = 7737;
	CmdRogueMagicSetAutoDressInMagicUnitScRsp = 7715;
	CmdRogueMagicSetAutoDressInMagicUnitCsReq = 7788;
	CmdRogueMagicUnitComposeCsReq = 7724;
	CmdRogueMagicReviveCostUpdateScNotify = 7736;
	CmdRogueMagicReviveAvatarScRsp = 7774;
	CmdRogueMagicSettleCsReq = 7797;
	CmdRogueMagicAutoDressInUnitScRsp = 7789;
	CmdRogueMagicStartCsReq = 7710;
	CmdRogueMagicLeaveScRsp = 7702;
	CmdRogueMagicQueryCsReq = 7790;
	CmdRogueMagicEnterScRsp = 7753;
	CmdRogueMagicQueryScRsp = 7754;
	CmdRogueMagicEnterCsReq = 7798;
	CmdRogueMagicUnitReforgeCsReq = 7742;
	CmdRogueMagicEnterLayerCsReq = 7707;
	CmdRogueMagicAutoDressInMagicUnitChangeScNotify = 7713;
	CmdRogueMagicScepterTakeOffUnitScRsp = 7792;
	CmdRogueMagicAreaUpdateScNotify = 7726;
	CmdRogueMagicScepterDressInUnitScRsp = 7720;
}

enum RogueMagicLevelStatus {
	ROGUE_MAGIC_LEVEL_STATUS_NONE = 0;
	ROGUE_MAGIC_LEVEL_STATUS_PROCESSING = 1;
	ROGUE_MAGIC_LEVEL_STATUS_FINISHED = 2;
	ROGUE_MAGIC_LEVEL_STATUS_SETTLED = 3;
}

enum RogueMagicLayerStatus {
	ROGUE_MAGIC_LAYER_STATUS_NONE = 0;
	ROGUE_MAGIC_LAYER_STATUS_PROCESSING = 1;
	ROGUE_MAGIC_LAYER_STATUS_FINISH = 2;
}

enum RogueMagicRoomStatus {
	ROGUE_MAGIC_ROOM_STATUS_NONE = 0;
	ROGUE_MAGIC_ROOM_STATUS_INITED = 1;
	ROGUE_MAGIC_ROOM_STATUS_PROCESSING = 2;
	ROGUE_MAGIC_ROOM_STATUS_FINISH = 3;
}

enum RogueMagicSettleReason {
	ROGUE_MAGIC_SETTLE_REASON_NONE = 0;
	ROGUE_MAGIC_SETTLE_REASON_WIN = 1;
	ROGUE_MAGIC_SETTLE_REASON_FAIL = 2;
	ROGUE_MAGIC_SETTLE_REASON_INTERRUPT = 3;
}

message RogueMagicCurSceneInfo {
	RogueMapRotateInfo rotate_info = 6;
	SceneInfo scene = 4;
	LineupInfo lineup = 3;
}

message RogueMagicLayerInfo {
	repeated RogueMagicRoomInfo tourn_room_list = 2;
	uint32 level_index = 13;
	RogueMagicLayerStatus status = 6;
	uint32 cur_room_index = 10;
	uint32 layer_id = 4;
}

message RogueMagicRoomInfo {
	uint32 room_index = 14;
	uint32 EIPNNEJNNKJ = 9;
	RogueMagicRoomStatus status = 11;
	uint32 room_id = 13;
}

message RogueMagicGameLevelInfo {
	RogueMagicSettleReason reason = 10;
	uint32 cur_level_index = 14;
	repeated RogueMagicLayerInfo level_info_list = 7;
	uint32 ACGBELAIGBO = 9;
	uint32 extra_round_limit = 4;
	RogueMagicLevelStatus status = 13;
}

message RogueMagicGameItemInfo {
	repeated RogueMagicGameScepterInfo magic_scepter_info_list = 1;
	repeated RogueMagicGameUnitInfo rogue_magic_unit_info_list = 6;
	uint32 game_style_type = 5;
	bool JFCNAJMIHCI = 10;
}

message RogueMagicGameDifficultyInfo {
	repeated uint32 difficulty_id_list = 13;
}

message KLOHNFGBNPH {
	uint32 LAEEJIIKMPI = 7;
}
message RogueMagicStartCsReq {
	repeated uint32 base_avatar_id_list = 7;
	uint32 area_id = 13;
	uint32 select_style_type = 10;
	repeated uint32 start_difficulty_id_list = 11;
}

message RogueMagicCurInfo {
	RogueTournLineupInfo lineup = 6;
	ChessRogueMiracleInfo miracle_info = 7;
	RogueGameItemValue item_value = 11;
	KLOHNFGBNPH CACGEKAANKL = 8;
	RogueMagicGameDifficultyInfo game_difficulty_info = 4;
	RogueMagicGameLevelInfo level = 2;
	RogueTournCurAreaInfo basic_info = 1;
	RogueMagicGameItemInfo magic_item = 9;
}
message RogueMagicStartScRsp {
	uint32 retcode = 2;
	RogueMagicCurInfo rogue_tourn_cur_info = 12;
	RogueMagicCurSceneInfo rogue_tourn_cur_scene_info = 5;
}
message RogueMagicEnterCsReq {
}
message RogueMagicEnterScRsp {
	RogueMagicCurSceneInfo rogue_tourn_cur_scene_info = 15;
	uint32 retcode = 13;
	RogueMagicCurInfo rogue_tourn_cur_info = 1;
}
message RogueMagicLeaveCsReq {
}
message RogueMagicLeaveScRsp {
	uint32 retcode = 3;
	RogueMagicCurSceneInfo rogue_tourn_cur_scene_info = 7;
}
message RogueMagicEnterRoomCsReq {
	uint32 cur_room_index = 10;
	uint32 FLLABLFBEIK = 13;
}
message RogueMagicEnterRoomScRsp {
	uint32 retcode = 7;
	RogueMagicCurSceneInfo rogue_tourn_cur_scene_info = 14;
}
message RogueMagicEnterLayerCsReq {
	uint32 cur_level_index = 3;
	uint32 FLLABLFBEIK = 8;
}
message RogueMagicEnterLayerScRsp {
	RogueMagicCurSceneInfo rogue_tourn_cur_scene_info = 13;
	uint32 retcode = 7;
}
message RogueMagicLevelInfoUpdateScNotify {
	repeated RogueMagicLayerInfo level_info_list = 12;
	RogueMagicLevelStatus status = 10;
	RogueMagicSettleReason reason = 2;
	uint32 ACGBELAIGBO = 13;
	uint32 cur_level_index = 7;
	uint32 extra_round_limit = 1;
}
message RogueMagicAreaUpdateScNotify {
	repeated RogueMagicAreaInfo rogue_tourn_area_info = 8;
}

message CACLANLOOLK {
	bool FBJHGPDKBGM = 14;
	uint32 EFKEGDOAJBH = 6;
}

message FJJDKDNDFDJ {
	uint32 KKNGHGBHCGG = 13;
	bool FBJHGPDKBGM = 5;
}

message OGNBIGKHHBM {
	FJJDKDNDFDJ BJLEMFMCODD = 12;
	RogueMagicCurInfo rogue_tourn_cur_info = 15;
	CACLANLOOLK GCGLNKFDKKN = 4;
	LineupInfo rogue_lineup_info = 8;
}

message HCJGPMDGBJO {
	repeated RogueMagicGameUnit EPCKCOOKCLJ = 1;
	repeated RogueMagicScepter KLMGAEBEAGK = 15;
	repeated uint32 MNKCJFELCNG = 5;
	repeated uint32 BLBFDCGCEDA = 7;
}
message RogueMagicBattleFailSettleInfoScNotify {
	RogueMagicCurSceneInfo rogue_tourn_cur_scene_info = 1;
	OGNBIGKHHBM tourn_finish_info = 10;
}
message RogueMagicSettleCsReq {
}
message RogueMagicSettleScRsp {
	RogueMagicCurSceneInfo rogue_tourn_cur_scene_info = 12;
	OGNBIGKHHBM tourn_finish_info = 8;
	HCJGPMDGBJO MGCFOGLKMCH = 10;
	ItemList GFONFDBFBNA = 13;
	uint32 retcode = 9;
}
message RogueMagicReviveCostUpdateScNotify {
	ItemCostData rogue_revive_cost = 14;
}
message RogueMagicReviveAvatarCsReq {
	repeated uint32 base_avatar_id_list = 2;
	uint32 interacted_prop_entity_id = 3;
}
message RogueMagicReviveAvatarScRsp {
	ItemCostData rogue_revive_cost = 4;
	uint32 retcode = 7;
}
message RogueMagicQueryCsReq {
}

message OLFGBAMEFJI {
	uint32 OFBIAHGOPCM = 13;
	uint32 NNNKJKCLBLO = 14;
	uint32 HMKGBMIDGOP = 5;
	uint32 NJIEMPGEEOG = 9;
	repeated RogueMagicGameUnitInfo rogue_magic_unit_info_list = 1233;
	uint32 BLFDFMCFFIM = 2;
	repeated RogueMagicGameScepterInfo magic_scepter_info_list = 1106;
	uint32 IPODNBLJPOL = 11;
	uint32 FONNGHLGJFA = 12;
	uint32 extra_round_limit = 8;
	repeated uint32 JLHFOJODOKG = 816;
	repeated uint32 avatar_id_list = 1688;
	uint32 game_style_type = 15;
}

message KOIICMIEAEF {
	repeated uint32 DPPLCDDHBGE = 1520;
}

message RogueMagicAreaInfo {
	bool completed = 2;
	bool is_unlocked = 11;
	repeated uint32 NPBNMMKHKOP = 13;
	uint32 IFPOILOPFAG = 7;
	bool is_taken_reward = 3;
	OLFGBAMEFJI record_info = 6;
	KOIICMIEAEF CGAIJCCLKBH = 14;
	uint32 area_id = 8;
}

message RogueMagicDifficultyInfo {
	uint32 difficulty_id = 12;
	bool is_unlocked = 7;
}

message RogueMagicStoryInfo {
	repeated uint32 finished_magic_story_list = 10;
}

message RogueMagicGetInfo {
	RogueMagicStoryInfo story_info = 1;
	repeated OOCEOILKCFI rogue_magic_scepter_info_list = 9;
	repeated RogueMagicAreaInfo rogue_tourn_area_info = 4;
	repeated RogueMagicDifficultyInfo rogue_tourn_difficulty_info = 15;
	repeated RogueMagicUnitInfo rogue_magic_unit_info_list = 6;
	repeated uint32 KGLBNDEAPHF = 5;
	RogueMagicTalentInfo rogue_magic_talent_info = 2;
}
message RogueMagicQueryScRsp {
	RogueMagicCurInfo rogue_tourn_cur_info = 5;
	uint32 retcode = 14;
	RogueMagicGetInfo rogue_get_info = 3;
}
message RogueMagicScepterDressInUnitCsReq {
	uint32 scepter_id = 1;
	uint32 dress_magic_unit_unique_id = 5;
	uint32 dice_slot_id = 3;
}
message RogueMagicScepterDressInUnitScRsp {
	uint32 retcode = 12;
}
message RogueMagicAutoDressInUnitCsReq {
	repeated uint32 BHKANKFPDCP = 13;
}
message RogueMagicAutoDressInUnitScRsp {
	uint32 retcode = 13;
}
message RogueMagicSetAutoDressInMagicUnitCsReq {
	bool KHDHAHNNALM = 6;
}
message RogueMagicSetAutoDressInMagicUnitScRsp {
	bool KHDHAHNNALM = 7;
	uint32 retcode = 4;
}
message RogueMagicAutoDressInMagicUnitChangeScNotify {
	bool KHDHAHNNALM = 12;
}
message RogueMagicScepterTakeOffUnitCsReq {
	uint32 scepter_id = 3;
	repeated uint32 BHKANKFPDCP = 15;
}
message RogueMagicScepterTakeOffUnitScRsp {
	uint32 retcode = 14;
}
message RogueMagicUnitComposeCsReq {
	repeated uint32 BHKANKFPDCP = 1;
}
message RogueMagicUnitComposeScRsp {
	uint32 retcode = 11;
}
message RogueMagicUnitReforgeCsReq {
	repeated uint32 BHKANKFPDCP = 1;
}
message RogueMagicUnitReforgeScRsp {
	uint32 retcode = 14;
}

message RogueMagicTalentInfo {
	uint32 CMADMLIALJL = 9;
	RogueTalentInfoList talent_info_list = 11;
}
message RogueMagicGetTalentInfoCsReq {
}
message RogueMagicGetTalentInfoScRsp {
	uint32 retcode = 2;
	RogueMagicTalentInfo rogue_magic_talent_info = 12;
}
message RogueMagicEnableTalentCsReq {
	uint32 talent_id = 7;
}
message RogueMagicEnableTalentScRsp {
	uint32 retcode = 9;
	RogueMagicTalentInfo rogue_magic_talent_info = 3;
}
message RogueMagicGetMiscRealTimeDataCsReq {
}
message RogueMagicGetMiscRealTimeDataScRsp {
	uint32 retcode = 2;
	FJJDKDNDFDJ BJLEMFMCODD = 6;
	CACLANLOOLK GCGLNKFDKKN = 12;
}
message RogueMagicStoryInfoUpdateScNotify {
	uint32 MNBCCBABCHA = 15;
}

enum CmdRogueModifierType {
	CmdRogueModifierTypeNone = 0;
	CmdRogueModifierAddNotify = 5398;
	CmdRogueModifierUpdateNotify = 5306;
	CmdRogueModifierSelectCellScRsp = 5379;
	CmdRogueModifierDelNotify = 5341;
	CmdRogueModifierSelectCellCsReq = 5353;
	CmdRogueModifierStageStartNotify = 5355;
}

enum RogueModifierSourceType {
	ROGUE_MODIFIER_SOURCE_NONE = 0;
	ROGUE_MODIFIER_SOURCE_DICE_ROLL = 1;
	ROGUE_MODIFIER_SOURCE_AEON = 2;
	ROGUE_MODIFIER_SOURCE_BOARD_EVENT = 3;
	ROGUE_MODIFIER_SOURCE_DIALOG_EVENT = 4;
	ROGUE_MODIFIER_SOURCE_MIRACLE = 5;
	ROGUE_MODIFIER_SOURCE_CELL_MARK = 6;
	ROGUE_MODIFIER_SOURCE_AEON_TALENT = 7;
	ROGUE_MODIFIER_SOURCE_BOSS_DECAY = 8;
	ROGUE_MODIFIER_SOURCE_DICE_BRANCH = 9;
}

enum RogueModifierContentType {
	ROGUE_MODIFIER_CONTENT_DEFINITE = 0;
	ROGUE_MODIFIER_CONTENT_RANDOM = 1;
}

message EDDHMIGFDJI {
	uint32 select_cell_id = 1;
	uint32 MBGKCKLDHIB = 5;
	bool confirm = 10;
}

message FOIACPFKDHK {
	repeated uint32 ONNJGDJNFLG = 9;
	uint32 MBGKCKLDHIB = 5;
	bool confirm = 10;
	uint32 select_cell_id = 2;
}

message POGCNJMNGPI {
	uint32 select_cell_id = 3;
	bool confirm = 15;
	repeated uint32 ONNJGDJNFLG = 6;
}

message AINBLBBFDBJ {
	uint32 select_cell_id = 14;
	repeated uint32 NHGOJDODGMA = 8;
	uint32 NIJAGOAJPEM = 12;
	bool confirm = 15;
}

message AJEEIAKEMIP {
	uint32 CEHFIILMJKM = 2;
}

message KHMJBJLOBPG {
	uint32 CPOCNGEKIIB = 1;
}

message GFGDODHMBPK {
	uint32 KOKPCEAMABC = 4;
}

message NPDIPKHDCNF {
	repeated uint32 NHGOJDODGMA = 11;
	uint32 select_cell_id = 13;
	bool confirm = 3;
	uint32 block_type = 8;
}

message EGALAGNAEFB {
	uint32 OLGLJHECDOF = 3;
	uint32 GPDEIIIOIPN = 11;
	uint32 GCLEBGDDIIP = 5;
}

message NDGLJKNKEFK {
	uint32 maze_buff_id = 1;
}

message EGFDAJDIHNJ {
	uint32 item_id = 3;
	uint32 item_count = 1;
}

message PNIKOFBIMJL {
	uint32 num = 11;
	uint32 EOAEFBKNFFE = 13;
	uint32 NEJDMEGNFGK = 1;
}

message JJDKOEEHBJO {
	uint32 num = 3;
	uint32 OOOFGDBLDCE = 2;
}

message OKGMDMJHCMK {
	uint32 CEHFIILMJKM = 15;
}

message CFKBHPNBCNB {
	uint32 MBGKCKLDHIB = 13;
}

message BBBEOEOIFJK {
	bool confirm = 11;
	uint32 select_cell_id = 15;
	repeated uint32 ONNJGDJNFLG = 4;
}

message AHPNAPGPJEG {
	uint32 maze_buff_id = 9;
	uint32 AMOJFMFEOGE = 6;
}

message RogueModifierContent {
	uint32 content_modifier_effect_id = 5;
	uint32 AFFJHMJDIBN = 7;
	RogueModifierContentType modifier_content_type = 8;
}

message ChessRogueModifierInfo {
	bool confirm = 5;
	uint32 select_cell_id = 10;
	repeated uint32 modifier_effect_cell_id_list = 4;
}

message MDBJBIEKKEE {
	uint32 LIPAPOMHMCE = 11;
}

message BLCPNBIKCLP {
	uint32 count = 7;
}

message RogueModifier {
	RogueModifierContent modifier_content = 7;
	uint64 modifier_id = 14;
	RogueModifierSourceType modifier_source_type = 3;
	oneof KFELKJLDKEH {
		ChessRogueModifierInfo modifier_info = 1772;
	}
}

message EENDHPKPFLP {
	repeated RogueModifier MEBJCLENPIO = 15;
}
message RogueModifierAddNotify {
	RogueModifier modifier = 3;
}
message RogueModifierSelectCellCsReq {
	uint32 cell_id = 9;
}
message RogueModifierSelectCellScRsp {
	uint32 retcode = 3;
	uint32 cell_id = 9;
	ItemList JDIJKEGCIBP = 7;
}
message RogueModifierUpdateNotify {
	RogueModifier modifier = 12;
}
message RogueModifierDelNotify {
	uint64 modifier_id = 3;
}
message RogueModifierStageStartNotify {
	RogueModifierSourceType modifier_source_type = 14;
}

enum CmdRogueTournType {
	CmdRogueTournTypeNone = 0;
	CmdRogueTournLeaveScRsp = 6096;
	CmdRogueTournEnablePermanentTalentCsReq = 6073;
	CmdRogueTournGetMiscRealTimeDataCsReq = 6022;
	CmdRogueTournHandBookNotify = 6023;
	CmdRogueTournLeaveRogueCocoonSceneScRsp = 6099;
	CmdRogueTournEnterRogueCocoonSceneCsReq = 6027;
	CmdRogueTournRenameBuildRefScRsp = 6040;
	CmdRogueTournDeleteBuildRefCsReq = 6050;
	CmdRogueTournGetSeasonTalentInfoCsReq = 6064;
	CmdRogueTournConfirmSettleScRsp = 6081;
	CmdRogueTournGetArchiveRepositoryCsReq = 6024;
	CmdRogueTournDifficultyCompNotify = 6018;
	CmdRogueTournGetCurRogueCocoonInfoCsReq = 6089;
	CmdRogueTournReEnterRogueCocoonStageCsReq = 6065;
	CmdRogueTournExpNotify = 6039;
	CmdRogueTournEnterCsReq = 6036;
	CmdRogueTournReviveCostUpdateScNotify = 6097;
	CmdRogueTournEnableSeasonTalentCsReq = 6079;
	CmdRogueTournQueryCsReq = 6045;
	CmdRogueTournSettleCsReq = 6076;
	CmdRogueTournStartCsReq = 6056;
	CmdRogueTournEnterRoomCsReq = 6015;
	CmdRogueTournGetPermanentTalentInfoScRsp = 6067;
	CmdRogueTournLeaveCsReq = 6012;
	CmdRogueTournAreaUpdateScNotify = 6077;
	CmdRogueTournRenameBuildRefCsReq = 6082;
	CmdRogueTournSaveBuildRefScRsp = 6094;
	CmdRogueTournEnterRoomScRsp = 6026;
	CmdRogueTournGetCurRogueCocoonInfoScRsp = 6055;
	CmdRogueTournTakeExpRewardScRsp = 6054;
	CmdRogueTournGetAllBuildRefCsReq = 6032;
	CmdRogueTournDeleteArchiveCsReq = 6063;
	CmdRogueTournBattleFailSettleInfoScNotify = 6038;
	CmdRogueTournReviveAvatarScRsp = 6052;
	CmdRogueTournGetSeasonTalentInfoScRsp = 6019;
	CmdRogueTournGetAllArchiveCsReq = 6093;
	CmdRogueTournGetAllArchiveScRsp = 6070;
	CmdRogueTournTakeExpRewardCsReq = 6016;
	CmdRogueTournLevelInfoUpdateScNotify = 6046;
	CmdRogueTournTitanUpdateTitanBlessProgressScNotify = 6095;
	CmdRogueTournStartScRsp = 6020;
	CmdRogueTournSaveBuildRefCsReq = 6049;
	CmdRogueTournReviveAvatarCsReq = 6068;
	CmdRogueTournDeleteArchiveScRsp = 6035;
	CmdRogueTournConfirmSettleCsReq = 6013;
	CmdRogueTournReEnterRogueCocoonStageScRsp = 6090;
	CmdRogueTournGetSettleInfoCsReq = 6084;
	CmdRogueTournEnterScRsp = 6058;
	CmdRogueTournClearArchiveNameScNotify = 6028;
	CmdRogueTournEnterLayerScRsp = 6083;
	CmdRogueTournEnablePermanentTalentScRsp = 6072;
	CmdRogueTournRenameArchiveScRsp = 6074;
	CmdRogueTournQueryScRsp = 6047;
	CmdRogueTournEnterLayerCsReq = 6098;
	CmdRogueTournRenameArchiveCsReq = 6030;
	CmdRogueTournSettleScRsp = 6017;
	CmdRogueTournGetMiscRealTimeDataScRsp = 6033;
	CmdRogueTournEnterRogueCocoonSceneScRsp = 6025;
	CmdRogueTournGetAllBuildRefScRsp = 6034;
	CmdRogueTournResetPermanentTalentScRsp = 6100;
	CmdRogueTournWeekChallengeUpdateScNotify = 6014;
	CmdRogueTournDeleteBuildRefScRsp = 6037;
	CmdRogueTournGetSettleInfoScRsp = 6085;
	CmdRogueTournResetPermanentTalentCsReq = 6011;
	CmdRogueTournLeaveRogueCocoonSceneCsReq = 6061;
	CmdRogueTournEnableSeasonTalentScRsp = 6059;
	CmdRogueTournGetPermanentTalentInfoCsReq = 6051;
	CmdRogueTournGetArchiveRepositoryScRsp = 6092;
}

enum RogueTournLevelStatus {
	ROGUE_TOURN_LEVEL_STATUS_NONE = 0;
	ROGUE_TOURN_LEVEL_STATUS_PROCESSING = 1;
	ROGUE_TOURN_LEVEL_STATUS_FINISHED = 2;
	ROGUE_TOURN_LEVEL_STATUS_SETTLED = 3;
}

enum RogueTournLayerStatus {
	ROGUE_TOURN_LAYER_STATUS_NONE = 0;
	ROGUE_TOURN_LAYER_STATUS_PROCESSING = 1;
	ROGUE_TOURN_LAYER_STATUS_FINISH = 2;
}

enum RogueTournRoomStatus {
	ROGUE_TOURN_ROOM_STATUS_NONE = 0;
	ROGUE_TOURN_ROOM_STATUS_INITED = 1;
	ROGUE_TOURN_ROOM_STATUS_PROCESSING = 2;
	ROGUE_TOURN_ROOM_STATUS_FINISH = 3;
}

enum RogueTournSettleReason {
	ROGUE_TOURN_SETTLE_REASON_NONE = 0;
	ROGUE_TOURN_SETTLE_REASON_WIN = 1;
	ROGUE_TOURN_SETTLE_REASON_FAIL = 2;
	ROGUE_TOURN_SETTLE_REASON_INTERRUPT = 3;
}

enum RogueTournHandbookType {
	ROGUE_TOURN_HANDBOOK_NONE = 0;
	ROGUE_TOURN_HANDBOOK_SIMPLE_MIRACLE = 1;
	ROGUE_TOURN_HANDBOOK_HEX_MIRACLE = 2;
	ROGUE_TOURN_HANDBOOK_BUFF = 3;
	ROGUE_TOURN_HANDBOOK_EVENT = 4;
	ROGUE_TOURN_HANDBOOK_FORMULA = 5;
	ROGUE_TOURN_HANDBOOK_TITAN_BLESS = 6;
}

message RogueTournCurSceneInfo {
	SceneInfo scene = 3;
	RogueMapRotateInfo rotate_info = 6;
	LineupInfo lineup = 15;
}

message RogueTournCurInfo {
	RogueTournCurAreaInfo IKOBKINKHCF = 1;
	oneof KFELKJLDKEH {
		RogueTournCurGameInfo rogue_tourn_cur_game_info = 184;
	}
}

message NKPKIAAMODG {
	uint32 LDFEHKDCNEL = 8;
	uint32 JDBAHPEBFJC = 1;
	uint32 MNNKJPLIILJ = 6;
	bool FBJHGPDKBGM = 4;
}

message NNIJCDKHPKL {
	uint32 CDINHFHBMOG = 1;
	bool FBJHGPDKBGM = 13;
	uint32 AIPLFLIBPKJ = 6;
	uint32 JEDJBEDKCJI = 12;
}

message GPNJMEHNDMN {
	uint32 HIPJHPJOLBE = 5;
	bool FBJHGPDKBGM = 8;
	uint32 JAPDCMJPIEJ = 15;
}

message FBHNFJCNHML {
	bool FBJHGPDKBGM = 7;
	uint32 JAPDCMJPIEJ = 9;
}

message RogueTournModuleInfo {
	bool allow_food = 12;
}

message RogueTournCurGameInfo {
	RogueTournFormulaInfo tourn_formula_info = 5;
	KeywordUnlockValue unlock_value = 4;
	RogueTournModuleInfo tourn_module_info = 9;
	ChessRogueMiracleInfo miracle_info = 8;
	RogueTournGameDifficultyInfo game_difficulty_info = 10;
	RogueTournGameAreaInfo rogue_tourn_game_area_info = 1;
	RogueTournLineupInfo lineup = 2;
	RogueGameItemValue item_value = 11;
	RogueTournLevelInfo level = 7;
	ChessRogueBuffInfo buff = 15;
	CGJNHNMAMDH JMIDLLDKJBI = 3;
}

message RogueTournLevelInfo {
	bool EJOIJGCLCJO = 7;
	bool LGBOHDICFPK = 13;
	uint32 cur_level_index = 14;
	repeated RogueTournLevel level_info_list = 9;
	RogueTournSettleReason reason = 3;
	RogueTournLevelStatus status = 2;
}

message RogueTournGameAreaInfo {
	uint32 game_area_id = 1;
	uint32 game_week = 11;
}

message RogueTournGameDifficultyInfo {
	repeated uint32 difficulty_id_list = 5;
}

message RogueTournLevel {
	uint32 cur_room_index = 2;
	repeated RogueTournRoomList tourn_room_list = 8;
	uint32 layer_id = 11;
	uint32 level_index = 6;
	RogueTournLayerStatus status = 15;
}

message RogueTournRoomList {
	uint32 room_index = 6;
	uint32 room_id = 13;
	uint32 EIPNNEJNNKJ = 2;
	RogueTournRoomStatus status = 11;
}
message RogueTournStartCsReq {
	repeated uint32 base_avatar_id_list = 6;
	uint32 area_id = 10;
	bool LGBOHDICFPK = 15;
	bool EJOIJGCLCJO = 5;
}
message RogueTournStartScRsp {
	uint32 week = 11;
	RogueTournCurSceneInfo rogue_tourn_cur_scene_info = 15;
	uint32 retcode = 7;
	RogueTournCurInfo rogue_tourn_cur_info = 13;
}
message RogueTournEnterCsReq {
}
message RogueTournEnterScRsp {
	RogueTournCurSceneInfo rogue_tourn_cur_scene_info = 9;
	RogueTournCurInfo rogue_tourn_cur_info = 13;
	uint32 retcode = 8;
}
message RogueTournLeaveCsReq {
}
message RogueTournLeaveScRsp {
	uint32 retcode = 12;
	RogueTournCurSceneInfo rogue_tourn_cur_scene_info = 1;
}
message RogueTournSettleCsReq {
}

message RogueTournFinishInfo {
	NKPKIAAMODG CJCOJAMLEEL = 3;
	NNIJCDKHPKL GCGLNKFDKKN = 5;
	LineupInfo rogue_lineup_info = 8;
	FBHNFJCNHML PFOEPFPHFNJ = 9;
	GPNJMEHNDMN KGCIAIAFIBE = 12;
	KCLCHJMNPGL CLKHPONDDDO = 4;
	RogueTournCurInfo rogue_tourn_cur_info = 10;
}
message RogueTournSettleScRsp {
	RogueTournCurSceneInfo rogue_tourn_cur_scene_info = 10;
	RogueTournFinishInfo tourn_finish_info = 2;
	uint32 retcode = 5;
}
message RogueTournEnterRoomCsReq {
	uint32 cur_room_index = 7;
	uint32 FLLABLFBEIK = 9;
}
message RogueTournEnterRoomScRsp {
	RogueTournCurSceneInfo rogue_tourn_cur_scene_info = 12;
	uint32 retcode = 15;
}
message RogueTournEnterLayerCsReq {
	uint32 FLLABLFBEIK = 8;
	uint32 cur_level_index = 15;
}
message RogueTournEnterLayerScRsp {
	uint32 retcode = 4;
	RogueTournCurSceneInfo rogue_tourn_cur_scene_info = 5;
}
message RogueTournLevelInfoUpdateScNotify {
	RogueTournLevelStatus status = 13;
	repeated RogueTournLevel level_info_list = 3;
	uint32 cur_level_index = 8;
	RogueTournSettleReason reason = 7;
}
message RogueTournTakeExpRewardCsReq {
	repeated uint32 LOPMHJFBHIM = 15;
	uint32 sub_tourn_id = 12;
}
message RogueTournTakeExpRewardScRsp {
	ItemList reward = 15;
	uint32 retcode = 14;
	uint32 exp = 4;
	repeated uint32 taken_level_rewards = 12;
}
message RogueTournExpNotify {
	uint32 exp = 5;
}
message RogueTournQueryCsReq {
}

message RogueTournAreaInfo {
	bool is_taken_reward = 2;
	bool GMOPLJJGBPO = 12;
	repeated uint32 unlocked_tourn_difficulty_list = 1;
	bool completed = 8;
	bool is_unlocked = 10;
	uint32 area_id = 9;
}

message ExtraScoreInfo {
	uint32 week = 12;
	uint32 LFPCCPOLJPC = 3;
	int64 end_time = 11;
	bool GPODHHAOHNP = 14;
}

message RogueTournExpInfo {
	repeated uint32 taken_level_rewards = 6;
	uint32 exp = 7;
}

message RogueTournPermanentTalentInfo {
	RogueTalentInfoList talent_info_list = 12;
	uint32 tourn_talent_coin_num = 10;
}

message RogueTournDifficultyInfo {
	uint32 difficulty_id = 6;
	bool is_unlocked = 9;
}

message RogueTournSeasonInfo {
	uint32 sub_tourn_id = 7;
	uint32 main_tourn_id = 10;
}

message RogueTournHandbookInfo {
	repeated uint32 NFFBJBBCDMG = 15;
	repeated uint32 BKGJPCCLIDN = 4;
	repeated uint32 handbook_buff_list = 5;
	repeated uint32 FAJCNMEKKNN = 12;
	repeated uint32 PPCONKKPIPM = 7;
	uint32 rogue_tourn_handbook_const = 1;
	repeated uint32 KCDLMNINCGE = 13;
}

message KCLCHJMNPGL {
	uint32 OFGBJCCCIKE = 2;
	uint32 NGIAMBEIHPI = 4;
}

message RogueTournInfo {
	repeated RogueTournAreaInfo rogue_tourn_area_info = 12;
	RogueTournHandbookInfo rogue_tourn_handbook = 2;
	repeated RogueTournDifficultyInfo rogue_tourn_difficulty_info = 1;
	RogueTournPermanentTalentInfo permanent_info = 9;
	KCLCHJMNPGL LKCEFCLJCBM = 7;
	repeated RogueTournSaveList rogue_tourn_save_list = 5;
	RogueTournSeasonInfo rogue_season_info = 8;
	GIGPOFFBIEO LLAOOGCHHDK = 15;
	ExtraScoreInfo extra_score_info = 6;
	RogueTournExpInfo rogue_tourn_exp_info = 4;
}
message RogueTournQueryScRsp {
	RogueTournCurInfo rogue_tourn_cur_info = 7;
	uint32 retcode = 14;
	RogueTournInfo rogue_get_info = 11;
}
message RogueTournAreaUpdateScNotify {
	repeated RogueTournAreaInfo rogue_tourn_area_info = 5;
}

message RogueTournSaveList {
	BKFFNNAIODC data = 1;
	RogueTournCurInfo rogue_tourn_cur_info = 8;
	int64 time = 15;
	string name = 10;
	uint32 max_times = 3;
	int64 end_time = 12;
	RogueTournSeasonInfo rogue_season_info = 13;
}

message BKFFNNAIODC {
	repeated GameRogueMiracle miracle_list = 8;
	uint32 item_value = 3;
	repeated RogueCommonBuff buff_list = 14;
}
message RogueTournGetAllArchiveCsReq {
}
message RogueTournGetAllArchiveScRsp {
	uint32 retcode = 5;
	repeated RogueTournSaveList EDJPODPNMED = 11;
}
message RogueTournDeleteArchiveCsReq {
	uint32 max_times = 6;
}
message RogueTournDeleteArchiveScRsp {
	uint32 max_times = 4;
	uint32 retcode = 7;
}
message RogueTournRenameArchiveCsReq {
	uint32 max_times = 15;
	string name = 6;
}
message RogueTournRenameArchiveScRsp {
	uint32 retcode = 4;
	uint32 max_times = 11;
	string name = 6;
}
message RogueTournClearArchiveNameScNotify {
	uint32 max_times = 3;
}

message OOMGHIBBCBN {
	repeated uint32 HMJFCDLCIFD = 10;
	repeated BMPCJDEAIIH HGCGILABNDL = 8;
	uint32 sub_tourn_id = 11;
	repeated uint32 MKAIFJIBJIK = 3;
	uint32 main_tourn_id = 4;
	repeated uint32 AMLDAILBMBO = 12;
	repeated uint32 JNCBPDHCAHI = 2;
}

message BMPCJDEAIIH {
	uint32 OFIKKOGKLGO = 9;
	repeated uint32 BIJGJECJMHM = 7;
	uint32 avatar_id = 4;
	uint32 FCLOLOBFPAL = 15;
	uint32 max_times = 11;
}

message ABDABIIKOJC {
	int64 time = 12;
	OOMGHIBBCBN GNDIODGOGPI = 4;
	uint32 max_times = 13;
	string name = 3;
}
message RogueTournGetAllBuildRefCsReq {
}
message RogueTournGetAllBuildRefScRsp {
	repeated ABDABIIKOJC IICCNGOKKLF = 2;
	uint32 retcode = 3;
}
message RogueTournDeleteBuildRefCsReq {
	repeated uint32 NDOBMAJMLNK = 12;
}
message RogueTournDeleteBuildRefScRsp {
	uint32 retcode = 11;
	repeated uint32 NDOBMAJMLNK = 3;
}
message RogueTournSaveBuildRefCsReq {
	uint32 max_times = 4;
	OOMGHIBBCBN GNDIODGOGPI = 5;
	string name = 2;
}
message RogueTournSaveBuildRefScRsp {
	uint32 retcode = 10;
	string name = 11;
	uint32 max_times = 13;
}
message RogueTournRenameBuildRefCsReq {
	string name = 11;
	uint32 max_times = 10;
}
message RogueTournRenameBuildRefScRsp {
	uint32 max_times = 4;
	string name = 10;
	uint32 retcode = 2;
}
message RogueTournGetPermanentTalentInfoCsReq {
}
message RogueTournGetPermanentTalentInfoScRsp {
	uint32 retcode = 3;
	RogueTournPermanentTalentInfo permanent_info = 1;
}
message RogueTournEnablePermanentTalentCsReq {
	uint32 talent_id = 11;
}
message RogueTournEnablePermanentTalentScRsp {
	RogueTournPermanentTalentInfo permanent_info = 12;
	uint32 retcode = 13;
}
message RogueTournResetPermanentTalentCsReq {
}
message RogueTournResetPermanentTalentScRsp {
	RogueTournPermanentTalentInfo permanent_info = 6;
	uint32 retcode = 10;
}
message RogueTournEnterRogueCocoonSceneCsReq {
	repeated PHHKOMBGPPK avatar_list = 11;
	uint32 difficulty_level = 2;
	bool EIDDMGHLPBP = 1;
	uint32 IBGNLBOEBCG = 10;
	uint32 PILMKHCKMED = 13;
}
message RogueTournEnterRogueCocoonSceneScRsp {
	uint32 retcode = 2;
	RogueTournCurSceneInfo rogue_tourn_cur_scene_info = 4;
}
message RogueTournLeaveRogueCocoonSceneCsReq {
}
message RogueTournLeaveRogueCocoonSceneScRsp {
	RogueTournCurSceneInfo rogue_tourn_cur_scene_info = 4;
	uint32 retcode = 11;
}
message RogueTournReEnterRogueCocoonStageCsReq {
	bool EIDDMGHLPBP = 7;
}
message RogueTournReEnterRogueCocoonStageScRsp {
	SceneBattleInfo battle_info = 8;
	uint32 retcode = 14;
}
message RogueTournGetCurRogueCocoonInfoCsReq {
}
message RogueTournGetCurRogueCocoonInfoScRsp {
	uint32 PILMKHCKMED = 8;
	uint32 IBGNLBOEBCG = 14;
	uint32 retcode = 13;
	uint32 difficulty_level = 15;
}
message RogueTournDifficultyCompNotify {
	repeated uint32 GGGFIGCPKLF = 7;
}

message JNIAOGIIOGB {
	uint32 miracle_id = 10;
}

message JCCCACNFDJG {
	uint32 miracle_id = 3;
}

message JFIHGDPOIID {
	uint32 buff_id = 1;
}

message ECGOCHPMCPD {
	uint32 event_id = 7;
}

message APFJLOFINFJ {
	uint32 formula_id = 11;
}

message FIDFNNCJAJE {
	uint32 IJPPKNKNLNL = 10;
	uint32 level = 14;
	uint32 IBOEKJBOMOG = 7;
	uint32 DCHPOGOBDKO = 9;
}
message RogueTournHandBookNotify {
	oneof KFELKJLDKEH {
		JNIAOGIIOGB IIHOPMEEAJA = 10;
		JCCCACNFDJG GPOLBDGOOOD = 15;
		JFIHGDPOIID buff = 12;
		ECGOCHPMCPD NFLDODIABCL = 8;
		APFJLOFINFJ tourn_formula_info = 9;
		FIDFNNCJAJE JMIDLLDKJBI = 3;
	}
}
message RogueTournGetSettleInfoCsReq {
	uint32 area_id = 11;
}
message RogueTournGetSettleInfoScRsp {
	uint32 retcode = 1;
	RogueTournFinishInfo tourn_finish_info = 10;
}
message RogueTournConfirmSettleCsReq {
	uint32 max_times = 15;
	uint32 area_id = 8;
	string name = 13;
}
message RogueTournConfirmSettleScRsp {
	ItemList JPLAAPJCCBH = 2;
	RogueTournCurSceneInfo rogue_tourn_cur_scene_info = 6;
	uint32 retcode = 4;
	ItemList GFONFDBFBNA = 8;
	RogueTournSaveList OHHJKGFOFHB = 5;
}
message RogueTournWeekChallengeUpdateScNotify {
	ExtraScoreInfo extra_score_info = 8;
}
message RogueTournGetMiscRealTimeDataCsReq {
}
message RogueTournGetMiscRealTimeDataScRsp {
	uint32 retcode = 12;
	NNIJCDKHPKL GCGLNKFDKKN = 7;
	KCLCHJMNPGL CLKHPONDDDO = 2;
	GPNJMEHNDMN KGCIAIAFIBE = 4;
	FBHNFJCNHML PFOEPFPHFNJ = 5;
	NKPKIAAMODG CJCOJAMLEEL = 1;
}
message RogueTournGetArchiveRepositoryCsReq {
}
message RogueTournGetArchiveRepositoryScRsp {
	repeated uint32 LNEJMJBFLLH = 15;
	repeated uint32 HKDOCLOPKOH = 6;
	uint32 retcode = 5;
}
message RogueTournReviveCostUpdateScNotify {
	ItemCostData rogue_revive_cost = 4;
}
message RogueTournReviveAvatarCsReq {
	repeated uint32 base_avatar_id_list = 14;
	uint32 interacted_prop_entity_id = 13;
}
message RogueTournReviveAvatarScRsp {
	ItemCostData rogue_revive_cost = 2;
	uint32 retcode = 13;
}
message RogueTournBattleFailSettleInfoScNotify {
	RogueTournCurSceneInfo rogue_tourn_cur_scene_info = 5;
	RogueTournFinishInfo tourn_finish_info = 12;
}

message GIGPOFFBIEO {
	uint32 CMOGHIANDFL = 3;
	RogueTalentInfoList talent_info_list = 9;
}
message RogueTournGetSeasonTalentInfoCsReq {
}
message RogueTournGetSeasonTalentInfoScRsp {
	uint32 retcode = 15;
	GIGPOFFBIEO LLAOOGCHHDK = 6;
}
message RogueTournEnableSeasonTalentCsReq {
	uint32 talent_id = 9;
}
message RogueTournEnableSeasonTalentScRsp {
	uint32 retcode = 14;
	GIGPOFFBIEO LLAOOGCHHDK = 10;
}
message RogueTournTitanUpdateTitanBlessProgressScNotify {
	uint32 LDFGIFDFPCF = 11;
}

enum CmdRollShopType {
	CmdRollShopTypeNone = 0;
	CmdGetRollShopInfoScRsp = 6915;
	CmdDoGachaInRollShopScRsp = 6919;
	CmdGetRollShopInfoCsReq = 6901;
	CmdDoGachaInRollShopCsReq = 6917;
	CmdTakeRollShopRewardCsReq = 6902;
	CmdTakeRollShopRewardScRsp = 6912;
}
message GetRollShopInfoCsReq {
	uint32 roll_shop_id = 2;
}
message GetRollShopInfoScRsp {
	uint32 roll_shop_id = 8;
	uint32 gacha_random = 5;
	repeated uint32 shop_group_id_list = 2;
	uint32 retcode = 9;
}
message DoGachaInRollShopCsReq {
	uint32 roll_shop_id = 7;
	uint32 gacha_count = 12;
	uint32 gacha_random = 5;
}
message DoGachaInRollShopScRsp {
	ItemList reward = 15;
	uint32 PENILHGLHHM = 10;
	uint32 reward_display_type = 12;
	uint32 roll_shop_id = 4;
	uint32 retcode = 11;
}
message TakeRollShopRewardCsReq {
	uint32 roll_shop_id = 14;
}
message TakeRollShopRewardScRsp {
	uint32 retcode = 9;
	uint32 group_type = 1;
	uint32 roll_shop_id = 4;
	ItemList reward = 2;
}

enum CmdSceneType {
	CmdSceneTypeNone = 0;
	CmdDeleteSummonUnitCsReq = 1434;
	CmdSceneGroupRefreshScNotify = 1475;
	CmdSpringRefreshScRsp = 1436;
	CmdGetCurSceneInfoCsReq = 1497;
	CmdSetClientPausedCsReq = 1466;
	CmdSceneEntityMoveScRsp = 1405;
	CmdGameplayCounterRecoverScRsp = 1452;
	CmdSyncServerSceneChangeNotify = 1440;
	CmdEntityBindPropScRsp = 1460;
	CmdUpdateMechanismBarScNotify = 1486;
	CmdGameplayCounterUpdateScNotify = 1476;
	CmdStartCocoonStageCsReq = 1437;
	CmdSceneCastSkillScRsp = 1402;
	CmdEnterSceneCsReq = 1417;
	CmdLastSpringRefreshTimeNotify = 1478;
	CmdReEnterLastElementStageScRsp = 1418;
	CmdStartCocoonStageScRsp = 1488;
	CmdTrainWorldIdChangeScNotify = 1431;
	CmdEnterSectionScRsp = 1492;
	CmdGroupStateChangeScNotify = 1438;
	CmdInteractPropScRsp = 1453;
	CmdGameplayCounterCountDownScRsp = 1456;
	CmdDeactivateFarmElementScRsp = 1413;
	CmdSetClientPausedScRsp = 1428;
	CmdGameplayCounterRecoverCsReq = 1447;
	CmdRefreshTriggerByClientScNotify = 1432;
	CmdChangePropTimelineInfoCsReq = 1441;
	CmdUpdateGroupPropertyCsReq = 1461;
	CmdSceneReviveAfterRebattleScRsp = 1420;
	CmdGetUnlockTeleportCsReq = 1427;
	CmdRefreshTriggerByClientScRsp = 1419;
	CmdGameplayCounterCountDownCsReq = 1459;
	CmdSceneEnterStageScRsp = 1462;
	CmdUpdateFloorSavedValueNotify = 1411;
	CmdReEnterLastElementStageCsReq = 1495;
	CmdActivateFarmElementScRsp = 1485;
	CmdDeactivateFarmElementCsReq = 1408;
	CmdInteractPropCsReq = 1498;
	CmdSceneCastSkillCostMpScRsp = 1463;
	CmdSceneCastSkillCsReq = 1479;
	CmdGetEnteredSceneScRsp = 1500;
	CmdGetEnteredSceneCsReq = 1487;
	CmdSetGroupCustomSaveDataCsReq = 1412;
	CmdEnterSceneByServerScNotify = 1499;
	CmdActivateFarmElementCsReq = 1446;
	CmdSpringRefreshCsReq = 1494;
	CmdEntityBindPropCsReq = 1415;
	CmdSceneEntityMoveCsReq = 1410;
	CmdSceneReviveAfterRebattleCsReq = 1409;
	CmdSetCurInteractEntityScRsp = 1401;
	CmdUnlockTeleportNotify = 1450;
	CmdSyncEntityBuffChangeListScNotify = 1416;
	CmdGetUnlockTeleportScRsp = 1480;
	CmdEnterSceneScRsp = 1422;
	CmdScenePlaneEventScNotify = 1444;
	CmdGroupStateChangeScRsp = 1484;
	CmdChangePropTimelineInfoScRsp = 1455;
	CmdGetCurSceneInfoScRsp = 1406;
	CmdEnteredSceneChangeScNotify = 1468;
	CmdSetCurInteractEntityCsReq = 1442;
	CmdSceneCastSkillMpUpdateScNotify = 1467;
	CmdReturnLastTownScRsp = 1490;
	CmdSceneUpdatePositionVersionNotify = 1439;
	CmdSavePointsInfoNotify = 1435;
	CmdSceneEntityMoveScNotify = 1407;
	CmdRefreshTriggerByClientCsReq = 1465;
	CmdOpenChestScNotify = 1430;
	CmdDeleteSummonUnitScRsp = 1443;
	CmdSceneEnterStageCsReq = 1454;
	CmdUnlockedAreaMapScNotify = 1433;
	CmdEnterSectionCsReq = 1469;
	CmdRecoverAllLineupScRsp = 1425;
	CmdUpdateGroupPropertyScRsp = 1481;
	CmdSceneEntityTeleportCsReq = 1449;
	CmdSetGroupCustomSaveDataScRsp = 1464;
	CmdSceneCastSkillCostMpCsReq = 1426;
	CmdReturnLastTownCsReq = 1474;
	CmdGetSceneMapInfoCsReq = 1448;
	CmdSceneEntityTeleportScRsp = 1496;
	CmdGroupStateChangeCsReq = 1421;
	CmdRecoverAllLineupCsReq = 1451;
	CmdGetSceneMapInfoScRsp = 1493;
}

enum SkillExtraTag {
	SCENE_CAST_SKILL_NONE = 0;
	SCENE_CAST_SKILL_PROJECTILE_HIT = 1;
	SCENE_CAST_SKILL_PROJECTILE_LIFETIME_FINISH = 2;
}

enum MonsterBattleType {
	MONSTER_BATTLE_TYPE_NONE = 0;
	MONSTER_BATTLE_TYPE_TRIGGER_BATTLE = 1;
	MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE = 2;
	MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE = 3;
	MONSTER_BATTLE_TYPE_NO_BATTLE = 4;
}

enum SceneEntityBuffChangeType {
	SCENE_ENTITY_BUFF_CHANGE_TYPE_DEFAULT = 0;
	SCENE_ENTITY_BUFF_CHANGE_TYPE_ADD_MAZEBUFF = 1;
	SCENE_ENTITY_BUFF_CHANGE_TYPE_ADD_ADV_MODIFIER = 2;
}

enum EnterSceneReason {
	ENTER_SCENE_REASON_NONE = 0;
	ENTER_SCENE_REASON_CHALLENGE_TIMEOUT = 1;
	ENTER_SCENE_REASON_ROGUE_TIMEOUT = 2;
	ENTER_SCENE_REASON_CHANGE_STORYLINE = 3;
	ENTER_SCENE_REASON_DIMENSION_MERGE = 4;
}

enum ChestType {
	MAP_INFO_CHEST_TYPE_NONE = 0;
	MAP_INFO_CHEST_TYPE_NORMAL = 101;
	MAP_INFO_CHEST_TYPE_CHALLENGE = 102;
	MAP_INFO_CHEST_TYPE_PUZZLE = 104;
}

enum GameplayCounterUpdateReason {
	GAMEPLAY_COUNTER_UPDATE_REASON_NONE = 0;
	GAMEPLAY_COUNTER_UPDATE_REASON_ACTIVATE = 1;
	GAMEPLAY_COUNTER_UPDATE_REASON_DEACTIVATE = 2;
	GAMEPLAY_COUNTER_UPDATE_REASON_CHANGE = 3;
}

enum SceneGroupRefreshType {
	SCENE_GROUP_REFRESH_TYPE_NONE = 0;
	SCENE_GROUP_REFRESH_TYPE_LOADED = 1;
	SCENE_GROUP_REFRESH_TYPE_UNLOAD = 2;
}

message SceneActorInfo {
	uint32 uid = 14;
	uint32 base_avatar_id = 11;
	AvatarType avatar_type = 1;
	uint32 map_layer = 7;
}

message NpcMonsterRogueInfo {
	uint32 elite_group = 8;
	uint32 DNEAMPLLFME = 13;
	uint32 level = 7;
	uint32 rogue_monster_id = 2;
	uint32 hard_level_group = 3;
}

message NpcMonsterExtraInfo {
	oneof KFELKJLDKEH {
		NpcMonsterRogueInfo rogue_game_info = 1;
	}
}

message OEPANDOKEJD {
	repeated uint32 IFOEDPLJKOA = 6;
	uint32 stage_id = 3;
}

message SceneNpcMonsterInfo {
	uint32 monster_id = 3;
	bool MPFEDFBKKDF = 12;
	uint32 event_id = 7;
	bool IDPJIDNLEHH = 4;
	uint32 world_level = 1;
	OEPANDOKEJD GEIFPDHBKBF = 14;
	NpcMonsterExtraInfo extra_info = 2;
}

message NpcDialogueEventParam {
	uint32 rogue_dialogue_event_id = 8;
	uint32 arg_id = 14;
}

message NpcRogueGameInfo {
	uint32 event_unique_id = 14;
	map<uint32, uint32> KJCBNEINDHL = 6;
	uint32 aeon_talk_id = 7;
	bool finish_dialogue = 3;
	bool JENFHOMBKKE = 9;
	uint32 talk_dialogue_id = 13;
	bool LOMILOMCAOM = 1;
}

message KKFKKPPLDAI {
	bool is_meet = 14;
	uint32 AMLKPOHDELN = 6;
	uint32 visitor_id = 10;
}

message CLFACBCGIFL {
	uint32 KLFCNOAGGPC = 15;
	uint32 INCAGNLDJMN = 10;
}

message NpcExtraInfo {
	oneof KFELKJLDKEH {
		NpcRogueGameInfo rogue_game_info = 15;
		KKFKKPPLDAI JKJOPMEFCBO = 10;
		CLFACBCGIFL PNBJJBJNMGL = 6;
	}
}

message SceneNpcInfo {
	NpcExtraInfo extra_info = 14;
	uint32 npc_id = 11;
}

message PropRogueInfo {
	uint32 room_id = 5;
	uint32 BBNFIIFMGAK = 2;
	uint32 CCDEPAPJNKO = 4;
	uint32 site_id = 9;
}

message PPLBHACNEGO {
	uint32 POIJKBLCJLA = 2;
	uint32 aeon_id = 5;
	uint32 KAPMKJGHIEI = 12;
}

message PropChessRogueInfo {
	bool enter_next_cell = 13;
	bool AKCGHBFGBCC = 4;
}

message RogueTournDoorInfo {
	uint32 rogue_door_next_room_type = 14;
	bool enter_next_layer = 13;
	uint32 EIPNNEJNNKJ = 11;
}

message RogueMagicDoorInfo {
	uint32 EIPNNEJNNKJ = 1;
	bool enter_next_layer = 11;
	uint32 rogue_door_next_room_type = 8;
}

message WorkbenchFuncIdInfo {
	bool is_valid = 13;
	uint32 func_id = 7;
}

message RogueTournWorkbenchInfo {
	uint32 workbench_id = 5;
	repeated WorkbenchFuncIdInfo workbench_func_list = 8;
}

message RogueGambleMachineInfo {
	uint32 MGDMHLGJHOC = 13;
	RogueGambleInfo gamble_info = 6;
}

message RogueCurseChestInfo {
	uint32 chest_id = 12;
}

message PropTimelineInfo {
	bool timeline_bool_value = 1;
	bytes timeline_byte_value = 7;
}

message PropExtraInfo {
	PropTimelineInfo timeline_info = 13;
	oneof KFELKJLDKEH {
		PropRogueInfo rogue_game_info = 2;
		PPLBHACNEGO rogue_aeon_info = 11;
		PropChessRogueInfo JJFKKDKPCPO = 7;
		RogueTournDoorInfo HAKIPLKCOKD = 14;
		RogueTournWorkbenchInfo MABCFPOCLOL = 12;
		RogueGambleMachineInfo OIDCBKGGNDG = 3;
		RogueCurseChestInfo DDCKMELBCDJ = 6;
		RogueMagicDoorInfo OMEKFJEPFLE = 5;
	}
}

message ScenePropInfo {
	uint64 create_time_ms = 9;
	PropExtraInfo extra_info = 11;
	uint32 life_time_ms = 7;
	uint32 prop_id = 15;
	repeated string trigger_name_list = 13;
	uint32 prop_state = 4;
}

message SceneSummonUnitInfo {
	uint32 summon_unit_id = 11;
	repeated string trigger_name_list = 2;
	uint32 attach_entity_id = 6;
	int32 life_time_ms = 14;
	uint32 caster_entity_id = 15;
	uint64 create_time_ms = 3;
}

message SceneEntityInfo {
	uint32 inst_id = 1;
	uint32 group_id = 7;
	MotionInfo motion = 4;
	uint32 entity_id = 3;
	oneof entity {
		SceneActorInfo actor = 13;
		SceneNpcMonsterInfo npc_monster = 14;
		SceneNpcInfo npc = 2;
		ScenePropInfo prop = 8;
		SceneSummonUnitInfo summon_unit = 15;
	}
}

message BuffInfo {
	map<string, float> dynamic_values = 5;
	uint32 buff_id = 13;
	uint64 add_time_ms = 2;
	uint32 base_avatar_id = 3;
	float life_time = 6;
	uint32 buff_summon_entity_id = 7;
	uint32 level = 10;
	uint32 count = 1;
}

message EntityBuffInfo {
	uint32 entity_id = 4;
	repeated BuffInfo buff_list = 8;
}

message MechanismBarInfo {
	uint32 value = 4;
	uint32 OHDEOIGHIEM = 14;
}

message CustomSaveData {
	string save_data = 10;
	uint32 group_id = 4;
}

message KEGMIHDFPMM {
	uint32 CPPDJFKIIHK = 1;
	uint32 BLOGJDCKAHM = 11;
}

message SceneEntityGroupInfo {
	repeated SceneEntityInfo entity_list = 7;
	uint32 state = 10;
	map<string, int32> HEJAMOOJBCJ = 4;
	uint32 group_id = 3;
}

message SceneGroupState {
	uint32 state = 2;
	uint32 group_id = 5;
	bool is_default = 1;
}

message MissionStatusBySceneInfo {
	repeated uint32 finished_main_mission_id_list = 9;
	repeated uint32 unfinished_main_mission_id_list = 3;
	repeated Mission sub_mission_status_list = 10;
	repeated uint32 disabled_main_mission_id_list = 14;
	repeated MainMissionCustomValue BIGEHKDPGPN = 4;
}

message SceneInfo {
	uint32 client_pos_version = 7;
	uint32 game_story_line_id = 1187;
	uint32 leader_entity_id = 8;
	map<uint32, KEGMIHDFPMM> MPEHIBKEOBE = 4;
	repeated BuffInfo scene_buff_info_list = 12;
	repeated uint32 DJBIBIJMEBH = 538;
	uint32 content_id = 1557;
	repeated SceneGroupState group_state_list = 468;
	uint32 world_id = 15;
	repeated EntityBuffInfo entity_buff_info_list = 6;
	uint32 entry_id = 13;
	uint32 floor_id = 9;
	repeated SceneEntityGroupInfo entity_group_list = 937;
	uint32 dimension_id = 1652;
	repeated SceneEntityInfo entity_list = 10;
	MissionStatusBySceneInfo scene_mission_info = 1403;
	repeated uint32 lighten_section_list = 2;
	map<string, int32> floor_saved_data = 788;
	uint32 plane_id = 1;
	repeated CustomSaveData custom_data_list = 3;
	uint32 game_mode_type = 14;
}

message EntityMotion {
	uint32 map_layer = 5;
	bool NFOPIKDKPGG = 1;
	uint32 entity_id = 6;
	MotionInfo motion = 8;
}
message SceneEntityMoveCsReq {
	uint32 entry_id = 9;
	repeated EntityMotion entity_motion_list = 14;
	uint64 PEMLEJJBAJE = 12;
}
message SceneEntityMoveScRsp {
	uint32 retcode = 1;
	repeated EntityMotion entity_motion_list = 6;
	ClientDownloadData download_data = 9;
}
message SceneEntityMoveScNotify {
	MotionInfo motion = 2;
	uint32 client_pos_version = 9;
	uint32 entry_id = 11;
	uint32 entity_id = 13;
}
message SceneUpdatePositionVersionNotify {
	uint32 pos_version = 14;
}
message InteractPropCsReq {
	uint32 prop_entity_id = 5;
	uint32 interact_id = 2;
}
message InteractPropScRsp {
	uint32 retcode = 2;
	uint32 prop_entity_id = 7;
	uint32 prop_state = 6;
}
message ChangePropTimelineInfoCsReq {
	uint32 prop_entity_id = 9;
	PropTimelineInfo timeline_info = 10;
	uint64 uuid = 3;
	bool is_close_map = 7;
}
message ChangePropTimelineInfoScRsp {
	uint32 prop_entity_id = 11;
	uint32 retcode = 3;
}

message HitMonsterBattleInfo {
	uint32 target_monster_entity_id = 13;
	MonsterBattleType monster_battle_type = 2;
}

message DynamicValues {
	string key = 1;
	float value = 14;
}

message AssistMonsterEntityInfo {
	repeated uint32 entity_id_list = 5;
}
message SceneCastSkillCsReq {
	string maze_ability_str = 1;
	repeated uint32 hit_target_entity_id_list = 14;
	MotionInfo target_motion = 8;
	uint32 attacked_by_entity_id = 10;
	repeated SkillExtraTag skill_extra_tags = 3;
	uint32 HCHDHLJCIJE = 15;
	repeated AssistMonsterEntityInfo assist_monster_entity_info = 7;
	uint32 cast_entity_id = 12;
	repeated DynamicValues dynamic_values = 9;
	uint32 skill_index = 13;
	repeated uint32 assist_monster_entity_id_list = 11;
}
message SceneCastSkillScRsp {
	uint32 retcode = 12;
	SceneBattleInfo battle_info = 13;
	uint32 cast_entity_id = 11;
	repeated HitMonsterBattleInfo monster_battle_info = 1;
}
message SceneCastSkillCostMpCsReq {
	uint32 attacked_by_entity_id = 9;
	uint32 cast_entity_id = 11;
	uint32 skill_index = 8;
}
message SceneCastSkillCostMpScRsp {
	uint32 retcode = 8;
	uint32 cast_entity_id = 15;
}
message SceneCastSkillMpUpdateScNotify {
	uint32 mp = 5;
	uint32 cast_entity_id = 7;
}
message SceneEnterStageCsReq {
	RebattleType rebattle_type = 8;
	uint32 event_id = 13;
	bool PMJAHILBLFL = 9;
}
message SceneEnterStageScRsp {
	uint32 retcode = 2;
	SceneBattleInfo battle_info = 12;
}
message SceneReviveAfterRebattleCsReq {
	RebattleType rebattle_type = 1;
}
message SceneReviveAfterRebattleScRsp {
	uint32 retcode = 13;
}
message GetCurSceneInfoCsReq {
}
message GetCurSceneInfoScRsp {
	SceneInfo scene = 15;
	uint32 retcode = 1;
}

message EntityBuffChangeInfo {
	uint32 entity_id = 3;
	uint32 cast_entity_id = 6;
	SceneEntityBuffChangeType reason = 5;
	oneof KFELKJLDKEH {
		BuffInfo buff_change_info = 7;
		uint32 remove_buff_id = 12;
	}
}
message SyncEntityBuffChangeListScNotify {
	repeated EntityBuffChangeInfo entity_buff_change_list = 15;
}
message SpringRefreshCsReq {
	uint32 floor_id = 11;
	uint32 plane_id = 12;
	uint32 prop_entity_id = 4;
}
message SpringRefreshScRsp {
	uint32 retcode = 5;
}
message LastSpringRefreshTimeNotify {
	int64 JBICINDPIGM = 13;
}
message ReturnLastTownCsReq {
}
message ReturnLastTownScRsp {
	uint32 retcode = 14;
	SceneInfo scene = 3;
}
message EnterSectionCsReq {
	uint32 section_id = 9;
}
message EnterSectionScRsp {
	uint32 retcode = 4;
}
message SetCurInteractEntityCsReq {
	uint32 entity_id = 1;
}
message SetCurInteractEntityScRsp {
	uint32 retcode = 2;
}
message RecoverAllLineupCsReq {
}
message RecoverAllLineupScRsp {
	uint32 retcode = 4;
}
message SavePointsInfoNotify {
	int64 refresh_time = 12;
	uint32 valid_times = 11;
}
message StartCocoonStageCsReq {
	uint32 world_level = 6;
	uint32 wave = 9;
	uint32 cocoon_id = 10;
	uint32 prop_entity_id = 14;
}
message StartCocoonStageScRsp {
	uint32 prop_entity_id = 6;
	uint32 retcode = 7;
	uint32 wave = 9;
	SceneBattleInfo battle_info = 14;
	uint32 cocoon_id = 2;
}
message EntityBindPropCsReq {
	bool MJJMPIFLMKF = 6;
	MotionInfo motion = 12;
}
message EntityBindPropScRsp {
	uint32 retcode = 7;
}
message SetClientPausedCsReq {
	bool paused = 10;
}
message SetClientPausedScRsp {
	bool paused = 5;
	uint32 retcode = 1;
}
message DeactivateFarmElementCsReq {
	uint32 entity_id = 10;
}
message DeactivateFarmElementScRsp {
	uint32 entity_id = 10;
	uint32 retcode = 14;
}
message ActivateFarmElementCsReq {
	uint32 entity_id = 11;
	uint32 world_level = 6;
}
message ActivateFarmElementScRsp {
	uint32 world_level = 14;
	uint32 entity_id = 13;
	uint32 retcode = 12;
}

message AvatarPresetHp {
	uint32 avatar_id = 8;
	uint32 JLAFLDCHDGJ = 5;
}

message SpringRecoverConfig {
	uint32 EIDNIGIFNAA = 12;
	bool GHDEPANCGPF = 10;
	repeated AvatarPresetHp BCGLMLABOGF = 2;
}
message UpdateMechanismBarScNotify {
	uint32 plane_id = 1;
	uint32 floor_id = 10;
	MechanismBarInfo GIGKDAPGNME = 4;
}
message SetGroupCustomSaveDataCsReq {
	uint32 entry_id = 2;
	uint32 group_id = 12;
	string save_data = 15;
}
message SetGroupCustomSaveDataScRsp {
	uint32 entry_id = 7;
	uint32 retcode = 2;
	uint32 group_id = 9;
}
message ReEnterLastElementStageCsReq {
	uint32 stage_id = 7;
}
message ReEnterLastElementStageScRsp {
	uint32 stage_id = 10;
	uint32 retcode = 7;
	SceneBattleInfo battle_info = 9;
}
message SceneEntityTeleportCsReq {
	EntityMotion entity_motion = 12;
	uint32 entry_id = 14;
}
message SceneEntityTeleportScRsp {
	uint32 retcode = 2;
	uint32 client_pos_version = 13;
	EntityMotion entity_motion = 3;
}
message EnterSceneCsReq {
	uint32 entry_id = 9;
	uint32 game_story_line_id = 6;
	bool is_close_map = 15;
	uint32 content_id = 2;
	uint32 teleport_id = 3;
}
message EnterSceneScRsp {
	uint32 game_story_line_id = 4;
	bool is_over_map = 2;
	uint32 retcode = 1;
	bool is_close_map = 13;
	uint32 content_id = 15;
}
message EnterSceneByServerScNotify {
	EnterSceneReason reason = 13;
	SceneInfo scene = 12;
	LineupInfo lineup = 14;
}
message ScenePlaneEventScNotify {
	ItemList get_item_list = 11;
	ItemList MHDJADHNDKD = 2;
	ItemList MEEKFPCOBAI = 7;
	ItemList EPOJGHEBPKC = 14;
}
message GetSceneMapInfoCsReq {
	repeated uint32 floor_id_list = 14;
	bool IGFIKGHLLNO = 11;
	repeated uint32 entry_id_list = 5;
	uint32 content_id = 10;
	uint32 entry_story_line_id = 4;
}

message MazePropState {
	uint32 config_id = 9;
	uint32 state = 11;
	uint32 group_id = 13;
}

message OFCAIGDHPOH {
	PropExtraInfo extra_info = 10;
	uint32 group_id = 15;
	uint32 config_id = 3;
	uint32 state = 12;
}

message MazeGroup {
	uint32 group_id = 14;
	int64 INLDCCLIOAN = 4;
	repeated uint32 NOBKEONAKLE = 1;
	bool ILBEAAOOJJP = 13;
}

message ChestInfo {
	uint32 exist_num = 8;
	uint32 opened_num = 2;
	ChestType chest_type = 13;
}

message NPAOGKFKAAE {
	uint32 type = 4;
	uint32 FLJINDNJPHL = 10;
	uint32 FOKCIFJMJGL = 6;
}

message SceneMapInfo {
	repeated ChestInfo chest_list = 11;
	repeated OFCAIGDHPOH LMNGAHFNAON = 2;
	repeated NPAOGKFKAAE JMLDMOCNMHM = 15;
	uint32 entry_id = 9;
	uint32 dimension_id = 6;
	uint32 floor_id = 14;
	uint32 retcode = 7;
	uint32 cur_map_entry_id = 4;
	repeated MazePropState maze_prop_list = 12;
	map<string, int32> floor_saved_data = 1;
	repeated uint32 unlock_teleport_list = 3;
	repeated MazeGroup maze_group_list = 13;
	repeated uint32 lighten_section_list = 5;
}
message GetSceneMapInfoScRsp {
	uint32 entry_story_line_id = 6;
	repeated SceneMapInfo scene_map_info = 10;
	uint32 content_id = 3;
	bool IGFIKGHLLNO = 14;
	uint32 retcode = 13;
}
message SyncServerSceneChangeNotify {
}
message GameplayCounterCountDownCsReq {
	uint32 NMGLNHPANAH = 14;
	uint32 cur_times = 10;
}
message GameplayCounterCountDownScRsp {
	uint32 retcode = 7;
}
message GameplayCounterUpdateScNotify {
	uint32 NMGLNHPANAH = 11;
	GameplayCounterUpdateReason reason = 7;
	uint32 BLOGJDCKAHM = 14;
}
message GameplayCounterRecoverCsReq {
	uint32 NMGLNHPANAH = 10;
	uint32 LABOODDALOE = 1;
}
message GameplayCounterRecoverScRsp {
	uint32 retcode = 4;
}
message UpdateFloorSavedValueNotify {
	uint32 dimension_id = 6;
	uint32 floor_id = 10;
	uint32 plane_id = 5;
	map<string, int32> saved_value = 11;
}
message GetUnlockTeleportCsReq {
	repeated uint32 entry_id_list = 11;
}
message GetUnlockTeleportScRsp {
	repeated uint32 unlock_teleport_list = 2;
	uint32 retcode = 10;
}
message OpenChestScNotify {
	uint32 chest_id = 8;
}

message SceneEntityRefreshInfo {
	oneof BOBJACMDBMN {
		SceneEntityInfo add_entity = 1;
		uint32 delete_entity = 15;
		uint32 MHHOAAHDGAO = 12;
	}
}

message CMGFHBHAFFB {
	string JAIBIEEKHEG = 3;
	int32 AGFIJNIEBKF = 12;
	int32 DLMAMKINNCO = 7;
}

message GroupRefreshInfo {
	repeated CMGFHBHAFFB BCCGJIHNCDN = 12;
	uint32 group_id = 7;
	uint32 state = 13;
	repeated SceneEntityRefreshInfo refresh_entity = 9;
	SceneGroupRefreshType refresh_type = 15;
}
message SceneGroupRefreshScNotify {
	uint32 floor_id = 15;
	repeated GroupRefreshInfo group_refresh_list = 8;
	uint32 dimension_id = 3;
}

message GroupStateInfo {
	uint32 entry_id = 10;
	uint32 GDNOPAABGHF = 9;
	uint32 group_state = 7;
	uint32 group_id = 1;
}
message GroupStateChangeCsReq {
	GroupStateInfo group_state_info = 15;
}
message GroupStateChangeScRsp {
	GroupStateInfo group_state_info = 1;
	uint32 retcode = 2;
}
message GroupStateChangeScNotify {
	GroupStateInfo group_state_info = 15;
}

message EnteredSceneInfo {
	uint32 plane_id = 12;
	uint32 floor_id = 4;
}
message GetEnteredSceneCsReq {
}
message GetEnteredSceneScRsp {
	uint32 retcode = 9;
	repeated EnteredSceneInfo entered_scene_info_list = 15;
}
message EnteredSceneChangeScNotify {
	repeated EnteredSceneInfo entered_scene_info_list = 12;
}
message RefreshTriggerByClientCsReq {
	uint32 trigger_entity_id = 5;
	MotionInfo trigger_motion = 12;
	string trigger_name = 11;
	repeated uint32 trigger_target_id_list = 13;
}
message RefreshTriggerByClientScRsp {
	bool refresh_trigger = 6;
	uint32 retcode = 15;
	string trigger_name = 9;
	uint32 trigger_entity_id = 2;
}
message RefreshTriggerByClientScNotify {
	repeated uint32 trigger_target_id_list = 10;
	uint32 trigger_entity_id = 5;
	string trigger_name = 1;
}
message DeleteSummonUnitCsReq {
	repeated uint32 entity_id_list = 12;
}
message DeleteSummonUnitScRsp {
	repeated uint32 entity_id_list = 9;
	uint32 retcode = 15;
}
message UnlockedAreaMapScNotify {
	repeated uint32 entry_id_list = 2;
}
message UnlockTeleportNotify {
	uint32 entry_id = 4;
	uint32 teleport_id = 8;
}
message UpdateGroupPropertyCsReq {
	int32 MOJOHJEBCNJ = 3;
	uint32 dimension_id = 2;
	uint32 group_id = 10;
	uint32 floor_id = 12;
	string JAIBIEEKHEG = 4;
}
message UpdateGroupPropertyScRsp {
	int32 AGFIJNIEBKF = 1;
	string JAIBIEEKHEG = 15;
	uint32 dimension_id = 4;
	uint32 retcode = 5;
	uint32 group_id = 2;
	uint32 floor_id = 6;
	int32 DLMAMKINNCO = 14;
}
message TrainWorldIdChangeScNotify {
	uint32 NPEBNEKDLEN = 14;
}

enum CmdServerPrefsType {
	CmdServerPrefsTypeNone = 0;
	CmdGetServerPrefsDataCsReq = 6198;
	CmdUpdateServerPrefsDataCsReq = 6179;
	CmdGetAllServerPrefsDataCsReq = 6110;
	CmdGetServerPrefsDataScRsp = 6153;
	CmdGetAllServerPrefsDataScRsp = 6105;
	CmdUpdateServerPrefsDataScRsp = 6102;
}

message ServerPrefs {
	uint32 server_prefs_id = 11;
	bytes data = 15;
}
message GetAllServerPrefsDataCsReq {
}
message GetAllServerPrefsDataScRsp {
	repeated ServerPrefs server_prefs_list = 11;
	uint32 retcode = 5;
}
message GetServerPrefsDataCsReq {
	uint32 server_prefs_id = 13;
}
message GetServerPrefsDataScRsp {
	ServerPrefs server_prefs = 2;
	uint32 retcode = 11;
}
message UpdateServerPrefsDataCsReq {
	ServerPrefs server_prefs = 3;
}
message UpdateServerPrefsDataScRsp {
	uint32 retcode = 5;
	uint32 server_prefs_id = 15;
}

enum CmdShopType {
	CmdShopTypeNone = 0;
	CmdCityShopInfoScNotify = 1597;
	CmdBuyGoodsCsReq = 1598;
	CmdBuyGoodsScRsp = 1553;
	CmdGetShopListScRsp = 1505;
	CmdGetShopListCsReq = 1510;
	CmdTakeCityShopRewardScRsp = 1502;
	CmdTakeCityShopRewardCsReq = 1579;
}

message Shop {
	int64 begin_time = 12;
	int64 end_time = 11;
	uint32 shop_id = 13;
	uint32 city_level = 5;
	uint64 city_taken_level_reward = 10;
	uint32 city_exp = 9;
	repeated Goods goods_list = 3;
}

message Goods {
	uint32 buy_times = 8;
	uint32 item_id = 4;
	int64 end_time = 11;
	uint32 goods_id = 7;
	int64 begin_time = 10;
}
message GetShopListCsReq {
	uint32 shop_type = 4;
}
message GetShopListScRsp {
	repeated Shop shop_list = 13;
	uint32 shop_type = 6;
	uint32 retcode = 10;
}
message BuyGoodsCsReq {
	repeated uint32 FMPNHEAIMDN = 3;
	uint32 goods_num = 11;
	uint32 interacted_prop_entity_id = 6;
	uint32 goods_id = 1;
	uint32 item_id = 9;
	uint32 shop_id = 5;
}
message BuyGoodsScRsp {
	uint32 retcode = 2;
	uint32 goods_id = 9;
	ItemList return_item_list = 4;
	uint32 goods_buy_times = 3;
	uint32 shop_id = 14;
}
message TakeCityShopRewardCsReq {
	uint32 level = 2;
	uint32 shop_id = 8;
}
message TakeCityShopRewardScRsp {
	uint32 level = 14;
	uint32 shop_id = 3;
	ItemList reward = 12;
	uint32 retcode = 11;
}
message CityShopInfoScNotify {
	uint32 shop_id = 6;
	uint32 exp = 1;
	uint64 taken_level_reward = 2;
	uint32 level = 10;
}

enum CmdSpaceZooType {
	CmdSpaceZooTypeNone = 0;
	CmdSpaceZooCatUpdateNotify = 6707;
	CmdSpaceZooMutateCsReq = 6779;
	CmdSpaceZooDeleteCatScRsp = 6755;
	CmdSpaceZooExchangeItemScRsp = 6716;
	CmdSpaceZooTakeScRsp = 6763;
	CmdSpaceZooDataScRsp = 6705;
	CmdSpaceZooBornCsReq = 6798;
	CmdSpaceZooBornScRsp = 6753;
	CmdSpaceZooOpCatteryScRsp = 6706;
	CmdSpaceZooExchangeItemCsReq = 6739;
	CmdSpaceZooMutateScRsp = 6702;
	CmdSpaceZooTakeCsReq = 6726;
	CmdSpaceZooOpCatteryCsReq = 6797;
	CmdSpaceZooDeleteCatCsReq = 6741;
	CmdSpaceZooDataCsReq = 6710;
}

message FAFGMLPADMI {
	bool HALBHKNPIKH = 3;
	uint32 unique_id = 8;
	uint32 BEJEEDAEBBE = 11;
	repeated uint32 item_list = 10;
	repeated uint32 IGJCPPKAIBI = 12;
	uint32 FCLNOOGEHMC = 2;
}

message IPJAIINEGEL {
	uint32 ECBALMAEBJC = 10;
	uint32 BEJEEDAEBBE = 9;
}
message SpaceZooDataCsReq {
}
message SpaceZooDataScRsp {
	repeated uint32 KMOADEOGAPA = 2;
	repeated FAFGMLPADMI AAGIHKBFMFI = 6;
	repeated uint32 KJFHKICGGDE = 3;
	repeated IPJAIINEGEL INIHLANCNFI = 1;
	uint32 retcode = 14;
	repeated uint32 PMCMECDLEMC = 7;
	repeated uint32 BNHNDBNABFN = 12;
	uint32 PBLCAHNMFJG = 13;
	repeated uint32 DPLKBEEHPLB = 8;
}
message SpaceZooBornCsReq {
	repeated uint32 HDCBACOOIND = 10;
	uint32 LHEONPHGBNB = 7;
}
message SpaceZooBornScRsp {
	repeated IPJAIINEGEL GOEAOFNFJOD = 9;
	FAFGMLPADMI KPKDHGHDGNB = 1;
	uint32 retcode = 14;
	bool IKLPNCGBPPC = 10;
}
message SpaceZooMutateCsReq {
	uint32 unique_id = 14;
	uint32 item_id = 10;
}
message SpaceZooMutateScRsp {
	uint32 retcode = 12;
	FAFGMLPADMI EFLCMHMAJAL = 9;
	repeated IPJAIINEGEL GOEAOFNFJOD = 5;
	bool IKLPNCGBPPC = 10;
}
message SpaceZooOpCatteryCsReq {
	uint32 NILEEDJLGIN = 5;
	uint32 op_type = 7;
	uint32 ALGEIENIOAN = 3;
}
message SpaceZooOpCatteryScRsp {
	repeated uint32 KJFHKICGGDE = 9;
	uint32 retcode = 6;
}
message SpaceZooDeleteCatCsReq {
	repeated uint32 DEJAOOEBBHA = 15;
}
message SpaceZooDeleteCatScRsp {
	repeated uint32 NFHEAGELICI = 3;
	uint32 retcode = 2;
}
message SpaceZooCatUpdateNotify {
	bool FPMNCAGJEBG = 8;
	bool IKLPNCGBPPC = 7;
	repeated FAFGMLPADMI AIKMBPPNOKD = 1;
}
message SpaceZooExchangeItemCsReq {
	uint32 item_id = 13;
}
message SpaceZooExchangeItemScRsp {
	uint32 retcode = 2;
	uint32 item_id = 14;
}
message SpaceZooTakeCsReq {
	uint32 HLNMAJIDIFD = 2;
}
message SpaceZooTakeScRsp {
	uint32 HLNMAJIDIFD = 12;
	ItemList reward = 9;
	uint32 retcode = 13;
}

enum CmdStarFightType {
	CmdStarFightTypeNone = 0;
	CmdStartStarFightLevelCsReq = 7161;
	CmdStartStarFightLevelScRsp = 7162;
	CmdGetStarFightDataScRsp = 7170;
	CmdGetStarFightDataCsReq = 7165;
	CmdStarFightDataChangeNotify = 7166;
}

message MJCJAIKPLLM {
	bool ACELAGJPHMA = 14;
	uint32 CBINDIAAMJG = 15;
	uint32 group_id = 8;
	uint32 MPAECAPOHEO = 11;
	uint32 IFANGMHNKBB = 9;
}
message GetStarFightDataCsReq {
}
message GetStarFightDataScRsp {
	uint32 retcode = 2;
	repeated MJCJAIKPLLM BDIIMMHJLCN = 10;
}

message AEDAOIFFIGN {
	AvatarType avatar_type = 15;
	uint32 avatar_id = 1;
}
message StartStarFightLevelCsReq {
	uint32 NEDFIBONLKB = 13;
	repeated AEDAOIFFIGN avatar_list = 7;
	uint32 group_id = 4;
}
message StartStarFightLevelScRsp {
	uint32 NEDFIBONLKB = 14;
	SceneBattleInfo battle_info = 15;
	uint32 group_id = 5;
	uint32 retcode = 12;
}
message StarFightDataChangeNotify {
	uint32 group_id = 2;
	MJCJAIKPLLM FMCDALALFIA = 15;
}

enum CmdStoryLineType {
	CmdStoryLineTypeNone = 0;
	CmdGetStoryLineInfoCsReq = 6210;
	CmdChangeStoryLineFinishScNotify = 6202;
	CmdStoryLineTrialAvatarChangeScNotify = 6297;
	CmdGetStoryLineInfoScRsp = 6205;
	CmdStoryLineInfoScNotify = 6298;
}

enum ChangeStoryLineAction {
	ChangeStoryLineAction_None = 0;
	ChangeStoryLineAction_FinishAction = 1;
	ChangeStoryLineAction_Client = 2;
	ChangeStoryLineAction_CustomOP = 3;
	ChangeStoryLineAction_Raid = 4;
}
message GetStoryLineInfoCsReq {
}
message GetStoryLineInfoScRsp {
	repeated uint32 unfinished_story_line_id_list = 4;
	uint32 cur_story_line_id = 13;
	uint32 retcode = 2;
	repeated uint32 trial_avatar_id_list = 7;
}
message StoryLineInfoScNotify {
	repeated uint32 trial_avatar_id_list = 13;
	repeated uint32 unfinished_story_line_id_list = 8;
	uint32 FIMCEJGDAGF = 3;
	uint32 cur_story_line_id = 4;
}
message ChangeStoryLineFinishScNotify {
	uint32 cur_story_line_id = 14;
	bool KOOCCEIGHMA = 7;
	uint32 KIDKHJECJLF = 5;
	ChangeStoryLineAction action = 2;
}
message StoryLineTrialAvatarChangeScNotify {
	bool CLIIGMNMHNA = 6;
	repeated uint32 KFMFFGGJMNE = 10;
	repeated uint32 IBLBNIANPHD = 15;
}

enum CmdStrongChallengeActivityType {
	CmdStrongChallengeActivityTypeNone = 0;
	CmdEnterStrongChallengeActivityStageCsReq = 6698;
	CmdStrongChallengeActivityBattleEndScNotify = 6679;
	CmdEnterStrongChallengeActivityStageScRsp = 6653;
	CmdGetStrongChallengeActivityDataCsReq = 6610;
	CmdGetStrongChallengeActivityDataScRsp = 6605;
}

message StrongChallengeAvatar {
	AvatarType avatar_type = 6;
	uint32 avatar_id = 11;
}

message JPFJGFOPKHB {
	repeated uint32 buff_list = 14;
	repeated StrongChallengeAvatar avatar_list = 3;
}

message CAAAKPFOEJI {
	uint32 max_score = 1;
	uint32 JGBAINFDBAN = 14;
	uint32 stage_id = 8;
	uint32 panel_id = 11;
	JPFJGFOPKHB AHINPCKGKJG = 2;
}

message HLKGCNFCCIA {
	map<uint32, CAAAKPFOEJI> ALCEDMLHFLM = 4;
}
message GetStrongChallengeActivityDataCsReq {
}
message GetStrongChallengeActivityDataScRsp {
	HLKGCNFCCIA GIILGFFKHDA = 11;
	uint32 retcode = 13;
}
message EnterStrongChallengeActivityStageCsReq {
	uint32 stage_id = 3;
	repeated StrongChallengeAvatar avatar_list = 5;
	repeated uint32 buff_list = 10;
}
message EnterStrongChallengeActivityStageScRsp {
	SceneBattleInfo battle_info = 12;
	uint32 retcode = 5;
	uint32 stage_id = 15;
}
message StrongChallengeActivityBattleEndScNotify {
	uint32 stage_id = 2;
	uint32 AHJFPNGDBDO = 12;
	BattleEndStatus end_status = 9;
	uint32 JAMLOKNCAKC = 1;
	uint32 max_score = 7;
	uint32 score_id = 6;
	uint32 total_damage = 4;
	uint32 GGBECCHPHCD = 15;
}

enum CmdSummonActivityType {
	CmdSummonActivityTypeNone = 0;
	CmdGetSummonActivityDataCsReq = 7565;
	CmdGetSummonActivityDataScRsp = 7570;
	CmdSummonActivityBattleEndScNotify = 7566;
	CmdEnterSummonActivityStageScRsp = 7562;
	CmdEnterSummonActivityStageCsReq = 7561;
}

message PGBHMOLFBMM {
	uint32 group_id = 6;
	uint32 NEDFIBONLKB = 10;
	uint32 star = 8;
}
message GetSummonActivityDataCsReq {
}
message GetSummonActivityDataScRsp {
	uint32 retcode = 11;
	repeated PGBHMOLFBMM JHOMKEMCDMG = 13;
}

message ONOEPLFNELL {
	uint32 avatar_id = 9;
	AvatarType avatar_type = 15;
}
message EnterSummonActivityStageCsReq {
	uint32 NEDFIBONLKB = 15;
	uint32 group_id = 2;
	ONOEPLFNELL MNOEDECLHBJ = 1;
	repeated ONOEPLFNELL avatar_list = 9;
}
message EnterSummonActivityStageScRsp {
	uint32 retcode = 14;
	SceneBattleInfo battle_info = 11;
	uint32 NEDFIBONLKB = 2;
	uint32 group_id = 13;
}
message SummonActivityBattleEndScNotify {
	uint32 group_id = 5;
	uint32 star = 8;
	uint32 HMFFHGBKOGL = 2;
	uint32 NEDFIBONLKB = 9;
}

enum CmdSwitchHandType {
	CmdSwitchHandTypeNone = 0;
	CmdSwitchHandResetHandPosCsReq = 8120;
	CmdSwitchHandResetGameCsReq = 8104;
	CmdSwitchHandResetGameScRsp = 8105;
	CmdSwitchHandStartScRsp = 8119;
	CmdSwitchHandUpdateCsReq = 8107;
	CmdSwitchHandDataCsReq = 8101;
	CmdSwitchHandFinishCsReq = 8102;
	CmdSwitchHandCoinUpdateScRsp = 8111;
	CmdSwitchHandResetHandPosScRsp = 8103;
	CmdSwitchHandCoinUpdateCsReq = 8110;
	CmdSwitchHandFinishScRsp = 8112;
	CmdSwitchHandStartCsReq = 8117;
	CmdSwitchHandDataScRsp = 8115;
	CmdSwitchHandUpdateScRsp = 8114;
}

enum HandPropType {
	SWITCH_HAND_OP_PROP_TYPE_NONE = 0;
	SWITCH_HAND_OP_PROP_TYPE_CATCH = 1;
	SWITCH_HAND_OP_PROP_TYPE_LIFT = 2;
}

message HandInfo {
	uint32 config_id = 15;
	uint32 MCBIOHMIMGN = 10;
	bytes MJNNBLCDCBJ = 9;
	MotionInfo OFOLPKMALGI = 7;
	uint32 GFJIIABANLM = 4;
}
message SwitchHandDataCsReq {
	uint32 config_id = 12;
}
message SwitchHandDataScRsp {
	uint32 ABOJJANDFNO = 9;
	repeated HandInfo LBOMDFHFFCF = 1;
	uint32 retcode = 2;
	uint32 DLNGHHDMJJM = 15;
}
message SwitchHandStartCsReq {
	uint32 config_id = 15;
}
message SwitchHandStartScRsp {
	uint32 retcode = 7;
	uint32 config_id = 10;
}
message SwitchHandFinishCsReq {
}
message SwitchHandFinishScRsp {
	HandInfo CMFMACMIPEE = 12;
	uint32 retcode = 8;
}

message PMGECPBKJCJ {
	uint32 IEFMADJGADB = 11;
	uint32 KDLPEIGHJAK = 14;
	uint32 group_id = 9;
	HandPropType op_type = 7;
}
message SwitchHandUpdateCsReq {
	HandInfo OPBHJAGOAGG = 11;
	PMGECPBKJCJ CLBMGBFANLC = 4;
}
message SwitchHandUpdateScRsp {
	uint32 retcode = 1;
	HandInfo CMFMACMIPEE = 9;
	PMGECPBKJCJ CLBMGBFANLC = 10;
}
message SwitchHandCoinUpdateCsReq {
	uint32 MCBIOHMIMGN = 9;
}
message SwitchHandCoinUpdateScRsp {
	uint32 retcode = 3;
	uint32 MCBIOHMIMGN = 12;
}
message SwitchHandResetHandPosCsReq {
	MotionInfo OFOLPKMALGI = 2;
	uint32 config_id = 9;
}
message SwitchHandResetHandPosScRsp {
	uint32 retcode = 6;
	HandInfo LBOMDFHFFCF = 4;
}
message SwitchHandResetGameCsReq {
	HandInfo DPJNCBBOHKE = 3;
}
message SwitchHandResetGameScRsp {
	HandInfo LBOMDFHFFCF = 9;
	uint32 retcode = 4;
}

enum CmdSwordTrainingType {
	CmdSwordTrainingTypeNone = 0;
	CmdSwordTrainingLearnSkillScRsp = 7456;
	CmdSwordTrainingGiveUpGameCsReq = 7459;
	CmdSwordTrainingExamResultConfirmCsReq = 7469;
	CmdSwordTrainingActionTurnSettleScNotify = 7486;
	CmdSwordTrainingDailyPhaseConfirmCsReq = 7451;
	CmdSwordTrainingResumeGameScRsp = 7472;
	CmdGetSwordTrainingDataScRsp = 7496;
	CmdSwordTrainingGameSyncChangeScNotify = 7473;
	CmdSwordTrainingSetSkillTraceScRsp = 7485;
	CmdSwordTrainingSelectEndingCsReq = 7464;
	CmdSwordTrainingStoryBattleCsReq = 7460;
	CmdSwordTrainingStoryBattleScRsp = 7495;
	CmdSwordTrainingTurnActionScRsp = 7452;
	CmdSwordTrainingMarkEndingViewedScRsp = 7481;
	CmdSwordTrainingDialogueSelectOptionScRsp = 7492;
	CmdSwordTrainingExamResultConfirmScRsp = 7488;
	CmdGetSwordTrainingDataCsReq = 7471;
	CmdSwordTrainingRestoreGameCsReq = 7476;
	CmdEnterSwordTrainingExamScRsp = 7479;
	CmdSwordTrainingLearnSkillCsReq = 7455;
	CmdSwordTrainingStartGameCsReq = 7500;
	CmdSwordTrainingStartGameScRsp = 7487;
	CmdSwordTrainingStoryConfirmScRsp = 7470;
	CmdSwordTrainingRestoreGameScRsp = 7461;
	CmdSwordTrainingGiveUpGameScRsp = 7490;
	CmdSwordTrainingDialogueSelectOptionCsReq = 7477;
	CmdSwordTrainingDailyPhaseConfirmScRsp = 7478;
	CmdSwordTrainingSetSkillTraceCsReq = 7489;
	CmdSwordTrainingSelectEndingScRsp = 7499;
	CmdEnterSwordTrainingExamCsReq = 7482;
	CmdSwordTrainingTurnActionCsReq = 7480;
	CmdSwordTrainingResumeGameCsReq = 7494;
	CmdSwordTrainingMarkEndingViewedCsReq = 7475;
	CmdSwordTrainingGameSettleScNotify = 7462;
	CmdSwordTrainingUnlockSyncScNotify = 7458;
	CmdSwordTrainingStoryConfirmCsReq = 7498;
}

enum PKHJBPMIBBA {
	SWORD_TRAIN_GAME_SOURCE_TYPE_NONE = 0;
	SWORD_TRAIN_GAME_SOURCE_TYPE_TURN_SETTLE = 1;
	SWORD_TRAIN_GAME_SOURCE_TYPE_STATUS_UPGRADE = 2;
	SWORD_TRAIN_GAME_SOURCE_TYPE_ACTION = 3;
	SWORD_TRAIN_GAME_SOURCE_TYPE_ACTION_HINT = 4;
	SWORD_TRAIN_GAME_SOURCE_TYPE_STORY = 5;
	SWORD_TRAIN_GAME_SOURCE_TYPE_EXAM_BONUS = 6;
	SWORD_TRAIN_GAME_SOURCE_TYPE_DIALOGUE = 7;
}

enum BJNCDEFEEJI {
	SWORD_TRAINING_DAILY_PHASE_TYPE_NONE = 0;
	SWORD_TRAINING_DAILY_PHASE_TYPE_MORNING = 1;
	SWORD_TRAINING_DAILY_PHASE_TYPE_NOON = 2;
	SWORD_TRAINING_DAILY_PHASE_TYPE_AFTERNOON = 3;
	SWORD_TRAINING_DAILY_PHASE_TYPE_EVENING = 4;
}

enum HDIJJMDPILE {
	SWORD_TRAINING_STATUS_TYPE_NONE = 0;
	SWORD_TRAINING_STATUS_TYPE_POWER = 1;
	SWORD_TRAINING_STATUS_TYPE_AGILITY = 2;
	SWORD_TRAINING_STATUS_TYPE_TOUGHNESS = 3;
	SWORD_TRAINING_STATUS_TYPE_PERCEPTION = 4;
	_SWORD_TRAINING_STATUS_TYPE_MAX = 5;
}

enum HDMKPHALALG {
	SWORD_TRAINING_GAME_SETTLE_NONE = 0;
	SWORD_TRAINING_GAME_SETTLE_FINISH = 1;
	SWORD_TRAINING_GAME_SETTLE_GIVE_UP = 2;
	SWORD_TRAINING_GAME_SETTLE_BATTLE_FAILED = 3;
	SWORD_TRAINING_GAME_SETTLE_FORCE = 4;
	SWORD_TRAINING_GAME_SETTLE_BY_RESTORE = 5;
}

message ALEFDNLLKLB {
	BPPMEIGAHGI NNCJOECKCKA = 9;
	PGGGCFBKDPK GBEABIMOBIC = 13;
	JKMFMMPMNAM pending_action = 1;
	uint32 EENJBPMNDOL = 5;
	DMJLKIFEMMN LJGCPNOGIFO = 8;
	OCBOLHFOIGI AFPDJDKNENI = 14;
	repeated uint32 FDEIGEPCCBP = 11;
	GJBNIIINKFB skill_info = 15;
}

message GJBNIIINKFB {
	repeated uint32 CCKHKBNMAPN = 3;
	uint32 BILEGELKMCB = 7;
	uint32 MCEGAIBNMGB = 15;
}

message PGGGCFBKDPK {
	uint32 game_story_line_id = 12;
	repeated uint32 CNBCKEFNFGE = 4;
}

message MMOIBACBPKA {
	HDIJJMDPILE PJGBFKNJPNO = 9;
	uint32 value = 14;
}

message BPPMEIGAHGI {
	repeated MMOIBACBPKA MIGFMPJBELG = 5;
	uint32 IOMGDIKELIA = 3;
	uint32 PDMDKAPCOJM = 2;
}

message LEEHJGNBGNK {
	uint32 level = 5;
	uint32 queue_position = 14;
}

message OCBOLHFOIGI {
	repeated LEEHJGNBGNK FMDKHADMCOC = 7;
}

message DMJLKIFEMMN {
	uint32 IGHLABGGIJE = 284;
	oneof KFELKJLDKEH {
		KLINPBNKIIA GAIBHJHDOHB = 7;
		PBMKKICMLDA KPJAFBCPEGI = 8;
	}
}

message PIIBOJCEJJN {
	uint32 daily_index = 2;
	uint32 GIMLNDLOFFA = 7;
}

message KLINPBNKIIA {
	BJNCDEFEEJI CCLJMNCKECP = 5;
	repeated uint32 EIJDEOPOFNB = 13;
	repeated PIIBOJCEJJN DNCBPCENKIF = 6;
}

message PBMKKICMLDA {
	uint32 FHBOMFBLGPD = 1;
}

message JKMFMMPMNAM {
	oneof KFELKJLDKEH {
		DPDIEGOAGBP KANGPCOKFNE = 9;
		FPEGPJCEOEI HHCIFNFMKLA = 7;
		FKHFONPKDIP OCGPLMNKMLK = 2;
		AEJCCMEPLGO AKMNKLADOLM = 11;
		NIGCOPGHAMJ KKDDANDLFBD = 5;
		KHPHAIFNJEI AFFNCONKEKP = 12;
		PLODIDCJOKA CNIBNGJDNJP = 3;
		KHCAKPOMGNK OAPMKLFJKKG = 14;
	}
}

message DPDIEGOAGBP {
}

message FPEGPJCEOEI {
}

message FKHFONPKDIP {
	uint32 dialogue_id = 1;
}

message AEJCCMEPLGO {
}

message NIGCOPGHAMJ {
	bool HHGAPDFINDI = 14;
	uint32 BGLEHMKMAPG = 3;
}

message KHPHAIFNJEI {
}

message PLODIDCJOKA {
}

message KHCAKPOMGNK {
	bool MMKIJAEMNBL = 15;
	uint32 BGLEHMKMAPG = 5;
}

message OMOJDEIFDAM {
	CGHKIDBJHFH rogue_action = 6;
	PKHJBPMIBBA source = 13;
}

message CGHKIDBJHFH {
	oneof KFELKJLDKEH {
		NLCALKLPGOG PJABKIFDNND = 10;
		OJLEHPPJBBC NIHIFEMOKAM = 9;
		OJLEHPPJBBC MLCGALIHAIP = 7;
		OCJGNPIFOBM BIDDDNIPBLE = 1;
		NMENKIGNBCA DIJHPEHONOK = 2;
		NIGCOPGHAMJ EDHBKECGOLI = 8;
		HJKDNGIHMAA MFHBHKIMDCA = 11;
		uint32 NPFPAJLCLNN = 3;
		uint32 IOMGDIKELIA = 2020;
		KHCAKPOMGNK GKAHDHELILD = 1923;
		KHPHAIFNJEI GNPEAMELJDJ = 1913;
		uint32 CBAKIHCDENP = 209;
	}
}

message HJKDNGIHMAA {
	uint32 dialogue_id = 14;
}

message NLCALKLPGOG {
	uint32 OGJOFMCMFPG = 15;
	uint32 BMALPKEKBEL = 7;
	HDIJJMDPILE PJGBFKNJPNO = 10;
}

message OJLEHPPJBBC {
	uint32 OGJOFMCMFPG = 7;
	uint32 BMALPKEKBEL = 9;
}

message OCJGNPIFOBM {
	uint32 queue_position = 8;
	uint32 GFFBDANDHMK = 7;
	uint32 level = 11;
}

message NMENKIGNBCA {
	uint32 EENJBPMNDOL = 9;
	DMJLKIFEMMN IFNMBNGIFPH = 6;
}

message FGPBIBIJCOH {
	uint32 BGLEHMKMAPG = 11;
	bool HHGAPDFINDI = 1;
}
message SwordTrainingGameSyncChangeScNotify {
	repeated OMOJDEIFDAM LEADMNEIMDP = 2;
}

message HDFKPEEBGEN {
	uint32 progress = 2;
	uint32 id = 15;
}

message NOKODMNOHMN {
	repeated uint32 ONILFFENAMO = 15;
	repeated HDFKPEEBGEN NCKCMGCBEHK = 9;
}
message GetSwordTrainingDataCsReq {
}
message GetSwordTrainingDataScRsp {
	uint32 retcode = 7;
	repeated uint32 CNBCKEFNFGE = 10;
	uint32 DCHGIODEDDK = 15;
	bool KLBPECANFIG = 11;
	ALEFDNLLKLB GAJBFPCPIGM = 3;
	NOKODMNOHMN KJKBKEGIGHK = 2;
	repeated uint32 JOEFNHGGAGO = 8;
	repeated uint32 FABKPHMJGHL = 13;
}
message SwordTrainingTurnActionCsReq {
	repeated uint32 BHNFGPEHOMO = 11;
	repeated uint32 PHAJEHIBKFI = 2;
}
message SwordTrainingTurnActionScRsp {
	uint32 retcode = 5;
	repeated uint32 BHNFGPEHOMO = 3;
}
message SwordTrainingDailyPhaseConfirmCsReq {
	BJNCDEFEEJI IFENLNHLBAB = 4;
}
message SwordTrainingDailyPhaseConfirmScRsp {
	uint32 retcode = 6;
	bool MLLAEFJEMCF = 7;
}
message SwordTrainingDialogueSelectOptionCsReq {
	uint32 option_id = 1;
}
message SwordTrainingDialogueSelectOptionScRsp {
	uint32 retcode = 9;
}
message SwordTrainingExamResultConfirmCsReq {
}
message SwordTrainingExamResultConfirmScRsp {
	uint32 retcode = 8;
}
message EnterSwordTrainingExamCsReq {
}
message EnterSwordTrainingExamScRsp {
	uint32 retcode = 5;
	SceneBattleInfo battle_info = 12;
}
message SwordTrainingLearnSkillCsReq {
	uint32 skill_id = 6;
}
message SwordTrainingLearnSkillScRsp {
	uint32 skill_id = 3;
	uint32 retcode = 12;
}
message SwordTrainingStartGameCsReq {
	uint32 game_story_line_id = 6;
}
message SwordTrainingStartGameScRsp {
	uint32 retcode = 15;
	ALEFDNLLKLB GAJBFPCPIGM = 3;
}
message SwordTrainingStoryConfirmCsReq {
	uint32 BGLEHMKMAPG = 12;
}
message SwordTrainingStoryConfirmScRsp {
	uint32 retcode = 5;
	uint32 BGLEHMKMAPG = 4;
}
message SwordTrainingGiveUpGameCsReq {
}
message SwordTrainingGiveUpGameScRsp {
	uint32 retcode = 10;
}
message SwordTrainingGameSettleScNotify {
	uint32 PIGEEBCKCOO = 7;
	HDMKPHALALG reason = 15;
	repeated uint32 PPIMFPOOOKB = 3;
	ItemList reward = 9;
	uint32 IFNMBNGIFPH = 1;
	repeated uint32 CCDCHKKMGJF = 2;
	uint32 game_story_line_id = 14;
	uint32 FPBNIPMHANH = 13;
}
message SwordTrainingUnlockSyncScNotify {
	repeated HDFKPEEBGEN NCKCMGCBEHK = 6;
	repeated uint32 ONILFFENAMO = 4;
}
message SwordTrainingSelectEndingCsReq {
	uint32 DECJMBHNNHD = 13;
}
message SwordTrainingSelectEndingScRsp {
	uint32 retcode = 8;
	uint32 DECJMBHNNHD = 15;
}
message SwordTrainingRestoreGameCsReq {
}
message SwordTrainingRestoreGameScRsp {
	ALEFDNLLKLB GAJBFPCPIGM = 8;
	uint32 retcode = 5;
}
message SwordTrainingStoryBattleCsReq {
}
message SwordTrainingStoryBattleScRsp {
	uint32 retcode = 11;
	SceneBattleInfo battle_info = 2;
}
message SwordTrainingActionTurnSettleScNotify {
	repeated MMOIBACBPKA MCCCNLIIIBC = 14;
	uint32 CGFCMKNCCDC = 6;
}
message SwordTrainingResumeGameCsReq {
	uint32 game_story_line_id = 6;
}
message SwordTrainingResumeGameScRsp {
	uint32 retcode = 10;
	ALEFDNLLKLB GAJBFPCPIGM = 3;
}
message SwordTrainingSetSkillTraceCsReq {
	uint32 skill_id = 5;
}
message SwordTrainingSetSkillTraceScRsp {
	uint32 skill_id = 12;
	uint32 retcode = 2;
}
message SwordTrainingMarkEndingViewedCsReq {
}
message SwordTrainingMarkEndingViewedScRsp {
	uint32 retcode = 13;
}

enum CmdPlayerSync {
	CmdPlayerSyncNone = 0;
	CmdPlayerSyncScNotify = 610;
}

message BasicModuleSync {
	uint32 week_cocoon_finished_count = 6;
	uint32 stamina = 1;
}

message PlayerBoardModuleSync {
	string signature = 11;
	bool PAGJKDJIGPI = 9;
	repeated uint32 ALMMHKFKHLK = 15;
	repeated HeadIconData unlocked_head_icon_list = 10;
}

message AvatarSync {
	repeated Avatar avatar_list = 1;
}

message MissionSync {
	repeated uint32 HNEPOEDCIDK = 15;
	repeated uint32 finished_main_mission_id_list = 10;
	repeated Mission mission_list = 4;
	repeated IKAMMKLBOCO EJBGGJONBOL = 12;
	repeated uint32 ANIHPCKNGBM = 2;
	repeated uint32 MCFONOPKOKD = 5;
	repeated FHABEIKAFBO GAEGMBIOGOH = 6;
}

message DMBMPAHKHLA {
	repeated uint32 LKKIDNJCFJA = 14;
	repeated uint32 DINGKFDBCJJ = 12;
}

message SyncStatus {
	repeated uint32 LNEJLGEFPLE = 12;
	repeated SectionStatus section_status = 1;
	repeated uint32 CNGLDJNPOPI = 7;
	repeated GroupStatus message_group_status = 9;
}
message PlayerSyncScNotify {
	BasicModuleSync basic_module_sync = 10;
	repeated NKDOHHODNNH CGLEKFODMAG = 1311;
	repeated GKDIHIFFHFD IGIPEIMGEAA = 709;
	uint32 total_achievement_exp = 405;
	PlayerBasicInfo basic_info = 5;
	DMBMPAHKHLA OMJOPKGJPLG = 153;
	repeated Equipment equipment_list = 14;
	repeated Relic relic_list = 3;
	repeated WaitDelResource wait_del_resource_list = 8;
	repeated Material material_list = 4;
	repeated MultiPathAvatarInfo multi_path_avatar_info_list = 549;
	repeated Material FCOKFFEAPMI = 249;
	PlayerBoardModuleSync playerboard_module_sync = 1978;
	SyncStatus sync_status = 1160;
	AvatarSync avatar_sync = 13;
	ItemList MJOKLHFPGAD = 507;
	repeated Quest quest_list = 1;
	repeated uint32 del_relic_list = 2;
	MissionSync mission_sync = 12;
	repeated uint32 new_item_hint_list = 1447;
	repeated uint32 del_equipment_list = 11;
}

enum CmdTalkRewardType {
	CmdTalkRewardTypeNone = 0;
	CmdGetFirstTalkNpcScRsp = 2102;
	CmdGetFirstTalkNpcCsReq = 2179;
	CmdSelectInclinationTextCsReq = 2141;
	CmdFinishFirstTalkNpcScRsp = 2106;
	CmdGetNpcTakenRewardScRsp = 2105;
	CmdTakeTalkRewardScRsp = 2153;
	CmdFinishFirstTalkByPerformanceNpcScRsp = 2126;
	CmdTakeTalkRewardCsReq = 2198;
	CmdSelectInclinationTextScRsp = 2155;
	CmdFinishFirstTalkNpcCsReq = 2197;
	CmdGetFirstTalkByPerformanceNpcScRsp = 2139;
	CmdFinishFirstTalkByPerformanceNpcCsReq = 2116;
	CmdGetFirstTalkByPerformanceNpcCsReq = 2107;
	CmdGetNpcTakenRewardCsReq = 2110;
}
message GetNpcTakenRewardCsReq {
	uint32 npc_id = 13;
}
message GetNpcTakenRewardScRsp {
	repeated uint32 talk_event_list = 10;
	uint32 retcode = 11;
	uint32 npc_id = 9;
}
message TakeTalkRewardCsReq {
	uint32 IEMOEOIMHMA = 8;
	Vector OLCONCNJMMP = 7;
}
message TakeTalkRewardScRsp {
	uint32 retcode = 7;
	uint32 IEMOEOIMHMA = 2;
	ItemList reward = 3;
}
message GetFirstTalkNpcCsReq {
	repeated uint32 npc_id_list = 15;
}

message FirstNpcTalkInfo {
	bool is_meet = 5;
	uint32 npc_id = 6;
}
message GetFirstTalkNpcScRsp {
	uint32 retcode = 1;
	repeated FirstNpcTalkInfo npc_meet_status_list = 8;
}
message FinishFirstTalkNpcCsReq {
	uint32 npc_id = 4;
}
message FinishFirstTalkNpcScRsp {
	uint32 npc_id = 3;
	uint32 retcode = 2;
}
message SelectInclinationTextCsReq {
	uint32 talk_sentence_id = 11;
}
message SelectInclinationTextScRsp {
	uint32 retcode = 5;
	uint32 talk_sentence_id = 9;
}

message NpcMeetByPerformanceStatus {
	bool is_meet = 12;
	uint32 performance_id = 5;
}
message GetFirstTalkByPerformanceNpcCsReq {
	repeated uint32 performance_id_list = 6;
}
message GetFirstTalkByPerformanceNpcScRsp {
	uint32 retcode = 4;
	repeated NpcMeetByPerformanceStatus npc_meet_status_list = 5;
}
message FinishFirstTalkByPerformanceNpcCsReq {
	uint32 performance_id = 12;
}
message FinishFirstTalkByPerformanceNpcScRsp {
	uint32 retcode = 9;
	uint32 performance_id = 12;
	ItemList reward = 8;
}

enum CmdTarotBookType {
	CmdTarotBookTypeNone = 0;
	CmdTarotBookFinishInteractionScRsp = 8160;
	CmdTarotBookMultiOpenPackAndUnlockStoryScRsp = 8149;
	CmdTarotBookUnlockInteractionScRsp = 8144;
	CmdTarotBookUnlockStoryCsReq = 8142;
	CmdTarotBookGetDataCsReq = 8141;
	CmdTarotBookGetDataScRsp = 8155;
	CmdTarotBookFinishInteractionCsReq = 8151;
	CmdTarotBookOpenPackScRsp = 8159;
	CmdTarotBookFinishStoryCsReq = 8147;
	CmdTarotBookUnlockInteractionCsReq = 8143;
	CmdTarotBookFinishStoryScRsp = 8154;
	CmdTarotBookMultiOpenPackAndUnlockStoryCsReq = 8146;
	CmdTarotBookSyncDataScNotify = 8145;
	CmdTarotBookUnlockStoryScRsp = 8152;
	CmdTarotBookOpenPackCsReq = 8157;
	CmdTarotBookModifyEnergyScNotify = 8150;
}

message EJDGKNKHKHH {
	uint32 level = 13;
	uint32 id = 10;
}

message BKMGDPHACKE {
	bool BIINNCNDPCG = 3;
	uint32 id = 6;
}

message FLOICKMNMLL {
	repeated BKMGDPHACKE DGPEJFLJNOJ = 11;
	repeated EJDGKNKHKHH CNIJNMDGEDD = 3;
}

message OFDGOGDBHAC {
	repeated uint32 LIBLLKBLDCH = 14;
	repeated uint32 OMICAJEOLJF = 8;
}
message TarotBookGetDataCsReq {
}
message TarotBookGetDataScRsp {
	FLOICKMNMLL HEFJEJHOJEA = 1;
	uint32 FDCKFKFKHLO = 4;
	map<uint32, uint32> NDCJJPGNFLN = 8;
	map<uint32, uint32> JKEMDJIAMHI = 14;
	uint32 LENPIDMPECP = 6;
	uint32 retcode = 13;
	uint32 energy_info = 5;
	OFDGOGDBHAC IPNINOPEKBP = 11;
}
message TarotBookOpenPackCsReq {
}
message TarotBookOpenPackScRsp {
	uint32 retcode = 7;
	map<uint32, uint32> CJENCDIFLCF = 6;
	uint32 energy_info = 11;
	uint32 FDCKFKFKHLO = 4;
	uint32 LENPIDMPECP = 14;
	map<uint32, uint32> IIKBCNBJKKI = 2;
}
message TarotBookUnlockStoryCsReq {
	repeated uint32 PPIMFPOOOKB = 3;
}
message TarotBookUnlockStoryScRsp {
	EJDGKNKHKHH PPDGGOCIEDE = 15;
	repeated uint32 PPIMFPOOOKB = 2;
	map<uint32, uint32> NDCJJPGNFLN = 9;
	map<uint32, uint32> JKEMDJIAMHI = 1;
	uint32 retcode = 10;
}
message TarotBookFinishStoryCsReq {
	uint32 BGLEHMKMAPG = 11;
}
message TarotBookFinishStoryScRsp {
	uint32 retcode = 12;
	uint32 BGLEHMKMAPG = 8;
	FLOICKMNMLL HEFJEJHOJEA = 13;
}
message TarotBookModifyEnergyScNotify {
	uint32 energy_info = 6;
	uint32 sub_mission_id = 11;
}
message TarotBookFinishInteractionCsReq {
	uint32 NBLHJJJEGNO = 6;
}
message TarotBookFinishInteractionScRsp {
	uint32 retcode = 1;
	uint32 NBLHJJJEGNO = 6;
}
message TarotBookUnlockInteractionCsReq {
	repeated uint32 OHKHPOLFIBP = 15;
}
message TarotBookUnlockInteractionScRsp {
	repeated uint32 OHKHPOLFIBP = 1;
	uint32 retcode = 6;
}
message TarotBookSyncDataScNotify {
	uint32 LENPIDMPECP = 12;
	uint32 FDCKFKFKHLO = 14;
	map<uint32, uint32> NDCJJPGNFLN = 6;
	map<uint32, uint32> JKEMDJIAMHI = 8;
	uint32 energy_info = 3;
	FLOICKMNMLL HEFJEJHOJEA = 2;
}
message TarotBookMultiOpenPackAndUnlockStoryCsReq {
}
message TarotBookMultiOpenPackAndUnlockStoryScRsp {
	FLOICKMNMLL HEFJEJHOJEA = 3;
	uint32 retcode = 10;
	repeated uint32 NGBLPGNJOMD = 11;
	uint32 energy_info = 15;
	uint32 LENPIDMPECP = 4;
	uint32 FDCKFKFKHLO = 12;
	map<uint32, uint32> NDCJJPGNFLN = 13;
	map<uint32, uint32> JKEMDJIAMHI = 7;
}

enum CmdTelevisionActivityType {
	CmdTelevisionActivityTypeNone = 0;
	CmdGetTelevisionActivityDataCsReq = 6961;
	CmdEnterTelevisionActivityStageScRsp = 6962;
	CmdEnterTelevisionActivityStageCsReq = 6979;
	CmdTelevisionActivityDataChangeScNotify = 6977;
	CmdGetTelevisionActivityDataScRsp = 6975;
	CmdTelevisionActivityBattleEndScNotify = 6972;
}

message OGJDNLIJKFB {
	uint32 NINLFBGLBLL = 8;
	uint32 KEGCJPPOKBK = 3;
	uint32 max_score = 9;
}
message GetTelevisionActivityDataCsReq {
}
message GetTelevisionActivityDataScRsp {
	uint32 retcode = 7;
	repeated OGJDNLIJKFB KADGMHHGKMP = 9;
}
message TelevisionActivityDataChangeScNotify {
	repeated OGJDNLIJKFB KADGMHHGKMP = 14;
}
message TelevisionActivityBattleEndScNotify {
	uint32 FIDIOIHLLGA = 6;
	uint32 FCEPIPCCOMN = 10;
	OGJDNLIJKFB DFCCBDPNLEA = 11;
	uint32 HOEHIOBIIEJ = 14;
	uint32 NPJEECEDPOK = 1;
}

message DEPEAHJNKGJ {
	uint32 avatar_id = 13;
	AvatarType avatar_type = 15;
}
message EnterTelevisionActivityStageCsReq {
	repeated uint32 buff_list = 2;
	repeated DEPEAHJNKGJ avatar_list = 6;
	uint32 NINLFBGLBLL = 9;
}
message EnterTelevisionActivityStageScRsp {
	SceneBattleInfo battle_info = 9;
	uint32 NINLFBGLBLL = 13;
	uint32 retcode = 14;
}

enum CmdTextJoinType {
	CmdTextJoinTypeNone = 0;
	CmdTextJoinSaveCsReq = 3810;
	CmdTextJoinQueryScRsp = 3853;
	CmdTextJoinSaveScRsp = 3805;
	CmdTextJoinBatchSaveCsReq = 3879;
	CmdTextJoinBatchSaveScRsp = 3802;
	CmdTextJoinQueryCsReq = 3898;
}

message IOMOPENEMBF {
	uint32 NLFNJPMACPM = 10;
	uint32 FANOKEMBMPB = 2;
	uint32 ADINNBPINAK = 13;
	string HBJKEEBDJML = 5;
	string NKIOIIOIAOG = 15;
}
message TextJoinSaveCsReq {
	uint32 ADINNBPINAK = 6;
	string HBJKEEBDJML = 7;
	uint32 FANOKEMBMPB = 10;
}
message TextJoinSaveScRsp {
	string HBJKEEBDJML = 13;
	uint32 ADINNBPINAK = 14;
	uint32 FANOKEMBMPB = 10;
	uint32 retcode = 15;
}
message TextJoinQueryCsReq {
	repeated uint32 PONENNKHCMJ = 2;
}
message TextJoinQueryScRsp {
	repeated IOMOPENEMBF NKKKOPACOKG = 1;
	uint32 retcode = 3;
}
message TextJoinBatchSaveCsReq {
	repeated IOMOPENEMBF NKKKOPACOKG = 6;
}
message TextJoinBatchSaveScRsp {
	uint32 retcode = 9;
	repeated IOMOPENEMBF NKKKOPACOKG = 8;
}

enum CmdTrackPhotoActivityType {
	CmdTrackPhotoActivityTypeNone = 0;
	CmdSettleTrackPhotoStageScRsp = 7552;
	CmdStartTrackPhotoStageScRsp = 7559;
	CmdQuitTrackPhotoStageScRsp = 7554;
	CmdGetTrackPhotoActivityDataScRsp = 7560;
	CmdStartTrackPhotoStageCsReq = 7556;
	CmdQuitTrackPhotoStageCsReq = 7553;
	CmdSettleTrackPhotoStageCsReq = 7551;
	CmdGetTrackPhotoActivityDataCsReq = 7555;
}

message CGLIGECGAKN {
	uint32 stage_id = 5;
	uint32 max_score = 14;
}
message GetTrackPhotoActivityDataCsReq {
}
message GetTrackPhotoActivityDataScRsp {
	uint32 retcode = 11;
	repeated CGLIGECGAKN EMGFLDOPKGL = 5;
}

message GEOAEOFJOGC {
	bool KFBOAONLDEM = 9;
	uint32 entity_id = 15;
}
message SettleTrackPhotoStageCsReq {
	uint32 stage_id = 10;
	uint32 cost_time = 3;
	repeated GEOAEOFJOGC LPIHANIOJFI = 9;
}
message SettleTrackPhotoStageScRsp {
	uint32 score_id = 9;
	uint32 stage_id = 11;
	repeated GEOAEOFJOGC LPIHANIOJFI = 12;
	uint32 retcode = 4;
}
message StartTrackPhotoStageCsReq {
	uint32 stage_id = 7;
	bool DJFCMLIPDAB = 15;
}
message StartTrackPhotoStageScRsp {
	uint32 retcode = 3;
	uint32 MDLNDGIJNML = 4;
}
message QuitTrackPhotoStageCsReq {
	uint32 stage_id = 14;
}
message QuitTrackPhotoStageScRsp {
	uint32 retcode = 7;
}

enum CmdTrainPartyType {
	CmdTrainPartyTypeNone = 0;
	CmdTrainPartyGamePlayStartScRsp = 8092;
	CmdTrainPartyLeaveCsReq = 8074;
	CmdTrainPartySettleNotify = 8097;
	CmdTrainPartyUpdatePosEnvScRsp = 8001;
	CmdTrainPartyBuildStartStepScRsp = 8026;
	CmdTrainPartyEnterCsReq = 8036;
	CmdTrainPartyBuildStartStepCsReq = 8016;
	CmdTrainPartyBuildDiyCsReq = 8063;
	CmdTrainPartyUpdatePosEnvCsReq = 8042;
	CmdTrainPartyUseCardCsReq = 8098;
	CmdTrainPartySyncUpdateScNotify = 8041;
	CmdTrainPartyGetDataCsReq = 8010;
	CmdTrainPartyHandlePendingActionCsReq = 8007;
	CmdTrainPartyEnterScRsp = 8078;
	CmdTrainPartyGetDataScRsp = 8005;
	CmdTrainPartyLeaveScRsp = 8090;
	CmdTrainPartyUseCardScRsp = 8053;
	CmdTrainPartyBuildingUpdateNotify = 8072;
	CmdTrainPartyTakeBuildLevelAwardCsReq = 8051;
	CmdTrainPartyHandlePendingActionScRsp = 8039;
	CmdTrainPartyBuildDiyScRsp = 8067;
	CmdTrainPartyGamePlayStartCsReq = 8069;
	CmdTrainPartyAddBuildDynamicBuffCsReq = 8035;
	CmdTrainPartyTakeBuildLevelAwardScRsp = 8025;
	CmdTrainPartyMoveScNotify = 8079;
	CmdTrainPartyAddBuildDynamicBuffScRsp = 8037;
	CmdTrainPartyGamePlaySettleNotify = 8024;
}

enum KNOOCOCANAM {
	BuildGoalStepNone = 0;
	BuildGoalStepIdle = 1;
	BuildGoalStepStart = 2;
	BuildGoalStepFinish = 3;
}

enum CBEJAJENOHJ {
	kTrainPartySrcNone = 0;
	kTrainPartySrcCard = 1;
	kTrainPartySrcGrid = 2;
	kTrainPartySrcPam = 3;
	kTrainPartySrcPassenger = 4;
	kTrainPartySrcBuilding = 5;
}

enum IJDNOJEMIAN {
	kDialogueEventNone = 0;
	kGamePlayStartDialogueEvent = 1;
	kGridDialogueEvent = 2;
	kAfterMeetingDialogueEvent = 3;
}

enum LCDEMGACEKD {
	kMtSkillNone = 0;
	kMtSkillModifyBase = 1;
	kMtSkillModifyRatio = 2;
	kMtSkillMultiplyRatio = 3;
	kMtSkillSelfDestroy = 4;
}

enum DMLCPAKDBLJ {
	TRAIN_PARTY_MT_CATEGORY_NONE = 0;
	TRAIN_PARTY_MT_CATEGORY_S = 1;
	TRAIN_PARTY_MT_CATEGORY_A = 2;
	TRAIN_PARTY_MT_CATEGORY_B = 3;
	TRAIN_PARTY_MT_CATEGORY_C = 4;
	TRAIN_PARTY_MT_CATEGORY_D = 5;
	TRAIN_PARTY_MT_CATEGORY_E = 6;
	TRAIN_PARTY_MT_CATEGORY_F = 7;
	TRAIN_PARTY_MT_CATEGORY_G = 8;
}

message FPLMDELMJKB {
	uint32 cur_index = 12;
	uint32 card_id = 5;
	repeated uint32 HCPGEALODME = 9;
	uint32 unique_id = 15;
}

message HBCINIKPAFI {
	repeated FPLMDELMJKB FODPDMPBAND = 5;
}

message CGCONJFFFBB {
	HBCINIKPAFI FODPDMPBAND = 5;
	uint32 HAFCKONEHFM = 13;
	bool LKLLMPOKOGH = 2;
}

message KKNLMCJIGAF {
	uint32 GHFAIHLCELN = 14;
	uint32 HFNHLCFNHKD = 4;
	uint32 unique_id = 15;
	uint32 display_value = 6;
}

message KACKJJDJONI {
	uint32 HCFOCPKFOBG = 10;
	uint32 NCDCGFKOLOE = 8;
	uint32 BLHPICIOFAI = 1;
	uint32 PAPKGJOJPII = 9;
	repeated uint32 KDDPPGOCOMB = 6;
	uint32 JODNMDOAMKC = 15;
}

message EDFABKMNBLI {
	uint32 BIHMELMJHPO = 12;
	uint32 LLJEFMPDJKH = 6;
	repeated KKNLMCJIGAF MKOAMBMKDID = 2;
	KACKJJDJONI GDGHCBGHLND = 9;
}

message FPDFCGKIILE {
	uint32 KPAKAPNHNND = 11;
	uint32 KHHLNGGECPB = 2;
}

message GOCKBLNJIBG {
	uint32 skill_level = 4;
	uint32 skill_id = 7;
	uint32 JGMIPMDPPIJ = 15;
}

message MAONNNELGCC {
	uint32 passenger_id = 3;
	uint32 MIHLFGCGKNO = 14;
	FPDFCGKIILE BOJBPOELFCI = 12;
}

message TrainPartyPassenger {
	repeated uint32 PCLMNBILAPH = 6;
	uint32 record_id = 7;
	bool CINMLCKBHIM = 15;
	uint32 passenger_id = 8;
}

message LHLEEHCBMOL {
	repeated GOCKBLNJIBG skill_list = 4;
	repeated uint32 CFKPAICDJPJ = 12;
	repeated MAONNNELGCC KBGDCEHIFFJ = 6;
	uint32 cur_index = 14;
	uint32 PKIDBDGPILO = 3;
	uint32 OAFAAEEMNFB = 7;
}

message TrainPartyPassengerInfo {
	repeated uint32 PCLMNBILAPH = 10;
	repeated TrainPartyPassenger passenger_info_list = 1;
}

message TrainPartyArea {
	repeated uint32 step_id_list = 15;
	AreaStepInfo area_step_info = 13;
	uint32 area_id = 12;
	repeated AreaDynamicInfo dynamic_info = 1;
	uint32 progress = 3;
	repeated uint32 verify_step_id_list = 10;
	repeated uint32 static_prop_id_list = 7;
}

message INDFFNNHOHC {
	repeated uint32 step_id_list = 10;
	uint32 area_id = 1;
}

message PPKDPAJPAGF {
	uint32 GJFHPCIEBOJ = 7;
	KNOOCOCANAM status = 10;
	uint32 JLHDKOLMEDA = 6;
}

message AreaStepInfo {
	repeated PPKDPAJPAGF IMEKHGCIEDN = 1;
	uint32 HEIDCIKEDPD = 5;
}

message AreaDynamicInfo {
	uint32 diy_dynamic_id = 2;
	uint32 dice_slot_id = 15;
}

message TrainPartyInfo {
	uint32 cur_fund = 2;
	uint32 PPFFKFGOLLJ = 3;
	uint32 EEBNAAPBKCN = 1;
	repeated uint32 dynamic_id_list = 13;
	uint32 FLBNEKGIDBO = 11;
	repeated INDFFNNHOHC EOHBBEAKODF = 12;
	uint32 CNAJOIGNMLJ = 7;
	repeated TrainPartyArea area_list = 4;
	repeated uint32 CIGACGHPDGK = 6;
	uint32 OBOKGLCMKKE = 8;
}

message TrainPartyData {
	TrainPartyInfo train_party_info = 12;
	CDNGNDNLNAJ CEFMBAFCNPK = 8;
	uint32 unlock_area_num = 13;
	uint32 AIANOFKNLHG = 3;
	TrainPartyPassengerInfo passenger_info = 6;
	uint32 record_id = 2;
}

message CDNGNDNLNAJ {
	LHLEEHCBMOL AAKHCNEDBCD = 9;
	EDFABKMNBLI EEIHDCPOLEF = 11;
	uint32 GONEAKBDGEK = 15;
	GCFEHMENONM GBFCLMLIMHC = 6;
	CGCONJFFFBB HBHEAJIJEGF = 14;
}
message TrainPartyGetDataCsReq {
}
message TrainPartyGetDataScRsp {
	uint32 retcode = 7;
	TrainPartyData train_party_data = 12;
}
message TrainPartyUseCardCsReq {
	uint32 EEGHHHKCGHB = 2;
}
message TrainPartyUseCardScRsp {
	uint32 retcode = 12;
	uint32 EEGHHHKCGHB = 6;
}
message TrainPartyMoveScNotify {
	repeated KKNLMCJIGAF PEADIOCNIMF = 1;
	uint32 GHEEOEOHMFI = 14;
}
message TrainPartySettleNotify {
	FKMBFLMEGEB HILOMEKAFBP = 8;
	uint32 EEGHHHKCGHB = 15;
}

message FKMBFLMEGEB {
	repeated BAEPNHDCIEM FOAPLIALHDI = 12;
	uint32 HEIJCNLNHHI = 9;
	repeated MAONNNELGCC KBGDCEHIFFJ = 15;
}

message BAEPNHDCIEM {
	uint32 IJFIHGCKNHG = 7;
	repeated uint32 switch_list = 12;
}

message NCLCBOPCEJG {
	FPLMDELMJKB HMFFHBHALGE = 2;
}

message IDBEOMMCKIK {
	FPDFCGKIILE BOJBPOELFCI = 3;
	uint32 passenger_id = 1;
}

message IBOMHKHBAAO {
	repeated IDBEOMMCKIK NFEOLNAOGDK = 7;
}

message ENJHDLHKINO {
	GCFEHMENONM pending_action = 13;
}

message FNOGHGHPJPD {
	uint32 cur_index = 13;
}

message JLDHCFGGEAO {
	GOCKBLNJIBG MHMEDDEHBHI = 3;
}

message PFGIAHAIDLM {
	repeated GOCKBLNJIBG skill_list = 9;
}

message JHMNLCOBJCJ {
	TrainPartyPassenger ABBNHMGGPIL = 2;
}

message FKJLBFNIGGM {
	repeated uint32 PCLMNBILAPH = 8;
}

message HAKMEBIAJCF {
	repeated KKNLMCJIGAF MKOAMBMKDID = 12;
}

message HMOPIBLFCLN {
	bool LKLLMPOKOGH = 15;
	uint32 HAFCKONEHFM = 6;
	KACKJJDJONI GDGHCBGHLND = 11;
	HBCINIKPAFI LNMMKFMEAJM = 12;
}

message PLKCMGDEDCK {
	CBEJAJENOHJ src = 4;
	oneof PPHBGCABELF {
		HBCINIKPAFI LNMMKFMEAJM = 781;
		IBOMHKHBAAO FPFDJNDNPIM = 1303;
		ENJHDLHKINO NJKJNBDBOCA = 483;
		FNOGHGHPJPD LGJGBIGHONP = 694;
		HAKMEBIAJCF DGNKBNGIPKI = 764;
		JLDHCFGGEAO MKKPCHHNHCJ = 151;
		HMOPIBLFCLN PKPJEFGGBOO = 1469;
		PFGIAHAIDLM NHACNNJPALP = 1986;
		JHMNLCOBJCJ AHPDPOOLJLE = 558;
		FKJLBFNIGGM AFMIEICDNEA = 693;
	}
}
message TrainPartySyncUpdateScNotify {
	repeated PLKCMGDEDCK FFLPKLLDHLM = 6;
}

message GCFEHMENONM {
	uint32 queue_position = 4;
	oneof DMJFKDOOFMP {
		NJKENNCJLCF IAMKDJCFMIB = 1447;
		MIIAIODLEOA LEEHAEOBEBA = 345;
		EMMDENJBFPF OAOOFNJGIDH = 55;
		EPBGFBEDANM PMMGOCJFEEJ = 433;
	}
}

message HHPIAFBHJCF {
	bool confirm = 6;
	uint32 option_id = 4;
}

message NJKENNCJLCF {
	uint32 event_id = 11;
	repeated HHPIAFBHJCF option_list = 10;
	IJDNOJEMIAN HOIOKBKGFDN = 15;
}

message HPFKGDDIFHG {
	uint32 event_id = 4;
	uint32 option_id = 12;
}

message BFIFANAOCPC {
	FKMBFLMEGEB HILOMEKAFBP = 11;
}

message OCMHOFEMNHI {
	uint32 level = 4;
	uint32 skill_id = 13;
	uint32 JGMIPMDPPIJ = 10;
}

message MIIAIODLEOA {
	uint32 passenger_id = 9;
	repeated OCMHOFEMNHI GANAKFAIBFC = 13;
}

message EPBGFBEDANM {
	uint32 IDAIHKMMDEK = 2;
	repeated GOCKBLNJIBG LLIJAGDKJCO = 11;
}

message GLBFBNHFCNO {
	uint32 IEHHDALHGPI = 1;
}

message MBINMAONBCD {
	repeated GOCKBLNJIBG skill_list = 4;
}

message PJJDMMBKKCN {
	uint32 passenger_id = 7;
	uint32 unique_id = 3;
	uint32 KHHLNGGECPB = 5;
}

message HEOJLDBKKGE {
	uint32 num = 10;
	uint32 passenger_id = 14;
}

message EMMDENJBFPF {
	uint32 NPJEECEDPOK = 8;
	repeated PJJDMMBKKCN MMEIPHBNKED = 14;
	repeated BJGLDLJKIDH KJMLIAMGDLE = 7;
	repeated HEOJLDBKKGE CCGBHHFBAFJ = 15;
	uint32 KMLPPMNMPKE = 6;
	uint32 MLIIJGOAECK = 5;
	uint32 MLIPPLKIIFD = 11;
	uint32 CFOKIGIHCFP = 9;
}

message LPCNJMFIPNP {
	LCDEMGACEKD skill_type = 9;
	uint32 FLEJAGFJDKM = 5;
	uint32 skill_id = 6;
}

message OAJOPDGKJDO {
	uint32 unique_id = 15;
	uint32 EGLMGHLEKEF = 7;
	repeated LPCNJMFIPNP FAJCCGHLCAC = 8;
}

message PHOEFKFBIKD {
	uint32 MKEGODINHNC = 15;
	ItemList OJCJNBGNICF = 13;
	repeated uint32 NPOJMHHIBKI = 12;
}

message PECGLKCICGO {
	repeated uint32 CANNGFDAFOE = 13;
}

message JBOCJHNDAMC {
	repeated LPCNJMFIPNP BIHFECJHPGH = 8;
	PHOEFKFBIKD MFAKJHFMAIB = 9;
	uint32 NPJEECEDPOK = 11;
	uint32 CFOKIGIHCFP = 12;
	repeated OAJOPDGKJDO OMGGNAEAHIF = 3;
	repeated HEOJLDBKKGE CCGBHHFBAFJ = 4;
	uint32 score_id = 10;
	DMLCPAKDBLJ IJPPKNKNLNL = 6;
	KACKJJDJONI GDGHCBGHLND = 2;
	repeated PJJDMMBKKCN MMEIPHBNKED = 1;
}

message ENCJKPGOIAL {
	repeated uint32 CANNGFDAFOE = 14;
}

message FBGLLDNLGPE {
	uint32 KMLPPMNMPKE = 4;
	repeated LPCNJMFIPNP NICGNEMCHED = 3;
	repeated PJJDMMBKKCN MMEIPHBNKED = 12;
	repeated HEOJLDBKKGE CCGBHHFBAFJ = 10;
}
message TrainPartyHandlePendingActionCsReq {
	uint32 queue_position = 4;
	oneof GNGLHJGMAOK {
		HPFKGDDIFHG IAMKDJCFMIB = 1433;
		GLBFBNHFCNO PMMGOCJFEEJ = 1375;
		PECGLKCICGO LGBJAELDPNB = 1327;
		ENCJKPGOIAL BGJMFBHCMKL = 271;
	}
}
message TrainPartyHandlePendingActionScRsp {
	FKMBFLMEGEB HILOMEKAFBP = 1;
	bool DLNCBJFGKAA = 11;
	uint32 queue_position = 2;
	uint32 retcode = 12;
	oneof GNGLHJGMAOK {
		BFIFANAOCPC LAELPNHHJIK = 377;
		MBINMAONBCD PMOJBJMKFAN = 547;
		JBOCJHNDAMC AFDNDBADDKP = 1617;
		FBGLLDNLGPE LEDFNCDFAMK = 642;
	}
}
message TrainPartyBuildStartStepCsReq {
	uint32 HEIDCIKEDPD = 3;
	uint32 area_id = 10;
	uint32 GJFHPCIEBOJ = 8;
	AreaDynamicInfo ALAODDBGHPL = 1;
}
message TrainPartyBuildStartStepScRsp {
	uint32 cur_fund = 10;
	uint32 retcode = 15;
}

message CIKOHJNAGON {
	uint32 area_id = 6;
	AreaDynamicInfo KCJBMKJLFBA = 14;
}
message TrainPartyBuildDiyCsReq {
	uint32 dice_slot_id = 6;
	uint32 area_id = 5;
	bool GANHKLNPAPI = 4;
	uint32 diy_dynamic_id = 14;
}
message TrainPartyBuildDiyScRsp {
	bool GANHKLNPAPI = 4;
	uint32 area_id = 15;
	uint32 retcode = 6;
	repeated AreaDynamicInfo dynamic_info = 2;
	repeated CIKOHJNAGON FFLPKLLDHLM = 13;
}

message KMBDKDLNHMC {
	uint32 OKHCJKLJGHF = 15;
	repeated PPKDPAJPAGF CGFIHJCCGCD = 6;
}

message JNAHOJLCNJA {
	uint32 HEIDCIKEDPD = 4;
	repeated PPKDPAJPAGF CGFIHJCCGCD = 5;
	uint32 area_id = 14;
	uint32 progress = 10;
}

message IEFKFKFMEPL {
	uint32 OBOKGLCMKKE = 8;
	uint32 PPFFKFGOLLJ = 10;
}

message FNPMCDNKDFJ {
	uint32 BDCCOPIEHIN = 6;
}

message GEGJHBMLOEM {
	uint32 FLBNEKGIDBO = 15;
}

message BFDDPPLMKPG {
	uint32 MNLEIKIEHHP = 7;
	uint32 area_id = 11;
}

message KMLEHLLOGJG {
	uint32 diy_dynamic_id = 6;
}

message OKFGJEIHLJM {
	uint32 FBFIHJIIABO = 4;
}

message KAKJCJOMFGH {
	uint32 CNAJOIGNMLJ = 4;
}

message MCLNCBCPAFF {
	repeated uint32 CGFIHJCCGCD = 14;
	uint32 area_id = 1;
}

message LNDGCGOBDJL {
	repeated MCLNCBCPAFF area_list = 8;
}

message PPKGJKIFELK {
	oneof PPHBGCABELF {
		OKFGJEIHLJM MAPLOGDNBGB = 584;
		KMBDKDLNHMC EKFLEJANKME = 1365;
		JNAHOJLCNJA JOBEJAFKECD = 590;
		IEFKFKFMEPL DBLBHNPHHKB = 1962;
		FNPMCDNKDFJ CKBNOJAPNNB = 1399;
		BFDDPPLMKPG NEPCONHOFKJ = 642;
		KMLEHLLOGJG EGDGPIKBNLK = 1185;
		GEGJHBMLOEM BHOFHHEMLOG = 1063;
		KAKJCJOMFGH HAEADFOOLND = 1778;
		LNDGCGOBDJL GAIBCBGHHGL = 1100;
	}
}
message TrainPartyBuildingUpdateNotify {
	repeated PPKGJKIFELK BJDFKEMKAOL = 4;
}
message TrainPartyEnterCsReq {
}
message TrainPartyEnterScRsp {
	uint32 retcode = 12;
}
message TrainPartyLeaveCsReq {
}
message TrainPartyLeaveScRsp {
	uint32 retcode = 1;
}

message BJGLDLJKIDH {
	DMLCPAKDBLJ JLLNMGBENAF = 8;
	uint32 level = 9;
}
message TrainPartyGamePlaySettleNotify {
	uint32 record_id = 12;
	TrainPartyPassengerInfo HANFPHGEMGF = 13;
	repeated uint32 OLBAGKMFDAJ = 5;
	uint32 AIANOFKNLHG = 8;
}
message TrainPartyGamePlayStartCsReq {
	repeated uint32 KBGDCEHIFFJ = 5;
	uint32 GONEAKBDGEK = 14;
}
message TrainPartyGamePlayStartScRsp {
	CDNGNDNLNAJ KMDPHCMBJGB = 9;
	uint32 retcode = 8;
}
message TrainPartyAddBuildDynamicBuffCsReq {
}
message TrainPartyAddBuildDynamicBuffScRsp {
	uint32 buff_id = 12;
	uint32 retcode = 4;
}
message TrainPartyTakeBuildLevelAwardCsReq {
	uint32 ECCLPIFMMPP = 11;
}
message TrainPartyTakeBuildLevelAwardScRsp {
	ItemList item_list = 3;
	uint32 retcode = 10;
	uint32 ECCLPIFMMPP = 12;
}

enum CmdTrainVisitorType {
	CmdTrainVisitorTypeNone = 0;
	CmdTrainVisitorBehaviorFinishCsReq = 3710;
	CmdTrainVisitorBehaviorFinishScRsp = 3705;
	CmdTrainRefreshTimeNotify = 3779;
	CmdShowNewSupplementVisitorScRsp = 3739;
	CmdGetTrainVisitorRegisterCsReq = 3797;
	CmdShowNewSupplementVisitorCsReq = 3707;
	CmdGetTrainVisitorBehaviorScRsp = 3753;
	CmdGetTrainVisitorRegisterScRsp = 3706;
	CmdTrainVisitorRewardSendNotify = 3702;
	CmdGetTrainVisitorBehaviorCsReq = 3798;
	CmdTakeTrainVisitorUntakenBehaviorRewardCsReq = 3741;
	CmdTakeTrainVisitorUntakenBehaviorRewardScRsp = 3755;
}

enum TrainVisitorRewardSendType {
	TRAIN_VISITOR_REWARD_SEND_NONE = 0;
	TRAIN_VISITOR_REWARD_SEND_REGISTER = 1;
	TRAIN_VISITOR_REWARD_SEND_MISSION = 2;
}

enum TrainVisitorStatus {
	TRAIN_VISITOR_STATUS_NONE = 0;
	TRAIN_VISITOR_STATUS_INIT = 1;
	TRAIN_VISITOR_STATUS_GET_ON = 2;
	TRAIN_VISITOR_STATUS_GET_OFF = 3;
	TRAIN_VISITOR_STATUS_BE_TRAIN_MEMBER = 4;
}

enum TrainVisitorRegisterGetType {
	TRAIN_VISITOR_REGISTER_GET_TYPE_NONE = 0;
	TRAIN_VISITOR_REGISTER_GET_TYPE_AUTO = 1;
	TRAIN_VISITOR_REGISTER_GET_TYPE_MANUAL = 2;
}

message TrainVisitorBehavior {
	uint32 visitor_id = 10;
	bool is_meet = 11;
}
message TrainVisitorBehaviorFinishCsReq {
	uint32 visitor_id = 4;
}
message TrainVisitorBehaviorFinishScRsp {
	uint32 retcode = 12;
	uint32 visitor_id = 9;
	ItemList reward = 6;
}
message GetTrainVisitorBehaviorCsReq {
	repeated uint32 OIFNLNBKDMA = 14;
}
message GetTrainVisitorBehaviorScRsp {
	repeated TrainVisitorBehavior ECFOPDHGKFB = 6;
	uint32 retcode = 4;
}
message TrainRefreshTimeNotify {
	uint64 AKALBJECJIK = 13;
}
message TrainVisitorRewardSendNotify {
	uint32 visitor_id = 5;
	ItemList reward = 1;
	TrainVisitorRewardSendType type = 10;
}

message HGLKMJFEHMB {
	repeated uint32 EDHHGCPDKIK = 8;
	bool IJABKDEPGMA = 10;
	uint32 visitor_id = 4;
	uint32 OPAOKGJBOOE = 5;
	TrainVisitorStatus status = 6;
}
message GetTrainVisitorRegisterCsReq {
	TrainVisitorRegisterGetType type = 5;
}
message GetTrainVisitorRegisterScRsp {
	repeated HGLKMJFEHMB FDMFKALJBAJ = 9;
	repeated uint32 FAMHPMFOIJH = 1;
	uint32 retcode = 13;
}
message TakeTrainVisitorUntakenBehaviorRewardCsReq {
	uint32 visitor_id = 13;
}
message TakeTrainVisitorUntakenBehaviorRewardScRsp {
	uint32 visitor_id = 9;
	uint32 retcode = 12;
	repeated uint32 EDHHGCPDKIK = 4;
}
message ShowNewSupplementVisitorCsReq {
	repeated uint32 FAMHPMFOIJH = 8;
}
message ShowNewSupplementVisitorScRsp {
	uint32 retcode = 15;
}

enum CmdTravelBrochure {
	CmdTravelBrochureNone = 0;
	CmdTravelBrochureApplyPasterListScRsp = 6490;
	CmdTravelBrochureUpdatePasterPosCsReq = 6407;
	CmdTravelBrochureGetDataCsReq = 6410;
	CmdTravelBrochureSetCustomValueCsReq = 6463;
	CmdTravelBrochureSelectMessageCsReq = 6479;
	CmdTravelBrochureSetCustomValueScRsp = 6467;
	CmdTravelBrochureUpdatePasterPosScRsp = 6439;
	CmdTravelBrochureRemovePasterCsReq = 6441;
	CmdTravelBrochureSelectMessageScRsp = 6402;
	CmdTravelBrochureApplyPasterCsReq = 6497;
	CmdTravelBrochureRemovePasterScRsp = 6455;
	CmdTravelBrochurePageUnlockScNotify = 6498;
	CmdTravelBrochureSetPageDescStatusCsReq = 6472;
	CmdTravelBrochureApplyPasterScRsp = 6406;
	CmdTravelBrochurePageResetCsReq = 6436;
	CmdTravelBrochurePageResetScRsp = 6478;
	CmdTravelBrochureSetPageDescStatusScRsp = 6494;
	CmdTravelBrochureGetPasterScNotify = 6416;
	CmdTravelBrochureApplyPasterListCsReq = 6474;
	CmdTravelBrochureGetDataScRsp = 6405;
}

enum HGKKPPLJBOI {
	PAGE_NONE = 0;
	PAGE_UNLOCKED = 1;
	PAGE_INTERACTED = 2;
}

enum DCJAOPDINOI {
	PAGE_DESC_NONE = 0;
	PAGE_DESC_SHOW_DETAIL = 1;
	PAGE_DESC_COLLAPSE = 2;
}

message NHBDDINFKOH {
	uint32 IIMOPLCFHAH = 8;
	uint32 item_id = 12;
	uint64 unique_id = 4;
	int32 IEAGBPEMFLG = 9;
	int32 LLJAEGOBHMP = 15;
	uint32 KBCDECDNEFM = 3;
}

message KCHJHCLJOCK {
	uint32 CPODEJOFPDD = 2;
	repeated NHBDDINFKOH HJBPKCFKHLI = 4;
	HGKKPPLJBOI CLFGFABOIOP = 10;
	DCJAOPDINOI EMBKICMEFCO = 11;
	uint32 DIPHGGHFMCP = 7;
}
message TravelBrochureGetDataCsReq {
}
message TravelBrochureGetDataScRsp {
	uint32 custom_value = 15;
	uint32 retcode = 8;
	map<uint32, KCHJHCLJOCK> MIBCLBGMDLA = 5;
	map<uint32, uint32> FKBBOMHEKPE = 9;
}
message TravelBrochurePageUnlockScNotify {
	uint32 CPODEJOFPDD = 15;
}
message TravelBrochureSelectMessageCsReq {
	uint32 DIPHGGHFMCP = 14;
	uint32 CPODEJOFPDD = 13;
}
message TravelBrochureSelectMessageScRsp {
	uint32 retcode = 13;
	ItemList reward = 8;
	KCHJHCLJOCK CAGGLKLIIMF = 11;
}
message TravelBrochureApplyPasterCsReq {
	uint32 KBCDECDNEFM = 15;
	uint32 item_id = 10;
	uint32 CPODEJOFPDD = 3;
	int32 IEAGBPEMFLG = 11;
	uint32 IIMOPLCFHAH = 1;
	int32 LLJAEGOBHMP = 7;
}
message TravelBrochureApplyPasterScRsp {
	KCHJHCLJOCK CAGGLKLIIMF = 6;
	uint32 retcode = 5;
}
message TravelBrochureRemovePasterCsReq {
	uint32 item_id = 7;
	uint64 unique_id = 6;
	uint32 CPODEJOFPDD = 2;
}
message TravelBrochureRemovePasterScRsp {
	uint32 retcode = 2;
	KCHJHCLJOCK CAGGLKLIIMF = 13;
}
message TravelBrochureUpdatePasterPosCsReq {
	uint64 unique_id = 9;
	uint32 item_id = 14;
	int32 IEAGBPEMFLG = 2;
	int32 LLJAEGOBHMP = 15;
	uint32 CPODEJOFPDD = 4;
	uint32 IIMOPLCFHAH = 8;
	uint32 KBCDECDNEFM = 1;
}
message TravelBrochureUpdatePasterPosScRsp {
	uint32 retcode = 13;
	KCHJHCLJOCK CAGGLKLIIMF = 3;
}
message TravelBrochureGetPasterScNotify {
	uint32 num = 10;
	uint32 FKKOBDMFHIL = 13;
}

message GKDIHIFFHFD {
	uint32 num = 8;
	uint32 FKKOBDMFHIL = 9;
}
message TravelBrochureSetCustomValueCsReq {
	uint32 value = 3;
}
message TravelBrochureSetCustomValueScRsp {
	uint32 retcode = 4;
}
message TravelBrochureSetPageDescStatusCsReq {
	uint32 CPODEJOFPDD = 13;
	DCJAOPDINOI GEIBGFDENJA = 11;
}
message TravelBrochureSetPageDescStatusScRsp {
	uint32 retcode = 9;
}
message TravelBrochurePageResetCsReq {
	uint32 CPODEJOFPDD = 6;
}
message TravelBrochurePageResetScRsp {
	KCHJHCLJOCK CAGGLKLIIMF = 9;
	uint32 retcode = 13;
}

message KBJPHLNAPGI {
	uint32 item_id = 13;
	uint32 IIMOPLCFHAH = 15;
	int32 LLJAEGOBHMP = 12;
	uint32 KBCDECDNEFM = 5;
	int32 IEAGBPEMFLG = 2;
}
message TravelBrochureApplyPasterListCsReq {
	repeated KBJPHLNAPGI GEDGLNCPGGN = 3;
	uint32 CPODEJOFPDD = 8;
}
message TravelBrochureApplyPasterListScRsp {
	KCHJHCLJOCK CAGGLKLIIMF = 8;
	uint32 retcode = 1;
}

enum CmdTreasureDungeonType {
	CmdTreasureDungeonTypeNone = 0;
	CmdOpenTreasureDungeonGridCsReq = 4463;
	CmdFightTreasureDungeonMonsterScRsp = 4494;
	CmdOpenTreasureDungeonGridScRsp = 4467;
	CmdInteractTreasureDungeonGridScRsp = 4478;
	CmdTreasureDungeonFinishScNotify = 4405;
	CmdFightTreasureDungeonMonsterCsReq = 4472;
	CmdUseTreasureDungeonItemScRsp = 4490;
	CmdQuitTreasureDungeonScRsp = 4462;
	CmdGetTreasureDungeonActivityDataCsReq = 4407;
	CmdInteractTreasureDungeonGridCsReq = 4436;
	CmdEnterTreasureDungeonCsReq = 4416;
	CmdTreasureDungeonDataScNotify = 4410;
	CmdGetTreasureDungeonActivityDataScRsp = 4439;
	CmdQuitTreasureDungeonCsReq = 4454;
	CmdEnterTreasureDungeonScRsp = 4426;
	CmdUseTreasureDungeonItemCsReq = 4474;
}

enum IMKNBJCOIOP {
	TREASURE_DUNGEON_RECORD_NONE = 0;
	TREASURE_DUNGEON_RECORD_ADD_HP = 1;
	TREASURE_DUNGEON_RECORD_SUB_HP = 2;
	TREASURE_DUNGEON_RECORD_SUB_HP_NO_EXPLORE = 3;
	TREASURE_DUNGEON_RECORD_ADD_ATTACK = 5;
	TREASURE_DUNGEON_RECORD_ADD_DEFENCE = 6;
	TREASURE_DUNGEON_RECORD_ADD_EXPLORE = 9;
	TREASURE_DUNGEON_RECORD_SUB_EXPLORE = 10;
	TREASURE_DUNGEON_RECORD_ADD_EXPLORE_OVERFLOW = 11;
	TREASURE_DUNGEON_RECORD_SUMMON = 15;
	TREASURE_DUNGEON_RECORD_KILL = 16;
	TREASURE_DUNGEON_RECORD_ADD_TRIAL_AVATAR = 20;
	TREASURE_DUNGEON_RECORD_ADD_BUFF = 24;
	TREASURE_DUNGEON_RECORD_UNLOCK_DOOR = 25;
	TREASURE_DUNGEON_RECORD_ENEMY_ENHANCE = 27;
	TREASURE_DUNGEON_RECORD_ENEMY_WEAKEN = 28;
	TREASURE_DUNGEON_RECORD_ENEMY_AURA_REMOVE = 29;
	TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_RUN = 30;
	TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_KILL = 31;
	TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_SUCCESS = 33;
	TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_FAIL = 34;
	TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_EXPLORE = 35;
	TREASURE_DUNGEON_RECORD_BATTLE_BUFF_OPEN_GRID = 36;
	TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_ITEM = 37;
	TREASURE_DUNGEON_RECORD_AVATAR_DEAD = 40;
	TREASURE_DUNGEON_RECORD_TRIAL_AVATAR_DEAD = 41;
	TREASURE_DUNGEON_RECORD_ALL_AVATAR_DEAD = 42;
	TREASURE_DUNGEON_RECORD_OPEN_ITEM_CHEST = 43;
}

message INJFOHNJGMG {
	IMKNBJCOIOP type = 15;
	uint32 ILHGNEPLODM = 10;
	uint32 NCLOMNEHPMJ = 1;
	uint32 JELMCJBICJN = 11;
	uint32 EGKDINMMENA = 3;
}
message TreasureDungeonDataScNotify {
	KLCKNKLPONM DLEJPJJCELJ = 15;
}
message TreasureDungeonFinishScNotify {
	map<uint32, uint32> JBCGKLDMHNL = 13;
	uint32 NLMDEMOHBOO = 7;
	uint32 PIKAPDJHGND = 11;
	bool is_win = 2;
	uint32 AECNCDPJPDG = 6;
	map<uint32, uint32> KGMMPGFGODJ = 10;
	uint32 HOHHBIHFJEH = 14;
}

message KLCKNKLPONM {
	uint32 PHHKBAENBMM = 8;
	uint32 JAFNPNMOHCM = 10;
	repeated INJFOHNJGMG BBCKFJIHIDM = 12;
	repeated LKCMFEAAHHM MKOAMBMKDID = 2;
	repeated ENBNFOLCDIE buff_list = 1906;
	repeated PCAIGNJKAFA GFFOJCCKLFM = 2023;
	bool NMFAPGOLODJ = 163;
	uint32 map_id = 9;
	bool CFDPDENPPDH = 432;
	uint32 NLMDEMOHBOO = 3;
	bool NODBPKHOJEC = 29;
	repeated LHANBGNJCIF item_list = 1544;
	repeated LKHHGJPPMPP KJJOMEPHJEE = 868;
	uint32 FCJECKCICKB = 1;
	uint32 PIKAPDJHGND = 14;
	repeated PCAIGNJKAFA avatar_list = 638;
	uint32 IIALGLDDNAD = 464;
	uint32 NCBHADLOAGA = 4;
}

message LHANBGNJCIF {
	uint32 item_id = 4;
	uint32 item_count = 10;
}

message PCAIGNJKAFA {
	SpBarInfo sp_bar = 2;
	uint32 avatar_type = 3;
	uint32 avatar_id = 13;
	uint32 EAJLJNBNPNP = 5;
	uint32 hp = 7;
}

message LKHHGJPPMPP {
	uint32 avatar_id = 14;
	uint32 avatar_type = 1;
}

message ENBNFOLCDIE {
	uint32 buff_id = 7;
	uint32 AKAHNMLNEFN = 15;
}

message LKCMFEAAHHM {
	repeated GGGCOCPGBBH buff_list = 1757;
	uint32 OLLHOBHDDEN = 13;
	bool DEMNCGLLJCP = 9;
	bool LIMMILEAPJM = 11;
	bool KNLFELDECAL = 10;
	bool HEMJHDOEEBL = 7;
	uint32 MONHIBBPKEE = 12;
	uint32 HFNHLCFNHKD = 6;
}

message GGGCOCPGBBH {
	uint32 LEAAEBAFCHP = 13;
	uint32 buff_id = 14;
	uint32 HFNHLCFNHKD = 3;
	uint32 EGKDINMMENA = 10;
	uint32 ECGHNFCCBJJ = 2;
}

message ABHFABFGPOF {
	uint32 FCJECKCICKB = 6;
	bool BIINNCNDPCG = 7;
	uint32 JAFNPNMOHCM = 14;
	bool CLOONOIFEFO = 1;
	uint32 PIKAPDJHGND = 13;
	uint32 NKHKDJKEGDH = 2;
	uint32 NLMDEMOHBOO = 10;
}
message GetTreasureDungeonActivityDataCsReq {
}
message GetTreasureDungeonActivityDataScRsp {
	repeated ABHFABFGPOF HIOOKMOANDN = 3;
	uint32 retcode = 8;
}
message EnterTreasureDungeonCsReq {
	repeated JACKEJLKJNA avatar_list = 2;
	uint32 NLMDEMOHBOO = 11;
}
message EnterTreasureDungeonScRsp {
	KLCKNKLPONM DLEJPJJCELJ = 1;
	uint32 retcode = 15;
}
message OpenTreasureDungeonGridCsReq {
	uint32 HFNHLCFNHKD = 4;
	uint32 NLMDEMOHBOO = 1;
}
message OpenTreasureDungeonGridScRsp {
	uint32 retcode = 7;
	KLCKNKLPONM DLEJPJJCELJ = 6;
}
message InteractTreasureDungeonGridCsReq {
	uint32 NLMDEMOHBOO = 6;
	uint32 display_value = 2;
	uint32 HFNHLCFNHKD = 4;
}
message InteractTreasureDungeonGridScRsp {
	uint32 retcode = 15;
	KLCKNKLPONM DLEJPJJCELJ = 8;
}
message UseTreasureDungeonItemCsReq {
	uint32 item_id = 15;
	uint32 HFNHLCFNHKD = 10;
	uint32 NLMDEMOHBOO = 2;
}
message UseTreasureDungeonItemScRsp {
	uint32 retcode = 11;
	KLCKNKLPONM DLEJPJJCELJ = 1;
}

message JACKEJLKJNA {
	AvatarType avatar_type = 13;
	uint32 avatar_id = 6;
}
message FightTreasureDungeonMonsterCsReq {
	uint32 NLMDEMOHBOO = 14;
	uint32 HFNHLCFNHKD = 8;
	repeated JACKEJLKJNA avatar_list = 12;
}
message FightTreasureDungeonMonsterScRsp {
	SceneBattleInfo battle_info = 9;
	uint32 retcode = 15;
}
message QuitTreasureDungeonCsReq {
	uint32 NLMDEMOHBOO = 15;
	bool PCPDFJHDJCC = 4;
}
message QuitTreasureDungeonScRsp {
	uint32 retcode = 11;
}

enum CmdTutorialType {
	CmdTutorialTypeNone = 0;
	CmdUnlockTutorialCsReq = 1679;
	CmdFinishTutorialGuideCsReq = 1607;
	CmdGetTutorialGuideCsReq = 1698;
	CmdGetTutorialScRsp = 1605;
	CmdUnlockTutorialGuideScRsp = 1606;
	CmdFinishTutorialScRsp = 1655;
	CmdGetTutorialCsReq = 1610;
	CmdGetTutorialGuideScRsp = 1653;
	CmdFinishTutorialCsReq = 1641;
	CmdUnlockTutorialGuideCsReq = 1697;
	CmdFinishTutorialGuideScRsp = 1639;
	CmdUnlockTutorialScRsp = 1602;
}

enum TutorialStatus {
	TUTORIAL_NONE = 0;
	TUTORIAL_UNLOCK = 1;
	TUTORIAL_FINISH = 2;
}

enum MPJPPGHFHEH {
	TUTORIAL_FINISH_TYPE_NONE = 0;
	TUTORIAL_FINISH_TYPE_MANUAL = 1;
	TUTORIAL_FINISH_TYPE_AUTOMATIC = 2;
}

message Tutorial {
	uint32 id = 13;
	TutorialStatus status = 12;
}

message TutorialGuide {
	uint32 id = 5;
	TutorialStatus status = 15;
}
message GetTutorialCsReq {
}
message GetTutorialScRsp {
	uint32 retcode = 9;
	repeated Tutorial tutorial_list = 5;
}
message GetTutorialGuideCsReq {
}
message GetTutorialGuideScRsp {
	repeated TutorialGuide tutorial_guide_list = 1;
	uint32 retcode = 14;
}
message UnlockTutorialCsReq {
	uint32 tutorial_id = 3;
}
message UnlockTutorialScRsp {
	Tutorial tutorial = 4;
	uint32 retcode = 11;
}
message UnlockTutorialGuideCsReq {
	uint32 group_id = 1;
}
message UnlockTutorialGuideScRsp {
	uint32 retcode = 9;
	TutorialGuide tutorial_guide = 5;
}
message FinishTutorialCsReq {
	uint32 tutorial_id = 5;
	MPJPPGHFHEH BMLEMOBCNCM = 11;
}
message FinishTutorialScRsp {
	Tutorial tutorial = 6;
	uint32 retcode = 3;
}
message FinishTutorialGuideCsReq {
	uint32 group_id = 5;
}
message FinishTutorialGuideScRsp {
	TutorialGuide tutorial_guide = 15;
	uint32 retcode = 14;
	ItemList reward = 13;
}

enum CmdWaypointType {
	CmdWaypointTypeNone = 0;
	CmdGetWaypointScRsp = 405;
	CmdWaypointShowNewCsNotify = 497;
	CmdGetChapterCsReq = 479;
	CmdGetChapterScRsp = 402;
	CmdGetWaypointCsReq = 410;
	CmdTakeChapterRewardScRsp = 441;
	CmdSetCurWaypointScRsp = 453;
	CmdTakeChapterRewardCsReq = 406;
	CmdSetCurWaypointCsReq = 498;
}

enum MHHLJFEJGNM {
	WAYPOINT_TYPE_NONE = 0;
	WAYPOINT_TYPE_STAGE = 1;
	WAYPOINT_TYPE_PLOT = 2;
}

enum OBFAICFOGMP {
	WAYPOINT_UNLOCK_NONE = 0;
	WAYPOINT_UNLOCK_PRE = 1;
	WAYPOINT_UNLOCK_LEVEL = 2;
}

message Waypoint {
	uint32 id = 7;
	bool is_new = 3;
	uint32 KHFGDKNGFDP = 2;
}

message ChapterBrief {
	uint32 id = 9;
	bool is_new = 5;
	uint32 NCKELKEGBGL = 8;
	repeated uint32 taken_reward_id_list = 14;
}

message Chapter {
	ChapterBrief GOKHJLMPNFF = 14;
	repeated Waypoint KONBFJPINHN = 13;
}
message GetWaypointCsReq {
	uint32 KIEKJEFFPHK = 4;
}
message GetWaypointScRsp {
	uint32 HOEAHBIFKCI = 12;
	uint32 retcode = 7;
	Chapter FJJFLKCMIDJ = 1;
}
message SetCurWaypointCsReq {
	uint32 NKCMNAFAIOI = 12;
}
message SetCurWaypointScRsp {
	uint32 HOEAHBIFKCI = 12;
	uint32 retcode = 4;
}
message GetChapterCsReq {
}
message GetChapterScRsp {
	uint32 retcode = 1;
	repeated ChapterBrief IELPICLBBJI = 9;
	uint32 HOEAHBIFKCI = 15;
}
message WaypointShowNewCsNotify {
	uint32 NKCMNAFAIOI = 3;
	uint32 KIEKJEFFPHK = 14;
}
message TakeChapterRewardCsReq {
	uint32 KIEKJEFFPHK = 12;
	uint32 AKDGHHNKLEJ = 8;
}
message TakeChapterRewardScRsp {
	uint32 AKDGHHNKLEJ = 10;
	uint32 KIEKJEFFPHK = 2;
	uint32 retcode = 12;
}

enum CmdWolfBroType {
	CmdWolfBroTypeNone = 0;
	CmdQuitWolfBroGameCsReq = 6528;
	CmdWolfBroGameExplodeMonsterCsReq = 6550;
	CmdWolfBroGameUseBulletCsReq = 6518;
	CmdWolfBroGameUseBulletScRsp = 6513;
	CmdWolfBroGameActivateBulletScRsp = 6506;
	CmdQuitWolfBroGameScRsp = 6527;
	CmdRestoreWolfBroGameArchiveCsReq = 6502;
	CmdRestoreWolfBroGameArchiveScRsp = 6501;
	CmdArchiveWolfBroGameScRsp = 6530;
	CmdArchiveWolfBroGameCsReq = 6546;
	CmdStartWolfBroGameScRsp = 6521;
	CmdWolfBroGameDataChangeScNotify = 6543;
	CmdGetWolfBroGameDataCsReq = 6542;
	CmdWolfBroGameExplodeMonsterScRsp = 6537;
	CmdGetWolfBroGameDataScRsp = 6504;
	CmdWolfBroGamePickupBulletCsReq = 6532;
	CmdWolfBroGameActivateBulletCsReq = 6505;
	CmdWolfBroGamePickupBulletScRsp = 6529;
	CmdStartWolfBroGameCsReq = 6523;
}

message HFPFFJIMCKM {
	bool BDNFLICNFHN = 10;
	MotionInfo motion = 2;
	uint32 LKJMLIDAODM = 6;
	repeated Vector OPCLDNLLNFH = 9;
}

message HEHPIOGGIEG {
	string uuid = 6;
	HFPFFJIMCKM HEFJEJHOJEA = 15;
	bool BDNFLICNFHN = 5;
	repeated Vector OPCLDNLLNFH = 7;
	uint32 id = 12;
	uint32 LKJMLIDAODM = 8;
}
message StartWolfBroGameCsReq {
	MotionInfo motion = 6;
	uint32 id = 7;
	GroupStateInfo group_state_info = 14;
	bool DJFCMLIPDAB = 15;
}
message StartWolfBroGameScRsp {
	uint32 retcode = 11;
	HEHPIOGGIEG DNPLIHJGJIH = 2;
}
message ArchiveWolfBroGameCsReq {
	MotionInfo motion = 6;
	uint32 id = 3;
}
message ArchiveWolfBroGameScRsp {
	HEHPIOGGIEG DNPLIHJGJIH = 10;
	uint32 retcode = 6;
}
message RestoreWolfBroGameArchiveCsReq {
	uint32 id = 2;
}
message RestoreWolfBroGameArchiveScRsp {
	HEHPIOGGIEG DNPLIHJGJIH = 7;
	uint32 retcode = 9;
}
message QuitWolfBroGameCsReq {
	uint32 id = 14;
}
message QuitWolfBroGameScRsp {
	HEHPIOGGIEG DNPLIHJGJIH = 11;
	uint32 retcode = 3;
}
message GetWolfBroGameDataCsReq {
	uint32 id = 12;
}
message GetWolfBroGameDataScRsp {
	HEHPIOGGIEG DNPLIHJGJIH = 9;
	uint32 retcode = 11;
}
message WolfBroGameDataChangeScNotify {
	HEHPIOGGIEG DNPLIHJGJIH = 12;
}
message WolfBroGameUseBulletCsReq {
	Vector MIBCFIMMIKG = 4;
	repeated uint32 assist_monster_entity_id_list = 2;
}
message WolfBroGameUseBulletScRsp {
	uint32 retcode = 9;
	HEHPIOGGIEG DNPLIHJGJIH = 12;
}
message WolfBroGamePickupBulletCsReq {
	Vector MIBCFIMMIKG = 6;
}
message WolfBroGamePickupBulletScRsp {
	HEHPIOGGIEG DNPLIHJGJIH = 5;
	uint32 retcode = 14;
}
message WolfBroGameActivateBulletCsReq {
	uint32 config_id = 13;
	uint32 group_id = 5;
}
message WolfBroGameActivateBulletScRsp {
	uint32 retcode = 6;
}
message WolfBroGameExplodeMonsterCsReq {
	repeated uint32 assist_monster_entity_id_list = 4;
}
message WolfBroGameExplodeMonsterScRsp {
	uint32 retcode = 14;
}

enum CmdWorldUnlockType {
	CmdWorldUnlockTypeNone = 0;
	CmdWorldUnlockScRsp = 7627;
	CmdWorldUnlockCsReq = 7626;
}
message WorldUnlockCsReq {
	uint32 NPEBNEKDLEN = 2;
}
message WorldUnlockScRsp {
	uint32 retcode = 1;
	uint32 NPEBNEKDLEN = 5;
}

enum DJEBIMHNPBM {
	DISPATCH_TYPE_NONE = 0;
	DISPATCH_TYPE_BY_ADDR = 1;
	DISPATCH_TYPE_BY_MOD = 2;
	DISPATCH_TYPE_BY_RAND = 3;
	DISPATCH_TYPE_BY_CHASH = 4;
	DISPATCH_TYPE_BY_STICKY_SESSION = 5;
	DISPATCH_TYPE_BY_OBJECT = 6;
}

message LNKFBAEDODI {
	uint32 DGHNGBLHAIL = 1;
	uint32 authkey_ver = 2;
	uint32 GKJKKDAOPAM = 3;
	uint32 OLCCIMLMMAD = 4;
	uint32 ELHEPMNLAPG = 5;
	uint32 PIAMLFBIHPI = 6;
	uint32 CFCAJEMDFKJ = 7;
	uint32 FEPHHKIGOOP = 8;
	uint32 MOPDHNENCPC = 9;
	uint32 EDFPCONIKDC = 10;
	uint32 id = 11;
	uint32 HOGHLBEEDGA = 12;
	uint32 BIPFIFCJCBN = 13;
}

